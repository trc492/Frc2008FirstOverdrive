MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Thu Nov 13 22:47:32 2008


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	TITLE		adc.c                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	                  .tmpdata section.                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           #include "adc.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           #include "TRCfunctions.h"                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           unsigned char num_adc_channels;                                                  C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           unsigned char adc_result_divisor;                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
0040e6   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
0040e8   ffe6                                                                                                               
0040ea   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0040ec   ffd9                                                                                                               
0040ee   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned char i;                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// interface.                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0040f0   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
0040f2   0102     MOVLB     0x2                                                                                             
0040f4   6f8b     MOVWF     0x8b,0x1                                                                                        
0040f6   6b8c     CLRF      0x8c,0x1                                                                                        
0040f8   0e02     MOVLW     0x2            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
0040fa   6f8f     MOVWF     0x8f,0x1                                                                                        
0040fc   0e01     MOVLW     0x1            	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
0040fe   6f90     MOVWF     0x90,0x1                                                                                        
004100   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004102   6f8d     MOVWF     0x8d,0x1                                                                                        
004104   6b8e     CLRF      0x8e,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
004106   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
004108   518f     MOVF      0x8f,0x0,0x1                                                                                    
00410a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00410c   e210     BC        0x412e                                                                                          
00412a   2adf     INCF      0xdf,0x1,0x0                                                                                    
00412c   d7ed     BRA       0x4108                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
00410e   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
004110   0d04     MULLW     0x4                                                                                             
004112   cff3     MOVFF     0xff3,0xfe9                                                                                     
004114   ffe9                                                                                                               
004116   cff4     MOVFF     0xff4,0xfea                                                                                     
004118   ffea                                                                                                               
00411a   0e91     MOVLW     0x91                                                                                            
00411c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00411e   0e02     MOVLW     0x2                                                                                             
004120   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004122   6aee     CLRF      0xee,0x0                                                                                        
004124   6aee     CLRF      0xee,0x0                                                                                        
004126   6aee     CLRF      0xee,0x0                                                                                        
004128   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// start a new sample set                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
00412e   6b9d     CLRF      0x9d,0x1       	samples = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004130   6b9e     CLRF      0x9e,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// start at ADC channel zero                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004132   6b9f     CLRF      0x9f,0x1       	channel = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\trcCode\Repository\Summer\Oceanus\adc.c
004134   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004136   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
004138   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	#else                                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                            	else                                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// in the conversion result register                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
00413a   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
00413c   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// ADC interrupt is low priority                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
00413e   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\trcCode\Repository\Summer\Oceanus\adc.c
004140   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable the ADC interrupt                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
004142   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// analog to digital conversions                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004144   c28b     MOVFF     0x28b,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004146   ffe6                                                                                                               
004148   c28c     MOVFF     0x28c,0xfe6                                                                                     
00414a   ffe6                                                                                                               
00414c   d814     RCALL     0x4176                                                                                          
00414e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004150   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004152   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004154   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004156   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004158   ffd9                                                                                                               
00415a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
00415c   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
00415e   ffe6                                                                                                               
004160   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004162   ffd9                                                                                                               
004164   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned char i;                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable timer 2                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
004166   d85f     RCALL     0x4226         	Disable_Timer_2();                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable the ADC interrupt                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004168   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\trcCode\Repository\Summer\Oceanus\adc.c
00416a   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
00416c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
00416e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004170   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004172   ffd9                                                                                                               
004174   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
004176   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004178   ffe6                                                                                                               
00417a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00417c   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
00417e   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
004180   cfdb     MOVFF     0xfdb,0x36                                                                                      
004182   f036                                                                                                               
004184   0efe     MOVLW     0xfe                                                                                            
004186   cfdb     MOVFF     0xfdb,0x37                                                                                      
004188   f037                                                                                                               
00418a   5036     MOVF      0x36,0x0,0x0                                                                                    
00418c   e102     BNZ       0x4192                                                                                          
00418e   0e19     MOVLW     0x19                                                                                            
004190   1837     XORWF     0x37,0x0,0x0                                                                                    
004192   e03b     BZ        0x420a                                                                                          
004194   0e80     MOVLW     0x80                                                                                            
004196   1836     XORWF     0x36,0x0,0x0                                                                                    
004198   e102     BNZ       0x419e                                                                                          
00419a   0e0c     MOVLW     0xc                                                                                             
00419c   1837     XORWF     0x37,0x0,0x0                                                                                    
00419e   e030     BZ        0x4200                                                                                          
0041a0   0e40     MOVLW     0x40                                                                                            
0041a2   1836     XORWF     0x36,0x0,0x0                                                                                    
0041a4   e102     BNZ       0x41aa                                                                                          
0041a6   0e06     MOVLW     0x6                                                                                             
0041a8   1837     XORWF     0x37,0x0,0x0                                                                                    
0041aa   e025     BZ        0x41f6                                                                                          
0041ac   0e20     MOVLW     0x20                                                                                            
0041ae   1836     XORWF     0x36,0x0,0x0                                                                                    
0041b0   e102     BNZ       0x41b6                                                                                          
0041b2   0e03     MOVLW     0x3                                                                                             
0041b4   1837     XORWF     0x37,0x0,0x0                                                                                    
0041b6   e01a     BZ        0x41ec                                                                                          
0041b8   0e90     MOVLW     0x90                                                                                            
0041ba   1836     XORWF     0x36,0x0,0x0                                                                                    
0041bc   e102     BNZ       0x41c2                                                                                          
0041be   0e01     MOVLW     0x1                                                                                             
0041c0   1837     XORWF     0x37,0x0,0x0                                                                                    
0041c2   e00f     BZ        0x41e2                                                                                          
0041c4   0ec8     MOVLW     0xc8                                                                                            
0041c6   1836     XORWF     0x36,0x0,0x0                                                                                    
0041c8   e101     BNZ       0x41cc                                                                                          
0041ca   5037     MOVF      0x37,0x0,0x0                                                                                    
0041cc   e005     BZ        0x41d8                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 200:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0041d8   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0041da   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
0041dc   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0041de   6ecb     MOVWF     0xcb,0x0                                                                                        
0041e0   d019     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 400:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0041e2   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0041e4   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
0041e6   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0041e8   6ecb     MOVWF     0xcb,0x0                                                                                        
0041ea   d014     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 800:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0041ec   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0041ee   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
0041f0   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
0041f2   6ecb     MOVWF     0xcb,0x0                                                                                        
0041f4   d00f     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 1600:                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0041f6   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0041f8   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
0041fa   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0041fc   6ecb     MOVWF     0xcb,0x0                                                                                        
0041fe   d00a     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 3200:                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004200   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
004202   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
004204   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
004206   6ecb     MOVWF     0xcb,0x0                                                                                        
004208   d005     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		case 6400:                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
00420a   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
00420c   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
00420e   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004210   6ecb     MOVWF     0xcb,0x0                                                                                        
004212   d000     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		default:                                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// if a non-supported rate is specified,                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0041ce   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0041d0   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\trcCode\Repository\Summer\Oceanus\adc.c
0041d2   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0041d4   6ecb     MOVWF     0xcb,0x0                                                                                        
0041d6   d01e     BRA       0x4214         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004214   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004216   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\trcCode\Repository\Summer\Oceanus\adc.c
004218   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
00421a   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable timer 2                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
00421c   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
00421e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004220   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004222   ffd9                                                                                                               
004224   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           void Disable_Timer_2(void)                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable the timer 2 interrupt                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004226   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable timer 2                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
004228   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
00422a   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *					expressed in "data number" units.                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
00422c   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\trcCode\Repository\Summer\Oceanus\adc.c
00422e   ffe6                                                                                                               
004230   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004232   ffd9                                                                                                               
004234   0e02     MOVLW     0x2                                                                                             
004236   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004238   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
00423a   cfdb     MOVFF     0xfdb,0x0                                                                                       
00423c   f000                                                                                                               
00423e   0102     MOVLB     0x2                                                                                             
004240   518f     MOVF      0x8f,0x0,0x1                                                                                    
004242   80d8     BSF       0xd8,0x0,0x0                                                                                    
004244   5400     SUBFWB    0x0,0x0,0x0                                                                                     
004246   e312     BNC       0x426c                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// disable the ADC interrupt                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
004248   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\trcCode\Repository\Summer\Oceanus\adc.c
00424a   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
00424c   04db     DECF      0xdb,0x0,0x0                                                                                    
00424e   6ee9     MOVWF     0xe9,0x0                                                                                        
004250   6aea     CLRF      0xea,0x0                                                                                        
004252   90d8     BCF       0xd8,0x0,0x0                                                                                    
004254   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004256   36ea     RLCF      0xea,0x1,0x0                                                                                    
004258   0e99     MOVLW     0x99                                                                                            
00425a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00425c   0e02     MOVLW     0x2                                                                                             
00425e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004260   cfee     MOVFF     0xfee,0xfde                                                                                     
004262   ffde                                                                                                               
004264   cfed     MOVFF     0xfed,0xfdd                                                                                     
004266   ffdd                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// enable the ADC interrupt                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004268   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
00426a   d002     BRA       0x4270         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// bad channel number; return zero		//-1 is more distinct                      C:\trcCode\Repository\Summer\Oceanus\adc.c
00426c   68de     SETF      0xde,0x0       		temp_adc_result = -1;                                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
00426e   68dd     SETF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004270   cfde     MOVFF     0xfde,0x0      	return(temp_adc_result);                                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
004272   f000                                                                                                               
004274   cfdd     MOVFF     0xfdd,0x1                                                                                       
004276   f001                                                                                                               
004278   c000     MOVFF     0x0,0xff3                                                                                       
00427a   fff3                                                                                                               
00427c   c001     MOVFF     0x1,0xff4                                                                                       
00427e   fff4                                                                                                               
004280   d000     BRA       0x4282                                                                                          
004282   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004284   ffe1                                                                                                               
004286   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004288   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00428a   ffd9                                                                                                               
00428c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
00428e   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
004290   ffe6                                                                                                               
004292   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004294   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004296   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\trcCode\Repository\Summer\Oceanus\adc.c
004298   cfdb     MOVFF     0xfdb,0x0                                                                                       
00429a   f000                                                                                                               
00429c   0efe     MOVLW     0xfe                                                                                            
00429e   cfdb     MOVFF     0xfdb,0x1                                                                                       
0042a0   f001                                                                                                               
0042a2   6a02     CLRF      0x2,0x0                                                                                         
0042a4   6a03     CLRF      0x3,0x0                                                                                         
0042a6   0e88     MOVLW     0x88                                                                                            
0042a8   6e39     MOVWF     0x39,0x0                                                                                        
0042aa   0e13     MOVLW     0x13                                                                                            
0042ac   6e3a     MOVWF     0x3a,0x0                                                                                        
0042ae   6a3b     CLRF      0x3b,0x0                                                                                        
0042b0   6a3c     CLRF      0x3c,0x0                                                                                        
0042b2   c000     MOVFF     0x0,0x34                                                                                        
0042b4   f034                                                                                                               
0042b6   c001     MOVFF     0x1,0x35                                                                                        
0042b8   f035                                                                                                               
0042ba   c002     MOVFF     0x2,0x36                                                                                        
0042bc   f036                                                                                                               
0042be   c003     MOVFF     0x3,0x37                                                                                        
0042c0   f037                                                                                                               
0042c2   ec7f     CALL      0x5cfe,0x0                                                                                      
0042c4   f02e                                                                                                               
0042c6   c030     MOVFF     0x30,0x0                                                                                        
0042c8   f000                                                                                                               
0042ca   c031     MOVFF     0x31,0x1                                                                                        
0042cc   f001                                                                                                               
0042ce   c032     MOVFF     0x32,0x2                                                                                        
0042d0   f002                                                                                                               
0042d2   c033     MOVFF     0x33,0x3                                                                                        
0042d4   f003                                                                                                               
0042d6   6a39     CLRF      0x39,0x0                                                                                        
0042d8   0e08     MOVLW     0x8                                                                                             
0042da   6e3a     MOVWF     0x3a,0x0                                                                                        
0042dc   6a3b     CLRF      0x3b,0x0                                                                                        
0042de   6a3c     CLRF      0x3c,0x0                                                                                        
0042e0   c000     MOVFF     0x0,0x34                                                                                        
0042e2   f034                                                                                                               
0042e4   c001     MOVFF     0x1,0x35                                                                                        
0042e6   f035                                                                                                               
0042e8   c002     MOVFF     0x2,0x36                                                                                        
0042ea   f036                                                                                                               
0042ec   c003     MOVFF     0x3,0x37                                                                                        
0042ee   f037                                                                                                               
0042f0   ec65     CALL      0x3eca,0x0                                                                                      
0042f2   f01f                                                                                                               
0042f4   c034     MOVFF     0x34,0x0                                                                                        
0042f6   f000                                                                                                               
0042f8   c035     MOVFF     0x35,0x1                                                                                        
0042fa   f001                                                                                                               
0042fc   c036     MOVFF     0x36,0x2                                                                                        
0042fe   f002                                                                                                               
004300   c037     MOVFF     0x37,0x3                                                                                        
004302   f003                                                                                                               
004304   c000     MOVFF     0x0,0xff3                                                                                       
004306   fff3                                                                                                               
004308   c001     MOVFF     0x1,0xff4                                                                                       
00430a   fff4                                                                                                               
00430c   d000     BRA       0x430e                                                                                          
00430e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
004310   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004312   ffd9                                                                                                               
004314   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:                                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
004316   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\trcCode\Repository\Summer\Oceanus\adc.c
004318   ffe6                                                                                                               
00431a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00431c   ffd9                                                                                                               
00431e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable the ADC interrupt                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004320   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004322   c1ff     MOVFF     0x1ff,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
004324   ffdf                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable the ADC interrupt                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
004326   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004328   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\trcCode\Repository\Summer\Oceanus\adc.c
00432a   d000     BRA       0x432c                                                                                          
00432c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
00432e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004330   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004332   ffd9                                                                                                               
004334   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// disable the ADC interrupt                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
004336   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004338   0101     MOVLB     0x1            	adc_update_count = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
00433a   6bff     CLRF      0xff,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// enable the ADC interrupt                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
00433c   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
00433e   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// start a new analog to digital conversion                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
004340   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
004342   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\adc.c
004344   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
004346   ffe6                                                                                                               
004348   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00434a   ffd9                                                                                                               
00434c   0e05     MOVLW     0x5                                                                                             
00434e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned int adc;                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	int i;                                                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// get conversion results                                                       C:\trcCode\Repository\Summer\Oceanus\adc.c
004350   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
004352   6ede     MOVWF     0xde,0x0                                                                                        
004354   6add     CLRF      0xdd,0x0                                                                                        
004356   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
004358   ffe9                                                                                                               
00435a   cfda     MOVFF     0xfda,0xfea                                                                                     
00435c   ffea                                                                                                               
00435e   50ee     MOVF      0xee,0x0,0x0                                                                                    
004360   6eed     MOVWF     0xed,0x0                                                                                        
004362   6aef     CLRF      0xef,0x0                                                                                        
004364   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\trcCode\Repository\Summer\Oceanus\adc.c
004366   26de     ADDWF     0xde,0x1,0x0                                                                                    
004368   0e00     MOVLW     0x0                                                                                             
00436a   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\trcCode\Repository\Summer\Oceanus\adc.c
00436c   cfde     MOVFF     0xfde,0x0      	accum[channel] += (long)adc;                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
00436e   f000                                                                                                               
004370   cfdd     MOVFF     0xfdd,0x1                                                                                       
004372   f001                                                                                                               
004374   6a02     CLRF      0x2,0x0                                                                                         
004376   6a03     CLRF      0x3,0x0                                                                                         
004378   0102     MOVLB     0x2                                                                                             
00437a   519f     MOVF      0x9f,0x0,0x1                                                                                    
00437c   0d04     MULLW     0x4                                                                                             
00437e   cff3     MOVFF     0xff3,0xfe9                                                                                     
004380   ffe9                                                                                                               
004382   cff4     MOVFF     0xff4,0xfea                                                                                     
004384   ffea                                                                                                               
004386   0e91     MOVLW     0x91                                                                                            
004388   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00438a   0e02     MOVLW     0x2                                                                                             
00438c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00438e   5000     MOVF      0x0,0x0,0x0                                                                                     
004390   26ee     ADDWF     0xee,0x1,0x0                                                                                    
004392   5001     MOVF      0x1,0x0,0x0                                                                                     
004394   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
004396   5002     MOVF      0x2,0x0,0x0                                                                                     
004398   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
00439a   5003     MOVF      0x3,0x0,0x0                                                                                     
00439c   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// increment the ADC channel index                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
00439e   2b9f     INCF      0x9f,0x1,0x1   	channel++;                                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// do we need to wrap around to zero?                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0043a0   518f     MOVF      0x8f,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
0043a2   5d9f     SUBWF     0x9f,0x0,0x1                                                                                    
0043a4   e304     BNC       0x43ae                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
0043a6   6b9f     CLRF      0x9f,0x1       		channel = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0043a8   2b9d     INCF      0x9d,0x1,0x1   		samples++;                                                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
0043aa   0e00     MOVLW     0x0                                                                                             
0043ac   239e     ADDWFC    0x9e,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\trcCode\Repository\Summer\Oceanus\adc.c
0043ae   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\trcCode\Repository\Summer\Oceanus\adc.c
0043b0   c29f     MOVFF     0x29f,0xfdb                                                                                     
0043b2   ffdb                                                                                                               
0043b4   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
0043b6   0d04     MULLW     0x4                                                                                             
0043b8   0e02     MOVLW     0x2                                                                                             
0043ba   cff3     MOVFF     0xff3,0xfdb                                                                                     
0043bc   ffdb                                                                                                               
0043be   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\trcCode\Repository\Summer\Oceanus\adc.c
0043c0   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0043c2   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           	// check to see if we've got a full sample set                                  C:\trcCode\Repository\Summer\Oceanus\adc.c
0043c4   518d     MOVF      0x8d,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\trcCode\Repository\Summer\Oceanus\adc.c
0043c6   5d9d     SUBWF     0x9d,0x0,0x1                                                                                    
0043c8   518e     MOVF      0x8e,0x0,0x1                                                                                    
0043ca   599e     SUBWFB    0x9e,0x0,0x1                                                                                    
0043cc   e201     BC        0x43d0                                                                                          
0043ce   d083     BRA       0x44d6                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// update the ADC result array                                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
0043d0   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
0043d2   6adb     CLRF      0xdb,0x0                                                                                        
0043d4   0e04     MOVLW     0x4                                                                                             
0043d6   6adb     CLRF      0xdb,0x0                                                                                        
0043d8   0e03     MOVLW     0x3                                                                                             
0043da   cfdb     MOVFF     0xfdb,0x0                                                                                       
0043dc   f000                                                                                                               
0043de   0e04     MOVLW     0x4                                                                                             
0043e0   cfdb     MOVFF     0xfdb,0x1                                                                                       
0043e2   f001                                                                                                               
0043e4   0102     MOVLB     0x2                                                                                             
0043e6   518f     MOVF      0x8f,0x0,0x1                                                                                    
0043e8   0100     MOVLB     0x0                                                                                             
0043ea   ae01     BTFSS     0x1,0x7,0x0                                                                                     
0043ec   d002     BRA       0x43f2                                                                                          
0043ee   90d8     BCF       0xd8,0x0,0x0                                                                                    
0043f0   d003     BRA       0x43f8                                                                                          
0043f2   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0043f4   0e00     MOVLW     0x0                                                                                             
0043f6   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0043f8   e23a     BC        0x446e                                                                                          
004462   0e03     MOVLW     0x3                                                                                             
004464   2adb     INCF      0xdb,0x1,0x0                                                                                    
004466   0e04     MOVLW     0x4                                                                                             
004468   e301     BNC       0x446c                                                                                          
00446a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00446c   d7b5     BRA       0x43d8                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
0043fa   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\trcCode\Repository\Summer\Oceanus\adc.c
0043fc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0043fe   ffe9                                                                                                               
004400   0e04     MOVLW     0x4                                                                                             
004402   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004404   ffea                                                                                                               
004406   90d8     BCF       0xd8,0x0,0x0                                                                                    
004408   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00440a   36ea     RLCF      0xea,0x1,0x0                                                                                    
00440c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00440e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004410   36ea     RLCF      0xea,0x1,0x0                                                                                    
004412   0e91     MOVLW     0x91                                                                                            
004414   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004416   0e02     MOVLW     0x2                                                                                             
004418   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00441a   0102     MOVLB     0x2                                                                                             
00441c   5190     MOVF      0x90,0x0,0x1                                                                                    
00441e   0b1f     ANDLW     0x1f                                                                                            
004420   cfee     MOVFF     0xfee,0x0                                                                                       
004422   f000                                                                                                               
004424   cfee     MOVFF     0xfee,0x1                                                                                       
004426   f001                                                                                                               
004428   cfee     MOVFF     0xfee,0x2                                                                                       
00442a   f002                                                                                                               
00442c   cfee     MOVFF     0xfee,0x3                                                                                       
00442e   f003                                                                                                               
004430   e007     BZ        0x4440                                                                                          
004432   90d8     BCF       0xd8,0x0,0x0                                                                                    
004434   3203     RRCF      0x3,0x1,0x0                                                                                     
004436   3202     RRCF      0x2,0x1,0x0                                                                                     
004438   3201     RRCF      0x1,0x1,0x0                                                                                     
00443a   3200     RRCF      0x0,0x1,0x0                                                                                     
00443c   06e8     DECF      0xe8,0x1,0x0                                                                                    
00443e   e1f9     BNZ       0x4432                                                                                          
004440   0e03     MOVLW     0x3                                                                                             
004442   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004444   ffe9                                                                                                               
004446   0e04     MOVLW     0x4                                                                                             
004448   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00444a   ffea                                                                                                               
00444c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00444e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004450   36ea     RLCF      0xea,0x1,0x0                                                                                    
004452   0e99     MOVLW     0x99                                                                                            
004454   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004456   0e02     MOVLW     0x2                                                                                             
004458   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00445a   c000     MOVFF     0x0,0xfee                                                                                       
00445c   ffee                                                                                                               
00445e   c001     MOVFF     0x1,0xfed                                                                                       
004460   ffed                                                                                                               
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\trcCode\Repository\Summer\Oceanus\adc.c
00446e   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
004470   6adb     CLRF      0xdb,0x0                                                                                        
004472   0e04     MOVLW     0x4                                                                                             
004474   6adb     CLRF      0xdb,0x0                                                                                        
004476   0e03     MOVLW     0x3                                                                                             
004478   cfdb     MOVFF     0xfdb,0x0                                                                                       
00447a   f000                                                                                                               
00447c   0e04     MOVLW     0x4                                                                                             
00447e   cfdb     MOVFF     0xfdb,0x1                                                                                       
004480   f001                                                                                                               
004482   0102     MOVLB     0x2                                                                                             
004484   518f     MOVF      0x8f,0x0,0x1                                                                                    
004486   0100     MOVLB     0x0                                                                                             
004488   ae01     BTFSS     0x1,0x7,0x0                                                                                     
00448a   d002     BRA       0x4490                                                                                          
00448c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00448e   d003     BRA       0x4496                                                                                          
004490   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004492   0e00     MOVLW     0x0                                                                                             
004494   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004496   e21a     BC        0x44cc                                                                                          
0044c0   0e03     MOVLW     0x3                                                                                             
0044c2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0044c4   0e04     MOVLW     0x4                                                                                             
0044c6   e301     BNC       0x44ca                                                                                          
0044c8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0044ca   d7d5     BRA       0x4476                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
004498   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
00449a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00449c   ffe9                                                                                                               
00449e   0e04     MOVLW     0x4                                                                                             
0044a0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0044a2   ffea                                                                                                               
0044a4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0044a6   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0044a8   36ea     RLCF      0xea,0x1,0x0                                                                                    
0044aa   90d8     BCF       0xd8,0x0,0x0                                                                                    
0044ac   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0044ae   36ea     RLCF      0xea,0x1,0x0                                                                                    
0044b0   0e91     MOVLW     0x91                                                                                            
0044b2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0044b4   0e02     MOVLW     0x2                                                                                             
0044b6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0044b8   6aee     CLRF      0xee,0x0                                                                                        
0044ba   6aee     CLRF      0xee,0x0                                                                                        
0044bc   6aee     CLRF      0xee,0x0                                                                                        
0044be   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// signal that a fresh sample set is available                                 C:\trcCode\Repository\Summer\Oceanus\adc.c
0044cc   0101     MOVLB     0x1            		adc_update_count++;                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
0044ce   2bff     INCF      0xff,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\adc.c
                                           		// start a fresh sample set                                                    C:\trcCode\Repository\Summer\Oceanus\adc.c
0044d0   0102     MOVLB     0x2            		samples = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\adc.c
0044d2   6b9d     CLRF      0x9d,0x1                                                                                        
0044d4   6b9e     CLRF      0x9e,0x1                                                                                        
                                           	}	                                                                              C:\trcCode\Repository\Summer\Oceanus\adc.c
0044d6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\adc.c
0044d8   ffe1                                                                                                               
0044da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0044dc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0044de   ffd9                                                                                                               
0044e0   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	TITLE:		camera.c                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	DATE:		16-Jan-2007                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				without permission. Thanks.                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	16-Jan-2007  0.2  RKW - Added Virtual_Window() function.                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #include "serial_ports.h"                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #include "camera.h"                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // camera has successfully initialized and should be                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // sending data. You can also force a re-initialization                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // by setting this variable to zero by calling the                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // function Reinitialize_Camera().                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           // camera T packet structure                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					structure with the received tracking information.					                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
002b80   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002b82   ffe6                                                                                                               
002b84   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002b86   ffd9                                                                                                               
002b88   0e04     MOVLW     0x4                                                                                             
002b8a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	unsigned char return_value;                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	unsigned char byte_count;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	unsigned char byte;                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	unsigned char i;                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// initialization process throws an error, retry                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// until it's successfully initializes                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002b8c   0102     MOVLB     0x2            	if(camera_initialized == 0)                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002b8e   51b7     MOVF      0xb7,0x0,0x1                                                                                    
002b90   e10b     BNZ       0x2ba8                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002b92   d8f0     RCALL     0x2d74         		return_value = Initialize_Camera();                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002b94   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// is the camera done initializing and if so,                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// did it initialize without an error?                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002b96   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002b98   e104     BNZ       0x2ba2                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002b9a   0102     MOVLB     0x2            			camera_initialized = 1;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002b9c   0e01     MOVLW     0x1                                                                                             
002b9e   6fb7     MOVWF     0xb7,0x1                                                                                        
                                           			DEBUG(("\r\nCamera: Initialized normally\r\n"));                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// is the camera done initializing and if so,                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// did it return an error?                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002ba0   d003     BRA       0x2ba8         		else if(return_value > 1)                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002ba2   50df     MOVF      0xdf,0x0,0x0                                                                                    
002ba4   0801     SUBLW     0x1                                                                                             
002ba6   e200     BC        0x2ba8                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			DEBUG(("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value)); C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// find out how much data, if any, is present in                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// the camera serial port's received data queue?                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002ba8   db01     RCALL     0x31ac         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002baa   6ee7     MOVWF     0xe7,0x0                                                                                        
002bac   0e01     MOVLW     0x1                                                                                             
002bae   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002bb0   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// have we received any data?                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002bb2   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002bb4   0800     SUBLW     0x0                                                                                             
002bb6   e217     BC        0x2be6                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// data packets                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002bb8   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002bba   6adb     CLRF      0xdb,0x0                                                                                        
002bbc   0e01     MOVLW     0x1                                                                                             
002bbe   50db     MOVF      0xdb,0x0,0x0                                                                                    
002bc0   6ef3     MOVWF     0xf3,0x0                                                                                        
002bc2   0e03     MOVLW     0x3                                                                                             
002bc4   cfdb     MOVFF     0xfdb,0xff4                                                                                     
002bc6   fff4                                                                                                               
002bc8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002bca   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
002bcc   e20c     BC        0x2be6                                                                                          
002be0   0e03     MOVLW     0x3                                                                                             
002be2   2adb     INCF      0xdb,0x1,0x0                                                                                    
002be4   d7eb     BRA       0x2bbc                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// get the next data byte                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002bce   daf2     RCALL     0x31b4         			byte = Read_Camera_Serial_Port();                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002bd0   6ee7     MOVWF     0xe7,0x0                                                                                        
002bd2   0e02     MOVLW     0x2                                                                                             
002bd4   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002bd6   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// send the byte to the camera state machine                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002bd8   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002bda   ffe6                                                                                                               
002bdc   d80a     RCALL     0x2bf2                                                                                          
002bde   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002be6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002be8   ffe1                                                                                                               
002bea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002bec   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002bee   ffd9                                                                                                               
002bf0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					in the case of packets, the global data structure is                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					updated with the new data.					                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
002bf2   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002bf4   ffe6                                                                                                               
002bf6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002bf8   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char packet_char_count;                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002bfa   0102     MOVLB     0x2            	switch(state)                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002bfc   51be     MOVF      0xbe,0x0,0x1                                                                                    
002bfe   0a06     XORLW     0x6                                                                                             
002c00   e101     BNZ       0x2c04                                                                                          
002c02   d08f     BRA       0x2d22                                                                                          
002c04   0a03     XORLW     0x3                                                                                             
002c06   e068     BZ        0x2cd8                                                                                          
002c08   0a06     XORLW     0x6                                                                                             
002c0a   e034     BZ        0x2c74                                                                                          
002c0c   0a01     XORLW     0x1                                                                                             
002c0e   e025     BZ        0x2c5a                                                                                          
002c10   0a03     XORLW     0x3                                                                                             
002c12   e001     BZ        0x2c16                                                                                          
002c14   d0ab     BRA       0x2d6c                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002c16   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002c18   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c1a   6e00     MOVWF     0x0,0x0                                                                                         
002c1c   6a01     CLRF      0x1,0x0                                                                                         
002c1e   0eff     MOVLW     0xff                                                                                            
002c20   1800     XORWF     0x0,0x0,0x0                                                                                     
002c22   e101     BNZ       0x2c26                                                                                          
002c24   5001     MOVF      0x1,0x0,0x0                                                                                     
002c26   e103     BNZ       0x2c2e                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c28   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c2a   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c2c   d015     BRA       0x2c58         			else if(byte == 'A') // start of an ACK?                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002c2e   0efe     MOVLW     0xfe                                                                                            
002c30   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c32   0841     SUBLW     0x41                                                                                            
002c34   e107     BNZ       0x2c44                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c36   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c38   0e02     MOVLW     0x2                                                                                             
002c3a   6f6c     MOVWF     0x6c,0x1                                                                                        
002c3c   0102     MOVLB     0x2            				state = RECEIVING_ACK;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c3e   0e05     MOVLW     0x5                                                                                             
002c40   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c42   d00a     BRA       0x2c58         			else if(byte == 'N') // start of a NCK?                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c44   0efe     MOVLW     0xfe                                                                                            
002c46   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c48   084e     SUBLW     0x4e                                                                                            
002c4a   e106     BNZ       0x2c58                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c4c   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c4e   0e02     MOVLW     0x2                                                                                             
002c50   6f6c     MOVWF     0x6c,0x1                                                                                        
002c52   0102     MOVLB     0x2            				state = RECEIVING_NCK;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c54   0e06     MOVLW     0x6                                                                                             
002c56   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c58   d089     BRA       0x2d6c         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002c5a   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c5c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002c5e   0854     SUBLW     0x54                                                                                            
002c60   e106     BNZ       0x2c6e                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c62   0102     MOVLB     0x2            				packet_buffer_index = 0;                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002c64   6b6b     CLRF      0x6b,0x1                                                                                        
002c66   0102     MOVLB     0x2            				state = RECEIVING_T_PACKET;                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002c68   0e03     MOVLW     0x3                                                                                             
002c6a   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c6c   d002     BRA       0x2c72         			else // unknown packet type; go back to the unsynchronized state              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c6e   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002c70   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002c72   d07c     BRA       0x2d6c         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002c74   0102     MOVLB     0x2            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\trcCode\Repository\Summer\Oceanus\camera.c
002c76   516b     MOVF      0x6b,0x0,0x1                                                                                    
002c78   6e00     MOVWF     0x0,0x0                                                                                         
002c7a   6a01     CLRF      0x1,0x0                                                                                         
002c7c   0e08     MOVLW     0x8                                                                                             
002c7e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002c80   0e00     MOVLW     0x0                                                                                             
002c82   5801     SUBWFB    0x1,0x0,0x0                                                                                     
002c84   e20a     BC        0x2c9a                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// move packet character to our buffer                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002c86   516b     MOVF      0x6b,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002c88   6aea     CLRF      0xea,0x0                                                                                        
002c8a   0f49     ADDLW     0x49                                                                                            
002c8c   6ee9     MOVWF     0xe9,0x0                                                                                        
002c8e   0e02     MOVLW     0x2                                                                                             
002c90   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002c92   0efe     MOVLW     0xfe                                                                                            
002c94   cfdb     MOVFF     0xfdb,0xfef                                                                                     
002c96   ffef                                                                                                               
002c98   2b6b     INCF      0x6b,0x1,0x1   				packet_buffer_index++;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002c9a   516b     MOVF      0x6b,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\trcCode\Repository\Summer\Oceanus\camera.c
002c9c   6e00     MOVWF     0x0,0x0                                                                                         
002c9e   6a01     CLRF      0x1,0x0                                                                                         
002ca0   0e08     MOVLW     0x8                                                                                             
002ca2   1800     XORWF     0x0,0x0,0x0                                                                                     
002ca4   e101     BNZ       0x2ca8                                                                                          
002ca6   5001     MOVF      0x1,0x0,0x0                                                                                     
002ca8   e116     BNZ       0x2cd6                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002caa   c249     MOVFF     0x249,0x241    				T_Packet_Data.mx = packet_buffer[0];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cac   f241                                                                                                               
002cae   c24a     MOVFF     0x24a,0x242    				T_Packet_Data.my = packet_buffer[1];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cb0   f242                                                                                                               
002cb2   c24b     MOVFF     0x24b,0x243    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cb4   f243                                                                                                               
002cb6   c24c     MOVFF     0x24c,0x244    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cb8   f244                                                                                                               
002cba   c24d     MOVFF     0x24d,0x245    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cbc   f245                                                                                                               
002cbe   c24e     MOVFF     0x24e,0x246    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002cc0   f246                                                                                                               
002cc2   c24f     MOVFF     0x24f,0x247    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002cc4   f247                                                                                                               
002cc6   c250     MOVFF     0x250,0x248    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
002cc8   f248                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002cca   0102     MOVLB     0x2            				camera_t_packets++;                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002ccc   2bb8     INCF      0xb8,0x1,0x1                                                                                    
002cce   0e00     MOVLW     0x0                                                                                             
002cd0   23b9     ADDWFC    0xb9,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002cd2   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\trcCode\Repository\Summer\Oceanus\camera.c
002cd4   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002cd6   d04a     BRA       0x2d6c         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		case RECEIVING_ACK:                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002cd8   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\trcCode\Repository\Summer\Oceanus\camera.c
002cda   0102     MOVLB     0x2                                                                                             
002cdc   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002cde   e106     BNZ       0x2cec                                                                                          
002ce0   0efe     MOVLW     0xfe                                                                                            
002ce2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ce4   0843     SUBLW     0x43                                                                                            
002ce6   e102     BNZ       0x2cec                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002ce8   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002cea   d01a     BRA       0x2d20         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\trcCode\Repository\Summer\Oceanus\camera.c
002cec   0e03     MOVLW     0x3                                                                                             
002cee   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002cf0   e106     BNZ       0x2cfe                                                                                          
002cf2   0efe     MOVLW     0xfe                                                                                            
002cf4   50db     MOVF      0xdb,0x0,0x0                                                                                    
002cf6   084b     SUBLW     0x4b                                                                                            
002cf8   e102     BNZ       0x2cfe                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002cfa   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002cfc   d011     BRA       0x2d20         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\trcCode\Repository\Summer\Oceanus\camera.c
002cfe   0e04     MOVLW     0x4                                                                                             
002d00   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d02   e10b     BNZ       0x2d1a                                                                                          
002d04   0efe     MOVLW     0xfe                                                                                            
002d06   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d08   080d     SUBLW     0xd                                                                                             
002d0a   e107     BNZ       0x2d1a                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d0c   0102     MOVLB     0x2            				camera_acks++;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002d0e   2bba     INCF      0xba,0x1,0x1                                                                                    
002d10   0e00     MOVLW     0x0                                                                                             
002d12   23bb     ADDWFC    0xbb,0x1,0x1                                                                                    
002d14   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002d16   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d18   d003     BRA       0x2d20         			else                                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d1a   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002d1c   0e01     MOVLW     0x1                                                                                             
002d1e   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d20   d025     BRA       0x2d6c         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		case RECEIVING_NCK:                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002d22   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\trcCode\Repository\Summer\Oceanus\camera.c
002d24   0102     MOVLB     0x2                                                                                             
002d26   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d28   e106     BNZ       0x2d36                                                                                          
002d2a   0efe     MOVLW     0xfe                                                                                            
002d2c   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d2e   0843     SUBLW     0x43                                                                                            
002d30   e102     BNZ       0x2d36                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d32   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d34   d01a     BRA       0x2d6a         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\trcCode\Repository\Summer\Oceanus\camera.c
002d36   0e03     MOVLW     0x3                                                                                             
002d38   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d3a   e106     BNZ       0x2d48                                                                                          
002d3c   0efe     MOVLW     0xfe                                                                                            
002d3e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d40   084b     SUBLW     0x4b                                                                                            
002d42   e102     BNZ       0x2d48                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d44   2b6c     INCF      0x6c,0x1,0x1   				packet_char_count++;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d46   d011     BRA       0x2d6a         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\trcCode\Repository\Summer\Oceanus\camera.c
002d48   0e04     MOVLW     0x4                                                                                             
002d4a   5d6c     SUBWF     0x6c,0x0,0x1                                                                                    
002d4c   e10b     BNZ       0x2d64                                                                                          
002d4e   0efe     MOVLW     0xfe                                                                                            
002d50   50db     MOVF      0xdb,0x0,0x0                                                                                    
002d52   080d     SUBLW     0xd                                                                                             
002d54   e107     BNZ       0x2d64                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d56   0102     MOVLB     0x2            				camera_ncks++;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002d58   2bbc     INCF      0xbc,0x1,0x1                                                                                    
002d5a   0e00     MOVLW     0x0                                                                                             
002d5c   23bd     ADDWFC    0xbd,0x1,0x1                                                                                    
002d5e   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002d60   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d62   d003     BRA       0x2d6a         			else                                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d64   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002d66   0e01     MOVLW     0x1                                                                                             
002d68   6fbe     MOVWF     0xbe,0x1                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d6a   d000     BRA       0x2d6c         			break;	                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002d6c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002d6e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002d70   ffd9                                                                                                               
002d72   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					camera.                                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					1: Initialization has completed.                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					the time allowed. The returned value is the value                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					parameter found in camera.h.					                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					camera.                                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
002d74   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002d76   ffe6                                                                                                               
002d78   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002d7a   ffd9                                                                                                               
002d7c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char state;                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned int loop_count;                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	static unsigned char return_value;                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	unsigned char returned_value;                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002d7e   0102     MOVLB     0x2            	if(boot_initialization_flag == 1)                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002d80   05bf     DECF      0xbf,0x0,0x1                                                                                    
002d82   e107     BNZ       0x2d92                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// get the camera's attention                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002d84   d98a     RCALL     0x309a         		Camera_Idle();                                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// set the command & packet transfer mode                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002d86   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
002d88   6ee6     MOVWF     0xe6,0x0                                                                                        
002d8a   d993     RCALL     0x30b2                                                                                          
002d8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\trcCode\Repository\Summer\Oceanus\camera.c
002d8e   0102     MOVLB     0x2            		boot_initialization_flag = 0;                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002d90   6bbf     CLRF      0xbf,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002d92   05c0     DECF      0xc0,0x0,0x1   	if(initialize_flag == 1)                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002d94   e10d     BNZ       0x2db0                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002d96   6bc0     CLRF      0xc0,0x1       		initialize_flag = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002d98   0102     MOVLB     0x2            		wait_for_ack = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002d9a   6b6e     CLRF      0x6e,0x1                                                                                        
002d9c   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002d9e   6f6d     MOVWF     0x6d,0x1                                                                                        
002da0   6b6f     CLRF      0x6f,0x1       		loop_count = 0;                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002da2   6b70     CLRF      0x70,0x1                                                                                        
002da4   6b71     CLRF      0x71,0x1       		return_value = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002da6   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002da8   6bba     CLRF      0xba,0x1                                                                                        
002daa   6bbb     CLRF      0xbb,0x1                                                                                        
002dac   6bbc     CLRF      0xbc,0x1       		camera_ncks = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002dae   6bbd     CLRF      0xbd,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002db0   0102     MOVLB     0x2            	if(wait_for_ack == 1)                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002db2   056e     DECF      0x6e,0x0,0x1                                                                                    
002db4   e129     BNZ       0x2e08                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002db6   0102     MOVLB     0x2            		if(camera_acks >= 1) // got ACK?                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002db8   0e01     MOVLW     0x1                                                                                             
002dba   5dba     SUBWF     0xba,0x0,0x1                                                                                    
002dbc   0e00     MOVLW     0x0                                                                                             
002dbe   59bb     SUBWFB    0xbb,0x0,0x1                                                                                    
002dc0   e305     BNC       0x2dcc                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002dc2   0102     MOVLB     0x2            			wait_for_ack = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002dc4   6b6e     CLRF      0x6e,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// reset the loop counter                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002dc6   6b6f     CLRF      0x6f,0x1       			loop_count = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002dc8   6b70     CLRF      0x70,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002dca   d01d     BRA       0x2e06         		else if(camera_ncks >= 1) // got NCK?                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002dcc   0e01     MOVLW     0x1                                                                                             
002dce   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
002dd0   0e00     MOVLW     0x0                                                                                             
002dd2   59bd     SUBWFB    0xbd,0x0,0x1                                                                                    
002dd4   e304     BNC       0x2dde                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// return with a value that signals an error happened                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002dd6   0102     MOVLB     0x2            			return_value = state - 1;                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002dd8   056d     DECF      0x6d,0x0,0x1                                                                                    
002dda   6f71     MOVWF     0x71,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002ddc   d014     BRA       0x2e06         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\trcCode\Repository\Summer\Oceanus\camera.c
002dde   0102     MOVLB     0x2                                                                                             
002de0   0e0a     MOVLW     0xa                                                                                             
002de2   5d6f     SUBWF     0x6f,0x0,0x1                                                                                    
002de4   0e00     MOVLW     0x0                                                                                             
002de6   5970     SUBWFB    0x70,0x0,0x1                                                                                    
002de8   e30b     BNC       0x2e00                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// return with a value that signals an error happened                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002dea   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002dec   256d     ADDWF     0x6d,0x0,0x1                                                                                    
002dee   6e00     MOVWF     0x0,0x0                                                                                         
002df0   6a01     CLRF      0x1,0x0                                                                                         
002df2   0e00     MOVLW     0x0                                                                                             
002df4   2201     ADDWFC    0x1,0x1,0x0                                                                                     
002df6   0600     DECF      0x0,0x1,0x0                                                                                     
002df8   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002dfa   c000     MOVFF     0x0,0x271                                                                                       
002dfc   f271                                                                                                               
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
002dfe   d003     BRA       0x2e06         		else                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002e00   2b6f     INCF      0x6f,0x1,0x1   			loop_count++;                                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
002e02   0e00     MOVLW     0x0                                                                                             
002e04   2370     ADDWFC    0x70,0x1,0x1                                                                                    
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002e06   d109     BRA       0x301a         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		DEBUG(("Camera: Initialization state = %u\r\n", (unsigned int)state));         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002e08   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002e0a   6bba     CLRF      0xba,0x1                                                                                        
002e0c   6bbb     CLRF      0xbb,0x1                                                                                        
002e0e   6bbc     CLRF      0xbc,0x1       		camera_ncks = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002e10   6bbd     CLRF      0xbd,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002e12   0102     MOVLB     0x2            		switch(state)                                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002e14   516d     MOVF      0x6d,0x0,0x1                                                                                    
002e16   0a12     XORLW     0x12                                                                                            
002e18   e101     BNZ       0x2e1c                                                                                          
002e1a   d0fc     BRA       0x3014                                                                                          
002e1c   0a03     XORLW     0x3                                                                                             
002e1e   e101     BNZ       0x2e22                                                                                          
002e20   d0e2     BRA       0x2fe6                                                                                          
002e22   0a01     XORLW     0x1                                                                                             
002e24   e101     BNZ       0x2e28                                                                                          
002e26   d0d6     BRA       0x2fd4                                                                                          
002e28   0a1f     XORLW     0x1f                                                                                            
002e2a   e101     BNZ       0x2e2e                                                                                          
002e2c   d0c6     BRA       0x2fba                                                                                          
002e2e   0a01     XORLW     0x1                                                                                             
002e30   e101     BNZ       0x2e34                                                                                          
002e32   d0b6     BRA       0x2fa0                                                                                          
002e34   0a03     XORLW     0x3                                                                                             
002e36   e101     BNZ       0x2e3a                                                                                          
002e38   d0a6     BRA       0x2f86                                                                                          
002e3a   0a01     XORLW     0x1                                                                                             
002e3c   e101     BNZ       0x2e40                                                                                          
002e3e   d096     BRA       0x2f6c                                                                                          
002e40   0a07     XORLW     0x7                                                                                             
002e42   e101     BNZ       0x2e46                                                                                          
002e44   d086     BRA       0x2f52                                                                                          
002e46   0a01     XORLW     0x1                                                                                             
002e48   e101     BNZ       0x2e4c                                                                                          
002e4a   d078     BRA       0x2f3c                                                                                          
002e4c   0a03     XORLW     0x3                                                                                             
002e4e   e069     BZ        0x2f22                                                                                          
002e50   0a01     XORLW     0x1                                                                                             
002e52   e05a     BZ        0x2f08                                                                                          
002e54   0a0f     XORLW     0xf                                                                                             
002e56   e04b     BZ        0x2eee                                                                                          
002e58   0a01     XORLW     0x1                                                                                             
002e5a   e03c     BZ        0x2ed4                                                                                          
002e5c   0a03     XORLW     0x3                                                                                             
002e5e   e02d     BZ        0x2eba                                                                                          
002e60   0a01     XORLW     0x1                                                                                             
002e62   e01e     BZ        0x2ea0                                                                                          
002e64   0a07     XORLW     0x7                                                                                             
002e66   e00f     BZ        0x2e86                                                                                          
002e68   0a01     XORLW     0x1                                                                                             
002e6a   e009     BZ        0x2e7e                                                                                          
002e6c   0a03     XORLW     0x3                                                                                             
002e6e   e001     BZ        0x2e72                                                                                          
002e70   d0d4     BRA       0x301a                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_ONE:                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// get the camera's attention                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002e72   d913     RCALL     0x309a         				Camera_Idle();                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002e74   0102     MOVLB     0x2            				state = STATE_TWO;                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002e76   0e02     MOVLW     0x2                                                                                             
002e78   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\trcCode\Repository\Summer\Oceanus\camera.c
002e7a   6b6e     CLRF      0x6e,0x1       				wait_for_ack = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002e7c   d0ce     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_TWO:                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002e7e   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002e80   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\trcCode\Repository\Summer\Oceanus\camera.c
002e82   6b6e     CLRF      0x6e,0x1       				wait_for_ack = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002e84   d0ca     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_THREE:                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Common Control I register                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002e86   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002e88   6ee6     MOVWF     0xe6,0x0                                                                                        
002e8a   0e29     MOVLW     0x29                                                                                            
002e8c   6ee6     MOVWF     0xe6,0x0                                                                                        
002e8e   d970     RCALL     0x3170                                                                                          
002e90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002e94   0102     MOVLB     0x2            				state = STATE_FOUR;                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002e96   0e04     MOVLW     0x4                                                                                             
002e98   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002e9a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002e9c   6f6e     MOVWF     0x6e,0x1                                                                                        
002e9e   d0bd     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_FOUR:                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Common Control B register                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002ea0   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ea2   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea4   0e13     MOVLW     0x13                                                                                            
002ea6   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea8   d963     RCALL     0x3170                                                                                          
002eaa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002eac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002eae   0102     MOVLB     0x2            				state = STATE_FIVE;                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002eb0   0e05     MOVLW     0x5                                                                                             
002eb2   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002eb4   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002eb6   6f6e     MOVWF     0x6e,0x1                                                                                        
002eb8   d0b0     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_FIVE:                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002eba   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ebc   6ee6     MOVWF     0xe6,0x0                                                                                        
002ebe   0e2d     MOVLW     0x2d                                                                                            
002ec0   6ee6     MOVWF     0xe6,0x0                                                                                        
002ec2   d956     RCALL     0x3170                                                                                          
002ec4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ec6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002ec8   0102     MOVLB     0x2            				state = STATE_SIX;                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002eca   0e06     MOVLW     0x6                                                                                             
002ecc   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ece   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002ed0   6f6e     MOVWF     0x6e,0x1                                                                                        
002ed2   d0a3     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_SIX:                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002ed4   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ed6   6ee6     MOVWF     0xe6,0x0                                                                                        
002ed8   0e2a     MOVLW     0x2a                                                                                            
002eda   6ee6     MOVWF     0xe6,0x0                                                                                        
002edc   d949     RCALL     0x3170                                                                                          
002ede   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002ee0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002ee2   0102     MOVLB     0x2            				state = STATE_SEVEN;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002ee4   0e07     MOVLW     0x7                                                                                             
002ee6   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ee8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002eea   6f6e     MOVWF     0x6e,0x1                                                                                        
002eec   d096     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_SEVEN:                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\trcCode\Repository\Summer\Oceanus\camera.c
002eee   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ef0   6ee6     MOVWF     0xe6,0x0                                                                                        
002ef2   0e2b     MOVLW     0x2b                                                                                            
002ef4   6ee6     MOVWF     0xe6,0x0                                                                                        
002ef6   d93c     RCALL     0x3170                                                                                          
002ef8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002efa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002efc   0102     MOVLB     0x2            				state = STATE_EIGHT;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002efe   0e08     MOVLW     0x8                                                                                             
002f00   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f02   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f04   6f6e     MOVWF     0x6e,0x1                                                                                        
002f06   d089     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_EIGHT:                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Common Control J register                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002f08   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f0a   6ee6     MOVWF     0xe6,0x0                                                                                        
002f0c   0e2d     MOVLW     0x2d                                                                                            
002f0e   6ee6     MOVWF     0xe6,0x0                                                                                        
002f10   d92f     RCALL     0x3170                                                                                          
002f12   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f16   0102     MOVLB     0x2            				state = STATE_NINE;                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
002f18   0e09     MOVLW     0x9                                                                                             
002f1a   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f1c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f1e   6f6e     MOVWF     0x6e,0x1                                                                                        
002f20   d07c     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_NINE:                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Common Control A register                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002f22   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f24   6ee6     MOVWF     0xe6,0x0                                                                                        
002f26   0e12     MOVLW     0x12                                                                                            
002f28   6ee6     MOVWF     0xe6,0x0                                                                                        
002f2a   d922     RCALL     0x3170                                                                                          
002f2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f30   0102     MOVLB     0x2            				state = STATE_TEN;                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
002f32   0e0a     MOVLW     0xa                                                                                             
002f34   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f36   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f38   6f6e     MOVWF     0x6e,0x1                                                                                        
002f3a   d06f     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_TEN:                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f3c   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f3e   6ae6     CLRF      0xe6,0x0                                                                                        
002f40   d917     RCALL     0x3170                                                                                          
002f42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f44   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f46   0102     MOVLB     0x2            				state = STATE_ELEVEN;                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002f48   0e0b     MOVLW     0xb                                                                                             
002f4a   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f4c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f4e   6f6e     MOVWF     0x6e,0x1                                                                                        
002f50   d064     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_ELEVEN:                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
002f52   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f54   6ee6     MOVWF     0xe6,0x0                                                                                        
002f56   0e01     MOVLW     0x1                                                                                             
002f58   6ee6     MOVWF     0xe6,0x0                                                                                        
002f5a   d90a     RCALL     0x3170                                                                                          
002f5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f60   0102     MOVLB     0x2            				state = STATE_TWELVE;                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002f62   0e0c     MOVLW     0xc                                                                                             
002f64   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f66   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f68   6f6e     MOVWF     0x6e,0x1                                                                                        
002f6a   d057     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_TWELVE:                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Red Gain Control register                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
002f6c   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f6e   6ee6     MOVWF     0xe6,0x0                                                                                        
002f70   0e02     MOVLW     0x2                                                                                             
002f72   6ee6     MOVWF     0xe6,0x0                                                                                        
002f74   d8fd     RCALL     0x3170                                                                                          
002f76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f78   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f7a   0102     MOVLB     0x2            				state = STATE_THIRTEEN;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f7c   0e0d     MOVLW     0xd                                                                                             
002f7e   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f80   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f82   6f6e     MOVWF     0x6e,0x1                                                                                        
002f84   d04a     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Saturation Control register                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f86   0e80     MOVLW     0x80           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f88   6ee6     MOVWF     0xe6,0x0                                                                                        
002f8a   0e03     MOVLW     0x3                                                                                             
002f8c   6ee6     MOVWF     0xe6,0x0                                                                                        
002f8e   d8f0     RCALL     0x3170                                                                                          
002f90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002f94   0102     MOVLB     0x2            				state = STATE_FOURTEEN;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002f96   0e0e     MOVLW     0xe                                                                                             
002f98   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002f9a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002f9c   6f6e     MOVWF     0x6e,0x1                                                                                        
002f9e   d03d     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Brightness Control register                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002fa0   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002fa2   6ee6     MOVWF     0xe6,0x0                                                                                        
002fa4   0e06     MOVLW     0x6                                                                                             
002fa6   6ee6     MOVWF     0xe6,0x0                                                                                        
002fa8   d8e3     RCALL     0x3170                                                                                          
002faa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002fac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002fae   0102     MOVLB     0x2            				state = STATE_FIFTEEN;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002fb0   0e0f     MOVLW     0xf                                                                                             
002fb2   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002fb4   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002fb6   6f6e     MOVWF     0x6e,0x1                                                                                        
002fb8   d030     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002fba   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\trcCode\Repository\Summer\Oceanus\camera.c
002fbc   6ee6     MOVWF     0xe6,0x0                                                                                        
002fbe   0e10     MOVLW     0x10                                                                                            
002fc0   6ee6     MOVWF     0xe6,0x0                                                                                        
002fc2   d8d6     RCALL     0x3170                                                                                          
002fc4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002fc6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002fc8   0102     MOVLB     0x2            				state = STATE_SIXTEEN;                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
002fca   0e10     MOVLW     0x10                                                                                            
002fcc   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002fce   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002fd0   6f6e     MOVWF     0x6e,0x1                                                                                        
002fd2   d023     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// initialize the Noise Filter value                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
002fd4   6ae6     CLRF      0xe6,0x0       				Noise_Filter(NF_DEFAULT);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002fd6   d88b     RCALL     0x30ee                                                                                          
002fd8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
002fda   0102     MOVLB     0x2            				state = STATE_SEVENTEEN;                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
002fdc   0e11     MOVLW     0x11                                                                                            
002fde   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002fe0   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002fe2   6f6e     MOVWF     0x6e,0x1                                                                                        
002fe4   d01a     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// send the TC or Track Color command                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
002ff6   0e73     MOVLW     0x73           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
002ff8   6ee6     MOVWF     0xe6,0x0                                                                                        
002ffa   0e55     MOVLW     0x55                                                                                            
002ffc   6ee6     MOVWF     0xe6,0x0                                                                                        
002fee   0e11     MOVLW     0x11           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
002ff0   6ee6     MOVWF     0xe6,0x0                                                                                        
002ff2   0e0f     MOVLW     0xf                                                                                             
002ff4   6ee6     MOVWF     0xe6,0x0                                                                                        
002fe6   0e91     MOVLW     0x91           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
002fe8   6ee6     MOVWF     0xe6,0x0                                                                                        
002fea   0e64     MOVLW     0x64                                                                                            
002fec   6ee6     MOVWF     0xe6,0x0                                                                                        
002ffe   d81b     RCALL     0x3036                                                                                          
003000   6ef5     MOVWF     0xf5,0x0                                                                                        
003002   0e06     MOVLW     0x6                                                                                             
003004   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003006   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
003008   0102     MOVLB     0x2            				state = STATE_EIGHTEEN;                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
00300a   0e12     MOVLW     0x12                                                                                            
00300c   6f6d     MOVWF     0x6d,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\trcCode\Repository\Summer\Oceanus\camera.c
00300e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
003010   6f6e     MOVWF     0x6e,0x1                                                                                        
003012   d003     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				// signal that we're done                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
003014   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
003016   6f71     MOVWF     0x71,0x1                                                                                        
003018   d000     BRA       0x301a         				break;                                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// If we're returning from this function with a value greater                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	// the state machine if this function is called again.                          C:\trcCode\Repository\Summer\Oceanus\camera.c
00301a   5171     MOVF      0x71,0x0,0x1   	if(return_value > 0)                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
00301c   0800     SUBLW     0x0                                                                                             
00301e   e203     BC        0x3026                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
003020   0102     MOVLB     0x2            		initialize_flag = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
003022   0e01     MOVLW     0x1                                                                                             
003024   6fc0     MOVWF     0xc0,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
003026   0102     MOVLB     0x2            	return(return_value);	                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
003028   5171     MOVF      0x71,0x0,0x1                                                                                    
00302a   d000     BRA       0x302c                                                                                          
00302c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00302e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003030   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003032   ffd9                                                                                                               
003034   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					to the camera.		                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
003036   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\trcCode\Repository\Summer\Oceanus\camera.c
003038   ffe6                                                                                                               
00303a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00303c   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00303e   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003040   6ee6     MOVWF     0xe6,0x0                                                                                        
003042   d8bc     RCALL     0x31bc                                                                                          
003044   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003046   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003048   6ee6     MOVWF     0xe6,0x0                                                                                        
00304a   d8b8     RCALL     0x31bc                                                                                          
00304c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00304e   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
003050   6ee6     MOVWF     0xe6,0x0                                                                                        
003052   d8b4     RCALL     0x31bc                                                                                          
003054   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003056   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
003058   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00305a   ffe6                                                                                                               
00305c   d8af     RCALL     0x31bc                                                                                          
00305e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003060   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
003062   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003064   ffe6                                                                                                               
003066   d8aa     RCALL     0x31bc                                                                                          
003068   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00306a   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
00306c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00306e   ffe6                                                                                                               
003070   d8a5     RCALL     0x31bc                                                                                          
003072   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003074   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
003076   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003078   ffe6                                                                                                               
00307a   d8a0     RCALL     0x31bc                                                                                          
00307c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00307e   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
003080   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003082   ffe6                                                                                                               
003084   d89b     RCALL     0x31bc                                                                                          
003086   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003088   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
00308a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00308c   ffe6                                                                                                               
00308e   d896     RCALL     0x31bc                                                                                          
003090   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003092   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
003094   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003096   ffd9                                                                                                               
003098   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           void Camera_Idle(void)                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00309a   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
00309c   6ee6     MOVWF     0xe6,0x0                                                                                        
00309e   d88e     RCALL     0x31bc                                                                                          
0030a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030a2   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           void Restart_Camera(void)                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030a4   0102     MOVLB     0x2            	camera_initialized = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
0030a6   6bb7     CLRF      0xb7,0x1                                                                                        
0030a8   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		                                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030aa   0102     MOVLB     0x2            	return(camera_initialized);                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
0030ac   51b7     MOVF      0xb7,0x0,0x1                                                                                    
0030ae   d000     BRA       0x30b0                                                                                          
0030b0   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					to the camera. 		                                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					are not suppressed.                                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
0030b2   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030b4   ffe6                                                                                                               
0030b6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0030b8   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030ba   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
0030bc   6ee6     MOVWF     0xe6,0x0                                                                                        
0030be   d87e     RCALL     0x31bc                                                                                          
0030c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030c2   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
0030c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0030c6   d87a     RCALL     0x31bc                                                                                          
0030c8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030ca   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
0030cc   6ee6     MOVWF     0xe6,0x0                                                                                        
0030ce   d876     RCALL     0x31bc                                                                                          
0030d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030d2   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
0030d4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0030d6   0f30     ADDLW     0x30                                                                                            
0030d8   6ee6     MOVWF     0xe6,0x0                                                                                        
0030da   d870     RCALL     0x31bc                                                                                          
0030dc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030de   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
0030e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0030e2   d86c     RCALL     0x31bc                                                                                          
0030e4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030e6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030e8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0030ea   ffd9                                                                                                               
0030ec   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					command to the camera.                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
0030ee   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
0030f0   ffe6                                                                                                               
0030f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0030f4   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0030f6   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
0030f8   6ee6     MOVWF     0xe6,0x0                                                                                        
0030fa   d860     RCALL     0x31bc                                                                                          
0030fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030fe   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003100   6ee6     MOVWF     0xe6,0x0                                                                                        
003102   d85c     RCALL     0x31bc                                                                                          
003104   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003106   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
003108   6ee6     MOVWF     0xe6,0x0                                                                                        
00310a   d858     RCALL     0x31bc                                                                                          
00310c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00310e   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
003110   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003112   ffe6                                                                                                               
003114   d853     RCALL     0x31bc                                                                                          
003116   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003118   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00311a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00311c   ffd9                                                                                                               
00311e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Virtual_Window()                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Properly formats and sends a VW (Virtual Window) command             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					to the camera.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Four unsigned chars specifying two corners of the                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					virtual window.                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
003120   cfd9     MOVFF     0xfd9,0xfe6    void Virtual_Window(unsigned char x, unsigned char y, unsigned char x2, unsigned char y2) C:\trcCode\Repository\Summer\Oceanus\camera.c
003122   ffe6                                                                                                               
003124   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003126   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
003128   0e56     MOVLW     0x56           	Write_Camera_Serial_Port('V');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
00312a   6ee6     MOVWF     0xe6,0x0                                                                                        
00312c   d847     RCALL     0x31bc                                                                                          
00312e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003130   0e57     MOVLW     0x57           	Write_Camera_Serial_Port('W');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003132   6ee6     MOVWF     0xe6,0x0                                                                                        
003134   d843     RCALL     0x31bc                                                                                          
003136   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003138   0e04     MOVLW     0x4            	Write_Camera_Serial_Port(4);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
00313a   6ee6     MOVWF     0xe6,0x0                                                                                        
00313c   d83f     RCALL     0x31bc                                                                                          
00313e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003140   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(x);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
003142   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003144   ffe6                                                                                                               
003146   d83a     RCALL     0x31bc                                                                                          
003148   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00314a   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(y);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
00314c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00314e   ffe6                                                                                                               
003150   d835     RCALL     0x31bc                                                                                          
003152   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003154   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(x2);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
003156   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003158   ffe6                                                                                                               
00315a   d830     RCALL     0x31bc                                                                                          
00315c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00315e   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(y2);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
003160   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003162   ffe6                                                                                                               
003164   d82b     RCALL     0x31bc                                                                                          
003166   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003168   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00316a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00316c   ffd9                                                                                                               
00316e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					to the camera.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
003170   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\trcCode\Repository\Summer\Oceanus\camera.c
003172   ffe6                                                                                                               
003174   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003176   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
003178   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
00317a   6ee6     MOVWF     0xe6,0x0                                                                                        
00317c   d81f     RCALL     0x31bc                                                                                          
00317e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003180   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003182   6ee6     MOVWF     0xe6,0x0                                                                                        
003184   d81b     RCALL     0x31bc                                                                                          
003186   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003188   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
00318a   6ee6     MOVWF     0xe6,0x0                                                                                        
00318c   d817     RCALL     0x31bc                                                                                          
00318e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003190   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
003192   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003194   ffe6                                                                                                               
003196   d812     RCALL     0x31bc                                                                                          
003198   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00319a   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
00319c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00319e   ffe6                                                                                                               
0031a0   d80d     RCALL     0x31bc                                                                                          
0031a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0031a4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0031a6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0031a8   ffd9                                                                                                               
0031aa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					received data queue.		                                                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.		                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
0031ac   ecbe     CALL      0x4f7c,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031ae   f027                                                                                                               
0031b0   d000     BRA       0x31b2                                                                                          
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031b2   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data is not present in the camera serial port's received                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data queue, zero is returned.                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					calling this function to make sure data is present.                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
0031b4   ecf4     CALL      0x4fe8,0x0     	return(Read_Serial_Port_Two());                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
0031b6   f027                                                                                                               
0031b8   d000     BRA       0x31ba                                                                                          
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031ba   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
0031bc   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\trcCode\Repository\Summer\Oceanus\camera.c
0031be   ffe6                                                                                                               
0031c0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0031c2   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
0031c4   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
0031c6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0031c8   ffe6                                                                                                               
0031ca   ec3b     CALL      0x5076,0x0                                                                                      
0031cc   f028                                                                                                               
0031ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031d0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0031d2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0031d4   ffd9                                                                                                               
0031d6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					received data queue.                                                       C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
0031d8   ecae     CALL      0x4f5c,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031da   f027                                                                                                               
0031dc   d000     BRA       0x31de                                                                                          
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031de   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					data queue, zero is returned.                                              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					calling this function to make sure data is present.                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
0031e0   ecce     CALL      0x4f9c,0x0     	return(Read_Serial_Port_One());                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
0031e2   f027                                                                                                               
0031e4   d000     BRA       0x31e6                                                                                          
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031e6   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *					properly set in camera.h.                                                  C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\camera.c
0031e8   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\trcCode\Repository\Summer\Oceanus\camera.c
0031ea   ffe6                                                                                                               
0031ec   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0031ee   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\trcCode\Repository\Summer\Oceanus\camera.c
0031f0   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
0031f2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0031f4   ffe6                                                                                                               
0031f6   ec1a     CALL      0x5034,0x0                                                                                      
0031f8   f028                                                                                                               
0031fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\trcCode\Repository\Summer\Oceanus\camera.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\camera.c
0031fc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\camera.c
0031fe   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003200   ffd9                                                                                                               
003202   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	TITLE:		encoder.c                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	DATE:		17-Dec-2005                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *				or un-modified, publicly available on the internet or                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *				elsewhere without permission. Thanks.                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *				Copyright ©2003-2006 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	20-Dec-2003  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	18-Feb-2004  0.2  RKW - Reassigned the encoder digital inputs to run           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  on the FRC robot controller too.                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Get_Left_Encoder_Count(), Get_Right_Encoder_Count(),   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  Set_Left_Encoder_Count() and Set_Right_Encoder_Count()       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  functions added.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Renamed Int_1_Handler() and Int_2_Handler() to         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  Left_Encoder_Int_Handler() and Right_Encoder_Int_Handler     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  respectively.                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Altered the interrupt service routines to easily       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  flip the direction the encoders count by altering the        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  RIGHT_ENCODER_TICK_DELTA and LEFT_ENCODER_TICK_DELTA         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  #defines found in encoder.h                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	06-Jan-2005  0.4  RKW - Rebuilt with C18 version 2.40.                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	17-Dec-2005  0.5  RKW - Added code to accommodate four more encoders on        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  interrupts 3 through 6. These additional encoder inputs      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	                  are optimized for position control.                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #include "encoder.h"                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // These variables are used to keep track of the encoder position over time.     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // Though these are global variables, they shouldn't be modified directly.       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // Functions to modify these variables are included below.                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_1_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_2_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           unsigned char Encoder_3_State;                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_3_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           unsigned char Encoder_4_State;                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_4_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           unsigned char Encoder_5_State;                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_5_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           unsigned char Encoder_6_State;                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           volatile long Encoder_6_Count = 0;                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // So that we'll know which interrupt pin changed state the next time through,   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // the state of port b is saved in this variable each time the interrupt         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // handler for interrupts 3 through 6 is called. This variable should be         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // initialized to the current state of port b just before enabling interrupts    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           // 3 through 6.                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           unsigned char Old_Port_B = 0xFF;                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Initialize_Encoders()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Initializes the encoder software.                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Initialize_Encoders(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// if enabled in encoder.h, configure encoder 1's interrupt input               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#ifdef ENABLE_ENCODER_1                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure interrupt 1 is configured as an input                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a42   8493     BSF       0x93,0x2,0x0   	TRISBbits.TRISB2 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt 1 is low priority                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a44   9ef0     BCF       0xf0,0x7,0x0   	INTCON3bits.INT2IP = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// trigger on rising edge                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a46   88f1     BSF       0xf1,0x4,0x0   	INTCON2bits.INTEDG2 = 1;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a48   92f0     BCF       0xf0,0x1,0x0   	INTCON3bits.INT2IF = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// enable interrupt 1                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a4a   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// if enabled in encoder.h, configure encoder 2's interrupt input               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#ifdef ENABLE_ENCODER_2                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure interrupt 2 is configured as an input                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a4c   8693     BSF       0x93,0x3,0x0   	TRISBbits.TRISB3 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt 2 is low priority                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a4e   92f1     BCF       0xf1,0x1,0x0   	INTCON2bits.INT3IP = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// trigger on rising edge                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a50   86f1     BSF       0xf1,0x3,0x0   	INTCON2bits.INTEDG3 = 1;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a52   94f0     BCF       0xf0,0x2,0x0   	INTCON3bits.INT3IF = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// enable interrupt 2                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a54   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// if enabled in encoder.h, configure the interrupt input for encoders 3-6      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#ifdef ENABLE_ENCODER_3_6                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure interrupts 3 through 6 are configured as inputs                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	TRISBbits.TRISB4 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	TRISBbits.TRISB5 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	TRISBbits.TRISB6 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	TRISBbits.TRISB7 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupts 3 through 6 are low priority                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                             	INTCON2bits.RBIP = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// before enabling interrupts 3 through 6, take a snapshot of port b            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	Old_Port_B = PORTB;                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIF = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// enable interrupts 3 through 6                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a56   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_1_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 1 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 1 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a58   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_1_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a5a   ffe6                                                                                                               
005a5c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005a5e   ffd9                                                                                                               
005a60   0e04     MOVLW     0x4                                                                                             
005a62   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a64   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a66   c2c1     MOVFF     0x2c1,0xfdf    	count = Encoder_1_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a68   ffdf                                                                                                               
005a6a   0e01     MOVLW     0x1                                                                                             
005a6c   c2c2     MOVFF     0x2c2,0xfdb                                                                                     
005a6e   ffdb                                                                                                               
005a70   0e02     MOVLW     0x2                                                                                             
005a72   c2c3     MOVFF     0x2c3,0xfdb                                                                                     
005a74   ffdb                                                                                                               
005a76   0e03     MOVLW     0x3                                                                                             
005a78   c2c4     MOVFF     0x2c4,0xfdb                                                                                     
005a7a   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a7c   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a7e   cfde     MOVFF     0xfde,0x34     	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a80   f034                                                                                                               
005a82   cfde     MOVFF     0xfde,0x35                                                                                      
005a84   f035                                                                                                               
005a86   cfde     MOVFF     0xfde,0x36                                                                                      
005a88   f036                                                                                                               
005a8a   cfdd     MOVFF     0xfdd,0x37                                                                                      
005a8c   f037                                                                                                               
005a8e   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005a90   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005a92   d000     BRA       0x5a94                                                                                          
005a94   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
005a96   ffe1                                                                                                               
005a98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005a9a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a9c   ffd9                                                                                                               
005a9e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_1_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 1 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_1_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005aa0   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
005aa2   0102     MOVLB     0x2            	Encoder_1_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005aa4   6bc1     CLRF      0xc1,0x1                                                                                        
005aa6   6bc2     CLRF      0xc2,0x1                                                                                        
005aa8   6bc3     CLRF      0xc3,0x1                                                                                        
005aaa   6bc4     CLRF      0xc4,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005aac   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
005aae   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_1_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 1 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 1 pin changes from a logic 0 to a logic 1.                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_1_Int_Handler(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 1's phase a signal just transitioned from zero to one, causing       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ab0   b288     BTFSC     0x88,0x1,0x0   	if(ENCODER_1_PHASE_B_PIN == 0)                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ab2   d007     BRA       0x5ac2                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ab4   0102     MOVLB     0x2            		Encoder_1_Count -= ENCODER_1_TICK_DELTA;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ab6   07c1     DECF      0xc1,0x1,0x1                                                                                    
005ab8   0e00     MOVLW     0x0                                                                                             
005aba   5bc2     SUBWFB    0xc2,0x1,0x1                                                                                    
005abc   5bc3     SUBWFB    0xc3,0x1,0x1                                                                                    
005abe   5bc4     SUBWFB    0xc4,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ac0   d006     BRA       0x5ace         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ac2   0102     MOVLB     0x2            		Encoder_1_Count += ENCODER_1_TICK_DELTA;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ac4   2bc1     INCF      0xc1,0x1,0x1                                                                                    
005ac6   0e00     MOVLW     0x0                                                                                             
005ac8   23c2     ADDWFC    0xc2,0x1,0x1                                                                                    
005aca   23c3     ADDWFC    0xc3,0x1,0x1                                                                                    
005acc   23c4     ADDWFC    0xc4,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ace   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_2_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 2 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 2 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ad0   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_2_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ad2   ffe6                                                                                                               
005ad4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005ad6   ffd9                                                                                                               
005ad8   0e04     MOVLW     0x4                                                                                             
005ada   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005adc   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ade   c2c5     MOVFF     0x2c5,0xfdf    	count = Encoder_2_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
005ae0   ffdf                                                                                                               
005ae2   0e01     MOVLW     0x1                                                                                             
005ae4   c2c6     MOVFF     0x2c6,0xfdb                                                                                     
005ae6   ffdb                                                                                                               
005ae8   0e02     MOVLW     0x2                                                                                             
005aea   c2c7     MOVFF     0x2c7,0xfdb                                                                                     
005aec   ffdb                                                                                                               
005aee   0e03     MOVLW     0x3                                                                                             
005af0   c2c8     MOVFF     0x2c8,0xfdb                                                                                     
005af2   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
005af4   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
005af6   cfde     MOVFF     0xfde,0x34     	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005af8   f034                                                                                                               
005afa   cfde     MOVFF     0xfde,0x35                                                                                      
005afc   f035                                                                                                               
005afe   cfde     MOVFF     0xfde,0x36                                                                                      
005b00   f036                                                                                                               
005b02   cfdd     MOVFF     0xfdd,0x37                                                                                      
005b04   f037                                                                                                               
005b06   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005b08   52dd     MOVF      0xdd,0x1,0x0                                                                                    
005b0a   d000     BRA       0x5b0c                                                                                          
005b0c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b0e   ffe1                                                                                                               
005b10   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b12   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b14   ffd9                                                                                                               
005b16   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_2_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 2 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_2_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b18   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b1a   0102     MOVLB     0x2            	Encoder_2_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b1c   6bc5     CLRF      0xc5,0x1                                                                                        
005b1e   6bc6     CLRF      0xc6,0x1                                                                                        
005b20   6bc7     CLRF      0xc7,0x1                                                                                        
005b22   6bc8     CLRF      0xc8,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b24   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b26   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_2_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 2 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 2 pin changes from a logic 0 to a logic 1.                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_2_Int_Handler(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 2's phase a signal just transitioned from zero to one, causing       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b28   b488     BTFSC     0x88,0x2,0x0   	if(ENCODER_2_PHASE_B_PIN == 0)                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b2a   d007     BRA       0x5b3a                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b2c   0eff     MOVLW     0xff           		Encoder_2_Count -= ENCODER_2_TICK_DELTA;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b2e   0102     MOVLB     0x2                                                                                             
005b30   5fc5     SUBWF     0xc5,0x1,0x1                                                                                    
005b32   5bc6     SUBWFB    0xc6,0x1,0x1                                                                                    
005b34   5bc7     SUBWFB    0xc7,0x1,0x1                                                                                    
005b36   5bc8     SUBWFB    0xc8,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b38   d006     BRA       0x5b46         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b3a   0eff     MOVLW     0xff           		Encoder_2_Count += ENCODER_2_TICK_DELTA;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b3c   0102     MOVLB     0x2                                                                                             
005b3e   27c5     ADDWF     0xc5,0x1,0x1                                                                                    
005b40   23c6     ADDWFC    0xc6,0x1,0x1                                                                                    
005b42   23c7     ADDWFC    0xc7,0x1,0x1                                                                                    
005b44   23c8     ADDWFC    0xc8,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
005b46   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_3_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 3 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 3 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           long Get_Encoder_3_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	count = Encoder_3_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_3_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 3 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_3_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	Encoder_3_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_3_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 3 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 3 pin changes logic state                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_3_Int_Handler(unsigned char state)                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 3's phase a signal just changed logic level, causing this            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt service routine to be called.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	if(state == 1)                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// rising-edge interrupt                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_3_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			// backward                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			if(Encoder_3_State == 1)                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           				Encoder_3_Count -= ENCODER_3_TICK_DELTA;                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			// forward                                                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			if(Encoder_3_State == 0)                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           				Encoder_3_Count += ENCODER_3_TICK_DELTA;                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// falling-edge interrupt                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		//   phase b is one if moving backward                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		Encoder_3_State = ENCODER_3_PHASE_B_PIN;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_4_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 4 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 4 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           long Get_Encoder_4_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	count = Encoder_4_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_4_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 4 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_4_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	Encoder_4_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_4_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 4 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 4 pin changes logic state                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_4_Int_Handler(unsigned char state)                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 4's phase a signal just changed logic level, causing this            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt service routine to be called.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	if(state == 1)                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// rising-edge interrupt                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_4_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			// backward                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			if(Encoder_4_State == 1)                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           				Encoder_4_Count -= ENCODER_4_TICK_DELTA;                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			// forward                                                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			if(Encoder_4_State == 0)                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           				Encoder_4_Count += ENCODER_4_TICK_DELTA;                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// falling-edge interrupt                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		//   phase b is one if moving backward                                         C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		Encoder_4_State = ENCODER_4_PHASE_B_PIN;                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_5_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 5 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 5 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           long Get_Encoder_5_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	count = Encoder_5_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_5_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 5 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_5_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	Encoder_5_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_5_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 5 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 5 pin changes logic state                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_5_Int_Handler(unsigned char state)                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 5's phase a signal just changed logic level, causing this            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt service routine to be called.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	if(state == 1)                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// rising-edge interrupt                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// falling-edge interrupt                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Get_Encoder_6_Count()                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 6 counts.		                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Number of encoder 6 counts since the last reset.                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           long Get_Encoder_6_Count(void)                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	long count;                                                                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll get corrupted data.                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	count = Encoder_6_Count;                                                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	return(count);                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Reset_Encoder_6_Count()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		Resets the encoder 6 count to zero	                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Reset_Encoder_6_Count(void)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// we're using it.                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// that we'll write corrupted data.                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	Encoder_6_Count = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	FUNCTION:		Encoder_6_Int_Handler()                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 6 interrupt handler is called when           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *					the interrupt 6 pin changes logic state                                    C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           void Encoder_6_Int_Handler(unsigned char state)                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// Encoder 6's phase a signal just changed logic level, causing this            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	// interrupt service routine to be called.                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	if(state == 1)                                                                  C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// rising-edge interrupt                                                       C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	else                                                                            C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		// falling-edge interrupt                                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		else                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\encoder.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	TITLE		gyro.c                                                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	DATE:		10-Jan-2006                                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *				or un-modified, publicly available on the internet or                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *				elsewhere without permission. Thanks.                                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	21-Nov-2004  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	12-Jan-2005  0.2  RKW - Altered Get_Gyro_Rate() and Get_Gyro_Angle() to use    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  long integers for internal calculations, allowing larger     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  numerators and denominators in the GYRO_RATE_SCALE_FACTOR    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  and GYRO_ANGLE_SCALE_FACTOR #defines.                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	12-Jan-2005  0.2  RKW - GYRO_RATE_SCALE_FACTOR and GYRO_ANGLE_SCALE_FACTOR     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  #defines added for Analog Devices' ADXRS401, ADXRS150 and    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  ADXRS300 gyros.                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	16-Jan-2005  0.3  RKW - Using preprocessor directives, added the ability       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  to select the gyro type, angular units, sample rate and      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  number of averaged samples per update.                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	21-Jan-2005  0.3  RKW - Added scaling factors for the BEI GyroChip.            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	30-Jan-2005  0.4  RKW - Revised the way bias calculations are done.            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  Instead of using only one data set as a bias, multiple       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  sample sets can now be averaged over a much longer period    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  of time to derive the gyro bias. Updated documentation.      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	04-Sep-2005  0.5  RKW - Significant overhaul of gyro code to strip-out ADC-    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  specific code and use new adc.c/.h interface. Added          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	                  deadband option.                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	21-Nov-2005  0.5  RKW - Added support for Murata's ENV-05D gyro.               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	10-Jan-2006  0.5  RKW - Verified code works on PIC18F8722.                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           #include "adc.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           #include "gyro.h"                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           #include "TRCfunctions.h"                                                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           int gyro_bias;                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           int gyro_rate;                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           long gyro_angle;                                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           unsigned long avg_accum;                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           unsigned int avg_samples;                                                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           unsigned char calc_gyro_bias;                                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Initialize_Gyro()                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Initializes the gyro code.                                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:		Place "#include "gyro.h" in the includes section                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					of user_routines.c then call Initialize_Gyro() in                          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					user_routines.c/User_Initialization().                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					After calling Initialize_Gyro(), gyro rate and angle                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					data will be meaningless until a gyro bias calculation                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					has taken place by calling Start_Gyro_Bias_Calc() and                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					Stop_Gyro_Bias_Calc().                                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           void Initialize_Gyro(void)                                                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// reset the heading angle to zero                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c10   0101     MOVLB     0x1            	gyro_angle = 0;                                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c12   6bf2     CLRF      0xf2,0x1                                                                                        
004c14   6bf3     CLRF      0xf3,0x1                                                                                        
004c16   6bf4     CLRF      0xf4,0x1                                                                                        
004c18   6bf5     CLRF      0xf5,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// reset the bias calculation flag                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c1a   6bfc     CLRF      0xfc,0x1       	calc_gyro_bias = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c1c   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Get_Gyro_Rate()                                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Returns the current heading angular rate of change.                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Signed integer with the current heading rate of change.              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           int Get_Gyro_Rate(void)                                                          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// Return the calculated gyro rate to the caller.                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c1e   c1f0     MOVFF     0x1f0,0x34     	return((int)((((long)gyro_rate * GYRO_SENSITIVITY * 5L) / ADC_RANGE)) * GYRO_CAL_FACTOR); C:\trcCode\Repository\Summer\Oceanus\gyro.c
004c20   f034                                                                                                               
004c22   c1f1     MOVFF     0x1f1,0x35                                                                                      
004c24   f035                                                                                                               
004c26   6a36     CLRF      0x36,0x0                                                                                        
004c28   6a37     CLRF      0x37,0x0                                                                                        
004c2a   ae35     BTFSS     0x35,0x7,0x0                                                                                    
004c2c   d002     BRA       0x4c32                                                                                          
004c2e   6836     SETF      0x36,0x0                                                                                        
004c30   6837     SETF      0x37,0x0                                                                                        
004c32   0e20     MOVLW     0x20                                                                                            
004c34   6e39     MOVWF     0x39,0x0                                                                                        
004c36   0e03     MOVLW     0x3                                                                                             
004c38   6e3a     MOVWF     0x3a,0x0                                                                                        
004c3a   6a3b     CLRF      0x3b,0x0                                                                                        
004c3c   6a3c     CLRF      0x3c,0x0                                                                                        
004c3e   ec7f     CALL      0x5cfe,0x0                                                                                      
004c40   f02e                                                                                                               
004c42   c030     MOVFF     0x30,0x34                                                                                       
004c44   f034                                                                                                               
004c46   c031     MOVFF     0x31,0x35                                                                                       
004c48   f035                                                                                                               
004c4a   c032     MOVFF     0x32,0x36                                                                                       
004c4c   f036                                                                                                               
004c4e   c033     MOVFF     0x33,0x37                                                                                       
004c50   f037                                                                                                               
004c52   0e05     MOVLW     0x5                                                                                             
004c54   6e39     MOVWF     0x39,0x0                                                                                        
004c56   6a3a     CLRF      0x3a,0x0                                                                                        
004c58   6a3b     CLRF      0x3b,0x0                                                                                        
004c5a   6a3c     CLRF      0x3c,0x0                                                                                        
004c5c   ec7f     CALL      0x5cfe,0x0                                                                                      
004c5e   f02e                                                                                                               
004c60   c030     MOVFF     0x30,0x34                                                                                       
004c62   f034                                                                                                               
004c64   c031     MOVFF     0x31,0x35                                                                                       
004c66   f035                                                                                                               
004c68   c032     MOVFF     0x32,0x36                                                                                       
004c6a   f036                                                                                                               
004c6c   c033     MOVFF     0x33,0x37                                                                                       
004c6e   f037                                                                                                               
004c70   6a39     CLRF      0x39,0x0                                                                                        
004c72   0e08     MOVLW     0x8                                                                                             
004c74   6e3a     MOVWF     0x3a,0x0                                                                                        
004c76   6a3b     CLRF      0x3b,0x0                                                                                        
004c78   6a3c     CLRF      0x3c,0x0                                                                                        
004c7a   ec65     CALL      0x3eca,0x0                                                                                      
004c7c   f01f                                                                                                               
004c7e   c034     MOVFF     0x34,0x0                                                                                        
004c80   f000                                                                                                               
004c82   c035     MOVFF     0x35,0x1                                                                                        
004c84   f001                                                                                                               
004c86   0ee8     MOVLW     0xe8                                                                                            
004c88   0201     MULWF     0x1,0x0                                                                                         
004c8a   cff3     MOVFF     0xff3,0x1                                                                                       
004c8c   f001                                                                                                               
004c8e   0e03     MOVLW     0x3                                                                                             
004c90   0200     MULWF     0x0,0x0                                                                                         
004c92   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004c94   2601     ADDWF     0x1,0x1,0x0                                                                                     
004c96   0ee8     MOVLW     0xe8                                                                                            
004c98   0200     MULWF     0x0,0x0                                                                                         
004c9a   cff3     MOVFF     0xff3,0x0                                                                                       
004c9c   f000                                                                                                               
004c9e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004ca0   2601     ADDWF     0x1,0x1,0x0                                                                                     
004ca2   0ee8     MOVLW     0xe8                                                                                            
004ca4   6e3b     MOVWF     0x3b,0x0                                                                                        
004ca6   0e03     MOVLW     0x3                                                                                             
004ca8   6e3c     MOVWF     0x3c,0x0                                                                                        
004caa   c000     MOVFF     0x0,0x36                                                                                        
004cac   f036                                                                                                               
004cae   c001     MOVFF     0x1,0x37                                                                                        
004cb0   f037                                                                                                               
004cb2   ec3f     CALL      0x3e7e,0x0                                                                                      
004cb4   f01f                                                                                                               
004cb6   c036     MOVFF     0x36,0x0                                                                                        
004cb8   f000                                                                                                               
004cba   c037     MOVFF     0x37,0x1                                                                                        
004cbc   f001                                                                                                               
004cbe   c000     MOVFF     0x0,0xff3                                                                                       
004cc0   fff3                                                                                                               
004cc2   c001     MOVFF     0x1,0xff4                                                                                       
004cc4   fff4                                                                                                               
004cc6   d000     BRA       0x4cc8                                                                                          
004cc8   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Get_Gyro_Angle()                                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Returns the current heading angle.                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Signed long with the current heading angle.                          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
004cca   cfd9     MOVFF     0xfd9,0xfe6    long Get_Gyro_Angle(void)                                                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ccc   ffe6                                                                                                               
004cce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004cd0   ffd9                                                                                                               
004cd2   0e04     MOVLW     0x4                                                                                             
004cd4   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004cd6   c1f2     MOVFF     0x1f2,0x34     	long angle = ((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)); C:\trcCode\Repository\Summer\Oceanus\gyro.c
004cd8   f034                                                                                                               
004cda   c1f3     MOVFF     0x1f3,0x35                                                                                      
004cdc   f035                                                                                                               
004cde   c1f4     MOVFF     0x1f4,0x36                                                                                      
004ce0   f036                                                                                                               
004ce2   c1f5     MOVFF     0x1f5,0x37                                                                                      
004ce4   f037                                                                                                               
004ce6   0e20     MOVLW     0x20                                                                                            
004ce8   6e39     MOVWF     0x39,0x0                                                                                        
004cea   0e03     MOVLW     0x3                                                                                             
004cec   6e3a     MOVWF     0x3a,0x0                                                                                        
004cee   6a3b     CLRF      0x3b,0x0                                                                                        
004cf0   6a3c     CLRF      0x3c,0x0                                                                                        
004cf2   ec7f     CALL      0x5cfe,0x0                                                                                      
004cf4   f02e                                                                                                               
004cf6   c030     MOVFF     0x30,0x34                                                                                       
004cf8   f034                                                                                                               
004cfa   c031     MOVFF     0x31,0x35                                                                                       
004cfc   f035                                                                                                               
004cfe   c032     MOVFF     0x32,0x36                                                                                       
004d00   f036                                                                                                               
004d02   c033     MOVFF     0x33,0x37                                                                                       
004d04   f037                                                                                                               
004d06   0e05     MOVLW     0x5                                                                                             
004d08   6e39     MOVWF     0x39,0x0                                                                                        
004d0a   6a3a     CLRF      0x3a,0x0                                                                                        
004d0c   6a3b     CLRF      0x3b,0x0                                                                                        
004d0e   6a3c     CLRF      0x3c,0x0                                                                                        
004d10   ec7f     CALL      0x5cfe,0x0                                                                                      
004d12   f02e                                                                                                               
004d14   c030     MOVFF     0x30,0x34                                                                                       
004d16   f034                                                                                                               
004d18   c031     MOVFF     0x31,0x35                                                                                       
004d1a   f035                                                                                                               
004d1c   c032     MOVFF     0x32,0x36                                                                                       
004d1e   f036                                                                                                               
004d20   c033     MOVFF     0x33,0x37                                                                                       
004d22   f037                                                                                                               
004d24   6a39     CLRF      0x39,0x0                                                                                        
004d26   0ec8     MOVLW     0xc8                                                                                            
004d28   6e3a     MOVWF     0x3a,0x0                                                                                        
004d2a   6a3b     CLRF      0x3b,0x0                                                                                        
004d2c   6a3c     CLRF      0x3c,0x0                                                                                        
004d2e   ec65     CALL      0x3eca,0x0                                                                                      
004d30   f01f                                                                                                               
004d32   c034     MOVFF     0x34,0xfde                                                                                      
004d34   ffde                                                                                                               
004d36   c035     MOVFF     0x35,0xfde                                                                                      
004d38   ffde                                                                                                               
004d3a   c036     MOVFF     0x36,0xfde                                                                                      
004d3c   ffde                                                                                                               
004d3e   c037     MOVFF     0x37,0xfdd                                                                                      
004d40   ffdd                                                                                                               
004d42   52dd     MOVF      0xdd,0x1,0x0                                                                                    
004d44   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	// Return the calculated gyro angle to the caller.                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d46   cfd9     MOVFF     0xfd9,0xfe9    	return ((angle * 1000)/1000);                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d48   ffe9                                                                                                               
004d4a   cfda     MOVFF     0xfda,0xfea                                                                                     
004d4c   ffea                                                                                                               
004d4e   cfee     MOVFF     0xfee,0x34                                                                                      
004d50   f034                                                                                                               
004d52   cfee     MOVFF     0xfee,0x35                                                                                      
004d54   f035                                                                                                               
004d56   cfee     MOVFF     0xfee,0x36                                                                                      
004d58   f036                                                                                                               
004d5a   cfef     MOVFF     0xfef,0x37                                                                                      
004d5c   f037                                                                                                               
004d5e   0ee8     MOVLW     0xe8                                                                                            
004d60   6e39     MOVWF     0x39,0x0                                                                                        
004d62   0e03     MOVLW     0x3                                                                                             
004d64   6e3a     MOVWF     0x3a,0x0                                                                                        
004d66   6a3b     CLRF      0x3b,0x0                                                                                        
004d68   6a3c     CLRF      0x3c,0x0                                                                                        
004d6a   ec7f     CALL      0x5cfe,0x0                                                                                      
004d6c   f02e                                                                                                               
004d6e   c030     MOVFF     0x30,0x34                                                                                       
004d70   f034                                                                                                               
004d72   c031     MOVFF     0x31,0x35                                                                                       
004d74   f035                                                                                                               
004d76   c032     MOVFF     0x32,0x36                                                                                       
004d78   f036                                                                                                               
004d7a   c033     MOVFF     0x33,0x37                                                                                       
004d7c   f037                                                                                                               
004d7e   0ee8     MOVLW     0xe8                                                                                            
004d80   6e39     MOVWF     0x39,0x0                                                                                        
004d82   0e03     MOVLW     0x3                                                                                             
004d84   6e3a     MOVWF     0x3a,0x0                                                                                        
004d86   6a3b     CLRF      0x3b,0x0                                                                                        
004d88   6a3c     CLRF      0x3c,0x0                                                                                        
004d8a   ec65     CALL      0x3eca,0x0                                                                                      
004d8c   f01f                                                                                                               
004d8e   d000     BRA       0x4d90                                                                                          
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d90   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d92   ffe1                                                                                                               
004d94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d96   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d98   ffd9                                                                                                               
004d9a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Start_Gyro_Bias_Calc()                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Starts an ongoing gyro bias calculation.                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:		IMPORTANT NOTE: Only call this function when your                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					robot will be absolutely still and free of vibration                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					(e.g., the air compressor is off) until the call to                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					Stop_Gyro_Bias_Calc() is made.                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           void Start_Gyro_Bias_Calc(void)                                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d9c   0101     MOVLB     0x1            	if(calc_gyro_bias == 0)                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
004d9e   51fc     MOVF      0xfc,0x0,0x1                                                                                    
004da0   e108     BNZ       0x4db2                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// reset the averaging accumulator                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
004da2   6bf6     CLRF      0xf6,0x1       		avg_accum = 0;                                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
004da4   6bf7     CLRF      0xf7,0x1                                                                                        
004da6   6bf8     CLRF      0xf8,0x1                                                                                        
004da8   6bf9     CLRF      0xf9,0x1                                                                                        
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// reset the number of number of average samples counters                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
004daa   6bfa     CLRF      0xfa,0x1       		avg_samples = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
004dac   6bfb     CLRF      0xfb,0x1                                                                                        
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// set flag informing the Process_Gyro_Data()                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// function to start a gyro bias calculation                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
004dae   0e01     MOVLW     0x1            		calc_gyro_bias = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
004db0   6ffc     MOVWF     0xfc,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
004db2   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Stop_Gyro_Bias_Calc()                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Ends the current ongoing gyro bias calculation                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *					and updates the internal gyro_bias variable.                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           void Stop_Gyro_Bias_Calc(void)                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004db4   0101     MOVLB     0x1            	if(calc_gyro_bias == 1)                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
004db6   05fc     DECF      0xfc,0x0,0x1                                                                                    
004db8   e11e     BNZ       0x4df6                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// Update the gyro bias                                                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
004dba   c1fa     MOVFF     0x1fa,0x0      		gyro_bias = (int)(avg_accum / avg_samples);                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
004dbc   f000                                                                                                               
004dbe   c1fb     MOVFF     0x1fb,0x1                                                                                       
004dc0   f001                                                                                                               
004dc2   6a02     CLRF      0x2,0x0                                                                                         
004dc4   6a03     CLRF      0x3,0x0                                                                                         
004dc6   c1f6     MOVFF     0x1f6,0x34                                                                                      
004dc8   f034                                                                                                               
004dca   c1f7     MOVFF     0x1f7,0x35                                                                                      
004dcc   f035                                                                                                               
004dce   c1f8     MOVFF     0x1f8,0x36                                                                                      
004dd0   f036                                                                                                               
004dd2   c1f9     MOVFF     0x1f9,0x37                                                                                      
004dd4   f037                                                                                                               
004dd6   c000     MOVFF     0x0,0x39                                                                                        
004dd8   f039                                                                                                               
004dda   c001     MOVFF     0x1,0x3a                                                                                        
004ddc   f03a                                                                                                               
004dde   c002     MOVFF     0x2,0x3b                                                                                        
004de0   f03b                                                                                                               
004de2   c003     MOVFF     0x3,0x3c                                                                                        
004de4   f03c                                                                                                               
004de6   ec83     CALL      0x5f06,0x0                                                                                      
004de8   f02f                                                                                                               
004dea   c034     MOVFF     0x34,0x1ee                                                                                      
004dec   f1ee                                                                                                               
004dee   c035     MOVFF     0x35,0x1ef                                                                                      
004df0   f1ef                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// inform Process_Gyro_Data() function that                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// the ongoing bias calculation needs to stop                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
004df2   0101     MOVLB     0x1            		calc_gyro_bias = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
004df4   6bfc     CLRF      0xfc,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
004df6   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Get_Gyro_Bias()                                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Returns the current gyro bias.		                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Signed integer with the current gyro bias.                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           int Get_Gyro_Bias(void)                                                          C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// return the gyro bias to the caller                                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
004df8   c1ee     MOVFF     0x1ee,0xff3    	return(gyro_bias);                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004dfa   fff3                                                                                                               
004dfc   c1ef     MOVFF     0x1ef,0xff4                                                                                     
004dfe   fff4                                                                                                               
004e00   d000     BRA       0x4e02                                                                                          
004e02   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Set_Gyro_Bias()                                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Manually sets the gyro bias.                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e04   cfd9     MOVFF     0xfd9,0xfe6    void Set_Gyro_Bias(int new_gyro_bias)                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e06   ffe6                                                                                                               
004e08   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e0a   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// update gyro_bias                                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e0c   0efd     MOVLW     0xfd           	gyro_bias = new_gyro_bias;                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e0e   cfdb     MOVFF     0xfdb,0x1ee                                                                                     
004e10   f1ee                                                                                                               
004e12   0efe     MOVLW     0xfe                                                                                            
004e14   cfdb     MOVFF     0xfdb,0x1ef                                                                                     
004e16   f1ef                                                                                                               
004e18   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e1a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004e1c   ffd9                                                                                                               
004e1e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Reset_Gyro_Angle()                                                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Resets the heading angle to zero.                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           void Reset_Gyro_Angle(void)                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// zero out gyro_angle                                                          C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e20   0101     MOVLB     0x1            	gyro_angle = 0L;                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e22   6bf2     CLRF      0xf2,0x1                                                                                        
004e24   6bf3     CLRF      0xf3,0x1                                                                                        
004e26   6bf4     CLRF      0xf4,0x1                                                                                        
004e28   6bf5     CLRF      0xf5,0x1                                                                                        
004e2a   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	FUNCTION:		Process_Gyro_Data()                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e2c   cfd9     MOVFF     0xfd9,0xfe6    void Process_Gyro_Data(void)                                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e2e   ffe6                                                                                                               
004e30   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e32   ffd9                                                                                                               
004e34   0e02     MOVLW     0x2                                                                                             
004e36   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	int temp_gyro_rate;                                                             C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	// should the completed sample set be used to calculate the gyro bias?          C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e38   0101     MOVLB     0x1            	if(calc_gyro_bias == 1)                                                         C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e3a   05fc     DECF      0xfc,0x0,0x1                                                                                    
004e3c   e117     BNZ       0x4e6c                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// convert the accumulator to an integer and update gyro_bias                  C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e3e   0e01     MOVLW     0x1            		avg_accum += Get_ADC_Result(GYRO_CHANNEL);                                     C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e40   6ee6     MOVWF     0xe6,0x0                                                                                        
004e42   ec16     CALL      0x422c,0x0                                                                                      
004e44   f021                                                                                                               
004e46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e48   cff3     MOVFF     0xff3,0x0                                                                                       
004e4a   f000                                                                                                               
004e4c   cff4     MOVFF     0xff4,0x1                                                                                       
004e4e   f001                                                                                                               
004e50   0100     MOVLB     0x0                                                                                             
004e52   5000     MOVF      0x0,0x0,0x0                                                                                     
004e54   0101     MOVLB     0x1                                                                                             
004e56   27f6     ADDWF     0xf6,0x1,0x1                                                                                    
004e58   0100     MOVLB     0x0                                                                                             
004e5a   5001     MOVF      0x1,0x0,0x0                                                                                     
004e5c   0101     MOVLB     0x1                                                                                             
004e5e   23f7     ADDWFC    0xf7,0x1,0x1                                                                                    
004e60   0e00     MOVLW     0x0                                                                                             
004e62   23f8     ADDWFC    0xf8,0x1,0x1                                                                                    
004e64   23f9     ADDWFC    0xf9,0x1,0x1                                                                                    
004e66   2bfa     INCF      0xfa,0x1,0x1   		avg_samples++;                                                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e68   23fb     ADDWFC    0xfb,0x1,0x1                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e6a   d040     BRA       0x4eec         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// get the latest measured gyro rate                                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e6c   0e01     MOVLW     0x1            		temp_gyro_rate = (int)Get_ADC_Result(GYRO_CHANNEL) - gyro_bias;                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e6e   6ee6     MOVWF     0xe6,0x0                                                                                        
004e70   ec16     CALL      0x422c,0x0                                                                                      
004e72   f021                                                                                                               
004e74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e76   0101     MOVLB     0x1                                                                                             
004e78   51ee     MOVF      0xee,0x0,0x1                                                                                    
004e7a   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
004e7c   6e00     MOVWF     0x0,0x0                                                                                         
004e7e   51ef     MOVF      0xef,0x0,0x1                                                                                    
004e80   58f4     SUBWFB    0xf4,0x0,0x0                                                                                    
004e82   6e01     MOVWF     0x1,0x0                                                                                         
004e84   c000     MOVFF     0x0,0xfde                                                                                       
004e86   ffde                                                                                                               
004e88   c001     MOVFF     0x1,0xfdd                                                                                       
004e8a   ffdd                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// update reported gyro rate and angle only if                                 C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		// measured gyro rate lies outside the deadband                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e8c   cfde     MOVFF     0xfde,0x0      		if(temp_gyro_rate < -GYRO_DEADBAND || temp_gyro_rate > GYRO_DEADBAND)          C:\trcCode\Repository\Summer\Oceanus\gyro.c
004e8e   f000                                                                                                               
004e90   cfdd     MOVFF     0xfdd,0x1                                                                                       
004e92   f001                                                                                                               
004e94   80d8     BSF       0xd8,0x0,0x0                                                                                    
004e96   5001     MOVF      0x1,0x0,0x0                                                                                     
004e98   e704     BNN       0x4ea2                                                                                          
004e9a   0ef8     MOVLW     0xf8                                                                                            
004e9c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004e9e   0eff     MOVLW     0xff                                                                                            
004ea0   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004ea2   e30b     BNC       0x4eba                                                                                          
004ea4   cfde     MOVFF     0xfde,0x2                                                                                       
004ea6   f002                                                                                                               
004ea8   cfdd     MOVFF     0xfdd,0x3                                                                                       
004eaa   f003                                                                                                               
004eac   3403     RLCF      0x3,0x0,0x0                                                                                     
004eae   e204     BC        0x4eb8                                                                                          
004eb0   5002     MOVF      0x2,0x0,0x0                                                                                     
004eb2   0808     SUBLW     0x8                                                                                             
004eb4   0e00     MOVLW     0x0                                                                                             
004eb6   5403     SUBFWB    0x3,0x0,0x0                                                                                     
004eb8   e217     BC        0x4ee8                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           			// update the gyro rate                                                       C:\trcCode\Repository\Summer\Oceanus\gyro.c
004eba   cfde     MOVFF     0xfde,0x1f0    			gyro_rate = temp_gyro_rate;                                                   C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ebc   f1f0                                                                                                               
004ebe   cfdd     MOVFF     0xfdd,0x1f1                                                                                     
004ec0   f1f1                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           			// integrate the gyro rate to derive the heading                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ec2   cfde     MOVFF     0xfde,0x0      			gyro_angle += (long)temp_gyro_rate;                                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ec4   f000                                                                                                               
004ec6   cfdd     MOVFF     0xfdd,0x1                                                                                       
004ec8   f001                                                                                                               
004eca   6a02     CLRF      0x2,0x0                                                                                         
004ecc   6a03     CLRF      0x3,0x0                                                                                         
004ece   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004ed0   d002     BRA       0x4ed6                                                                                          
004ed2   6802     SETF      0x2,0x0                                                                                         
004ed4   6803     SETF      0x3,0x0                                                                                         
004ed6   5000     MOVF      0x0,0x0,0x0                                                                                     
004ed8   27f2     ADDWF     0xf2,0x1,0x1                                                                                    
004eda   5001     MOVF      0x1,0x0,0x0                                                                                     
004edc   23f3     ADDWFC    0xf3,0x1,0x1                                                                                    
004ede   5002     MOVF      0x2,0x0,0x0                                                                                     
004ee0   23f4     ADDWFC    0xf4,0x1,0x1                                                                                    
004ee2   5003     MOVF      0x3,0x0,0x0                                                                                     
004ee4   23f5     ADDWFC    0xf5,0x1,0x1                                                                                    
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ee6   d002     BRA       0x4eec         		else                                                                           C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004ee8   6bf0     CLRF      0xf0,0x1       			gyro_rate = 0;                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004eea   6bf1     CLRF      0xf1,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
                                           	}	                                                                              C:\trcCode\Repository\Summer\Oceanus\gyro.c
004eec   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\gyro.c
004eee   ffe1                                                                                                               
004ef0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ef2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004ef4   ffd9                                                                                                               
004ef6   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           * USAGE:                                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern void main (void);                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void _startup (void);                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           #define RND 6                                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void _entry (void)                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
000800   ef02     GOTO      0x6004         _asm goto _startup _endasm                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
000802   f030                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void _startup (void)                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006004   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006006   f000                                                                                                               
006008   ee2e     LFSR      0x2,0xe00                                                                                       
00600a   f000                                                                                                               
00600c   6af8     CLRF      0xf8,0x0                                                                                        
00600e   9c3f     BCF       0x3f,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006010   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006012   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           loop:                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006014   ec3d     CALL      0x487a,0x0      	Clear_Memory();                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006016   f024                                                                                                               
006018   eca4     CALL      0x5b48,0x0       _do_cinit ();                                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
00601a   f02d                                                                                                               
                                             /* Call the user's main routine */                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
00601c   ecdc     CALL      0x5fb8,0x0       main ();                                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
00601e   f02f                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006020   d7f9     BRA       0x6014           goto loop;                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
006022   0012     RETURN    0x0            }                               /* end _startup() */                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           extern far rom struct                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             unsigned short num_init;                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             struct _init_entry                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               unsigned long from;                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               unsigned long to;                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               unsigned long size;                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             entries[];                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           _cinit;                                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           void                                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                              */                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             static short long prom;                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             static short long data_ptr;                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* Initialized data... */                                                      C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b48   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b4a   6ef6     MOVWF     0xf6,0x0                                                                                        
005b4c   0e08     MOVLW     0x8                                                                                             
005b4e   6ef7     MOVWF     0xf7,0x0                                                                                        
005b50   0e00     MOVLW     0x0                                                                                             
005b52   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b54   0102     MOVLB     0x2                movlb data_ptr                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b56   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b58   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b5a   6fb2     MOVWF     0xb2,0x1           movwf curr_entry, 1                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b5c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b5e   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b60   6fb3     MOVWF     0xb3,0x1           movwf curr_entry+1, 1                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               test:                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b62   e103     BNZ       0x5b6a              bnz 3                                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b64   67b2     TSTFSZ    0xb2,0x1           tstfsz curr_entry, 1                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b66   d001     BRA       0x5b6a             bra 1                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b68   d03d     BRA       0x5be4           goto done;                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                * once.                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                *                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                * size values.                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                */                                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* read the source address */                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b6a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b6c   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b6e   6fad     MOVWF     0xad,0x1           movwf prom, 1                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b70   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b72   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b74   6fae     MOVWF     0xae,0x1           movwf prom+1, 1                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b76   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b78   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b7a   6faf     MOVWF     0xaf,0x1           movwf prom+2, 1                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b7c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b7e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b80   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b82   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b84   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b86   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b88   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b8a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b8c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b8e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b90   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b92   6fb0     MOVWF     0xb0,0x1           movwf curr_byte, 1                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b94   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b96   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b98   6fb1     MOVWF     0xb1,0x1           movwf curr_byte+1, 1                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b9a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b9c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                              * for the entry.                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                              */                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005b9e   cff6     MOVFF     0xff6,0x2b4      data_ptr = TBLPTR;                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005ba0   f2b4                                                                                                               
005ba2   cff7     MOVFF     0xff7,0x2b5                                                                                     
005ba4   f2b5                                                                                                               
005ba6   cff8     MOVFF     0xff8,0x2b6                                                                                     
005ba8   f2b6                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005baa   c2ad     MOVFF     0x2ad,0xff6      TBLPTR = prom;                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bac   fff6                                                                                                               
005bae   c2ae     MOVFF     0x2ae,0xff7                                                                                     
005bb0   fff7                                                                                                               
005bb2   c2af     MOVFF     0x2af,0xff8                                                                                     
005bb4   fff8                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             /* do the copy loop */                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bb6   0102     MOVLB     0x2                movlb curr_byte                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bb8   53b0     MOVF      0xb0,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           copy_loop:                                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bba   e102     BNZ       0x5bc0             bnz 2 /* copy_one_byte */                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bbc   53b1     MOVF      0xb1,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bbe   e007     BZ        0x5bce             bz 7  /* done_copying */                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           copy_one_byte:                                                                   C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bc0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bc2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bc4   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bc6   07b0     DECF      0xb0,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bc8   e2f8     BC        0x5bba             bc -8   /* copy_loop */                                                      C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bca   07b1     DECF      0xb1,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bcc   d7f9     BRA       0x5bc0             bra -7  /* copy_one_byte */                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           done_copying:                                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bce   c2b4     MOVFF     0x2b4,0xff6      TBLPTR = data_ptr;                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bd0   fff6                                                                                                               
005bd2   c2b5     MOVFF     0x2b5,0xff7                                                                                     
005bd4   fff7                                                                                                               
005bd6   c2b6     MOVFF     0x2b6,0xff8                                                                                     
005bd8   fff8                                                                                                               
                                             /* next entry... */                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bda   0102     MOVLB     0x2              curr_entry--;                                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005bdc   07b2     DECF      0xb2,0x1,0x1                                                                                    
005bde   0e00     MOVLW     0x0                                                                                             
005be0   5bb3     SUBWFB    0xb3,0x1,0x1                                                                                    
005be2   d7bf     BRA       0x5b62           goto test;                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           done:                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           ;                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
005be4   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_startup.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * USAGE:                                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *  custom file.                                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <usart.h>                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <capture.h>                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <timers.h>                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <string.h>                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056b8   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056ba   d002     BRA       0x56c0                                                                                          
0056be   d7fc     BRA       0x56b8                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056bc   d7fd     BRA       0x56b8             continue;                                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056c0   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056c2   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056c4   ffe6                                                                                                               
0056c6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0056c8   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056ca   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056cc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0056ce   ffe6                                                                                                               
0056d0   ec4f     CALL      0x489e,0x0                                                                                      
0056d2   f024                                                                                                               
0056d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0056d6   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056d8   6ead     MOVWF     0xad,0x0                                                                                        
0056da   dfee     RCALL     0x56b8           Wait4TXEmpty();                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056dc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056de   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0056e0   ffd9                                                                                                               
0056e2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056e4   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056e6   ffe6                                                                                                               
0056e8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0056ea   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056ec   0102     MOVLB     0x2              ptr = (unsigned char *) &odata;                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056ee   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0056f0   0ffd     ADDLW     0xfd                                                                                            
0056f2   6fd8     MOVWF     0xd8,0x1                                                                                        
0056f4   0eff     MOVLW     0xff                                                                                            
0056f6   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0056f8   6fd9     MOVWF     0xd9,0x1                                                                                        
0056fa   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0056fc   6aea     CLRF      0xea,0x0                                                                                        
0056fe   25d8     ADDWF     0xd8,0x0,0x1                                                                                    
005700   6ee9     MOVWF     0xe9,0x0                                                                                        
005702   51d9     MOVF      0xd9,0x0,0x1                                                                                    
005704   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005706   50ef     MOVF      0xef,0x0,0x0                                                                                    
005708   6ee6     MOVWF     0xe6,0x0                                                                                        
00570a   ec4f     CALL      0x489e,0x0                                                                                      
00570c   f024                                                                                                               
00570e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005710   c2d8     MOVFF     0x2d8,0xfe9      Hex_output(ptr[0]);                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005712   ffe9                                                                                                               
005714   c2d9     MOVFF     0x2d9,0xfea                                                                                     
005716   ffea                                                                                                               
005718   50ef     MOVF      0xef,0x0,0x0                                                                                    
00571a   6ee6     MOVWF     0xe6,0x0                                                                                        
00571c   ec4f     CALL      0x489e,0x0                                                                                      
00571e   f024                                                                                                               
005720   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005722   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005724   6ead     MOVWF     0xad,0x0                                                                                        
005726   dfc8     RCALL     0x56b8           Wait4TXEmpty();                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005728   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00572a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00572c   ffd9                                                                                                               
00572e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005730   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005732   ffe6                                                                                                               
005734   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005736   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005738   0102     MOVLB     0x2              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00573a   6bda     CLRF      0xda,0x1                                                                                        
00573c   0e1a     MOVLW     0x1a                                                                                            
00573e   5dda     SUBWF     0xda,0x0,0x1                                                                                    
005740   e211     BC        0x5764                                                                                          
00575e   0102     MOVLB     0x2                                                                                             
005760   2bda     INCF      0xda,0x1,0x1                                                                                    
005762   d7ec     BRA       0x573c                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005742   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005744   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005746   ffe9                                                                                                               
005748   2adb     INCF      0xdb,0x1,0x0                                                                                    
00574a   0efe     MOVLW     0xfe                                                                                            
00574c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00574e   ffea                                                                                                               
005750   e301     BNC       0x5754                                                                                          
005752   2adb     INCF      0xdb,0x1,0x0                                                                                    
005754   50ef     MOVF      0xef,0x0,0x0                                                                                    
005756   6ee6     MOVWF     0xe6,0x0                                                                                        
005758   ec4f     CALL      0x489e,0x0                                                                                      
00575a   f024                                                                                                               
00575c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005764   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005766   6ead     MOVWF     0xad,0x0                                                                                        
005768   dfa7     RCALL     0x56b8           Wait4TXEmpty();                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00576a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00576c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00576e   ffd9                                                                                                               
005770   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005772   0102     MOVLB     0x2              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005774   0e20     MOVLW     0x20                                                                                            
005776   6fd8     MOVWF     0xd8,0x1                                                                                        
005778   0e02     MOVLW     0x2                                                                                             
00577a   6fd9     MOVWF     0xd9,0x1                                                                                        
00577c   0102     MOVLB     0x2              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00577e   5120     MOVF      0x20,0x0,0x1                                                                                    
005780   0102     MOVLB     0x2                                                                                             
005782   6fe0     MOVWF     0xe0,0x1                                                                                        
005784   6be1     CLRF      0xe1,0x1                                                                                        
005786   51e2     MOVF      0xe2,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005788   19e0     XORWF     0xe0,0x0,0x1                                                                                    
00578a   e102     BNZ       0x5790                                                                                          
00578c   51e3     MOVF      0xe3,0x0,0x1                                                                                    
00578e   19e1     XORWF     0xe1,0x0,0x1                                                                                    
005790   e018     BZ        0x57c2                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005792   0102     MOVLB     0x2                if (statusflag.FIRST_TIME == 1)                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005794   a540     BTFSS     0x40,0x2,0x1                                                                                    
005796   d002     BRA       0x579c                                                                                          
                                               {                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005798   9540     BCF       0x40,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00579a   d00f     BRA       0x57ba             else                                                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               {                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00579c   c2e2     MOVFF     0x2e2,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00579e   ffe6                                                                                                               
0057a0   ec4f     CALL      0x489e,0x0                                                                                      
0057a2   f024                                                                                                               
0057a4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057a6   c2e0     MOVFF     0x2e0,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057a8   ffe6                                                                                                               
0057aa   ec4f     CALL      0x489e,0x0                                                                                      
0057ac   f024                                                                                                               
0057ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057b0   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057b2   6ead     MOVWF     0xad,0x0                                                                                        
0057b4   df81     RCALL     0x56b8               Wait4TXEmpty();                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057b6   0102     MOVLB     0x2                  statusflag.FIRST_TIME = 0;                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057b8   9540     BCF       0x40,0x2,0x1                                                                                    
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057ba   c2e0     MOVFF     0x2e0,0x2e2        ifi_last_packet1 = ifi_packet_num1;                                          C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057bc   f2e2                                                                                                               
0057be   c2e1     MOVFF     0x2e1,0x2e3                                                                                     
0057c0   f2e3                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057c2   0102     MOVLB     0x2              ifi_last_packet1++;                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057c4   2be2     INCF      0xe2,0x1,0x1                                                                                    
0057c6   0e00     MOVLW     0x0                                                                                             
0057c8   23e3     ADDWFC    0xe3,0x1,0x1                                                                                    
0057ca   35e3     RLCF      0xe3,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057cc   e204     BC        0x57d6                                                                                          
0057ce   51e2     MOVF      0xe2,0x0,0x1                                                                                    
0057d0   08ff     SUBLW     0xff                                                                                            
0057d2   0e00     MOVLW     0x0                                                                                             
0057d4   55e3     SUBFWB    0xe3,0x0,0x1                                                                                    
0057d6   e202     BC        0x57dc                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057d8   6be2     CLRF      0xe2,0x1           ifi_last_packet1 = 0;                                                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057da   6be3     CLRF      0xe3,0x1                                                                                        
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057dc   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057e2   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0057de   0e15     MOVLW     0x15               baud_115);                                                                   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0057e6   ec51     CALL      0x5ea2,0x0                                                                                      
0057e8   f02f                                                                                                               
0057ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057ee   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057f0   6ee6     MOVWF     0xe6,0x0                                                                                        
0057f2   ec12     CALL      0x6024,0x0                                                                                      
0057f4   f030                                                                                                               
0057f6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057f8   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057fa   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
0057fc   ffe6                                                                                                               
0057fe   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005800   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005802   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005804   cfdb     MOVFF     0xfdb,0x2db                                                                                     
005806   f2db                                                                                                               
005808   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00580a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00580c   ffd9                                                                                                               
00580e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005810   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005812   ffe6                                                                                                               
005814   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005816   ffd9                                                                                                               
005818   0e02     MOVLW     0x2                                                                                             
00581a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                             unsigned int result;                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00582c   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00582e   6ee6     MOVWF     0xe6,0x0                                                                                        
00581c   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00581e   6ee6     MOVWF     0xe6,0x0                                                                                        
005820   0efe     MOVLW     0xfe                                                                                            
005822   50db     MOVF      0xdb,0x0,0x0                                                                                    
005824   0b7f     ANDLW     0x7f                                                                                            
005826   0bfe     ANDLW     0xfe                                                                                            
005828   0bfd     ANDLW     0xfd                                                                                            
00582a   6ee6     MOVWF     0xe6,0x0                                                                                        
005830   ecb7     CALL      0x5d6e,0x0                                                                                      
005832   f02e                                                                                                               
005834   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005836   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005838   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00583a   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00583c   6ee6     MOVWF     0xe6,0x0                                                                                        
00583e   ec30     CALL      0x6060,0x0                                                                                      
005840   f030                                                                                                               
005842   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005844   ec47     CALL      0x608e,0x0       ConvertADC();                                                                  C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005846   f030                                                                                                               
005848   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00584a   f004                                                                                                               
00584c   0900     IORLW     0x0                                                                                             
00584e   e001     BZ        0x5852                                                                                          
005850   d7fb     BRA       0x5848                                                                                          
005852   eca7     CALL      0x5f4e,0x0       ReadADC();                                                                     C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005854   f02f                                                                                                               
005856   ec44     CALL      0x6088,0x0       CloseADC();                                                                    C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
005858   f030                                                                                                               
00585a   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00585c   6e02     MOVWF     0x2,0x0                                                                                         
00585e   c002     MOVFF     0x2,0x3                                                                                         
005860   f003                                                                                                               
005862   6a02     CLRF      0x2,0x0                                                                                         
005864   50c3     MOVF      0xc3,0x0,0x0                                                                                    
005866   0100     MOVLB     0x0                                                                                             
005868   1002     IORWF     0x2,0x0,0x0                                                                                     
00586a   6e00     MOVWF     0x0,0x0                                                                                         
00586c   c003     MOVFF     0x3,0x1                                                                                         
00586e   f001                                                                                                               
005870   c000     MOVFF     0x0,0xfde                                                                                       
005872   ffde                                                                                                               
005874   c001     MOVFF     0x1,0xfdd                                                                                       
005876   ffdd                                                                                                               
005878   cfde     MOVFF     0xfde,0x0        return result;                                                                 C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00587a   f000                                                                                                               
00587c   cfdd     MOVFF     0xfdd,0x1                                                                                       
00587e   f001                                                                                                               
005880   c000     MOVFF     0x0,0xff3                                                                                       
005882   fff3                                                                                                               
005884   c001     MOVFF     0x1,0xff4                                                                                       
005886   fff4                                                                                                               
005888   d000     BRA       0x588a                                                                                          
00588a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
00588c   ffe1                                                                                                               
00588e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005890   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005892   ffd9                                                                                                               
005894   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\ifi_utilities.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *  This file contains the main program loop.                                     C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * USAGE:                                                                         C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *  You should not need to modify this file.                                      C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *  Note the different loop speed for the two routines:                           C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *     Process_Data_From_Master_uP                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #include "ifi_utilities.h"                                                       C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #include "user_routines.h"                                                       C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\trcCode\Repository\Summer\Oceanus\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\trcCode\Repository\Summer\Oceanus\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * FUNCTION NAME: main                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * PURPOSE:       Main program function.                                          C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\trcCode\Repository\Summer\Oceanus\main.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                           void main (void)                                                                 C:\trcCode\Repository\Summer\Oceanus\main.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\trcCode\Repository\Summer\Oceanus\main.c
005fb8   ec8d     CALL      0x251a,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\trcCode\Repository\Summer\Oceanus\main.c
005fba   f012                                                                                                               
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fbc   ec02     CALL      0x3204,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\trcCode\Repository\Summer\Oceanus\main.c
005fbe   f019                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fc0   0102     MOVLB     0x2              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\trcCode\Repository\Summer\Oceanus\main.c
005fc2   9140     BCF       0x40,0x0,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fdc   d7f3     BRA       0x5fc4           while (1)   /* This loop will repeat indefinitely. */                          C:\trcCode\Repository\Summer\Oceanus\main.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #ifdef _SIMULATOR                                                                C:\trcCode\Repository\Summer\Oceanus\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\trcCode\Repository\Summer\Oceanus\main.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fc4   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\trcCode\Repository\Summer\Oceanus\main.c
005fc6   a140     BTFSS     0x40,0x0,0x1                                                                                    
005fc8   d007     BRA       0x5fd8                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\trcCode\Repository\Summer\Oceanus\main.c
005fca   ec76     CALL      0x32ec,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\trcCode\Repository\Summer\Oceanus\main.c
005fcc   f019                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fce   0102     MOVLB     0x2                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\trcCode\Repository\Summer\Oceanus\main.c
005fd0   ad21     BTFSS     0x21,0x6,0x1                                                                                    
005fd2   d002     BRA       0x5fd8                                                                                          
                                                 {                                                                          C:\trcCode\Repository\Summer\Oceanus\main.c
005fd4   ec6d     CALL      0x46da,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\trcCode\Repository\Summer\Oceanus\main.c
005fd6   f023                                                                                                               
                                                 }                                                                          C:\trcCode\Repository\Summer\Oceanus\main.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
005fd8   ec34     CALL      0x4868,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\trcCode\Repository\Summer\Oceanus\main.c
005fda   f024                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                             } /* while (1) */                                                              C:\trcCode\Repository\Summer\Oceanus\main.c
005fde   0012     RETURN    0x0            }  /* END of Main */                                                             C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\main.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\main.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	TITLE:		pwm.c                                                                  C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	DATE:		29-Dec-2006                                                             C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *				without permission. Thanks.                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *				Copyright ©2006-2007 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	29-Dec-2006  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           #include "pwm.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	FUNCTION:		Initialize_PWM()                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	PURPOSE:		CCP and timer initialization				                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	CALLED FROM:	PWM()                                                             C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           void Initialize_PWM(void)                                                        C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// select 16-bit read/writes to timer 3                                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
005896   8eb1     BSF       0xb1,0x7,0x0   	T3CONbits.RD16 = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// CCP2 through CCP5 will use timer 3 for compare mode                          C:\trcCode\Repository\Summer\Oceanus\pwm.c
005898   86b1     BSF       0xb1,0x3,0x0   	T3CONbits.T3CCP1 = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
00589a   9cb1     BCF       0xb1,0x6,0x0   	T3CONbits.T3CCP2 = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// use a 1:1 prescale for timer 3                                               C:\trcCode\Repository\Summer\Oceanus\pwm.c
00589c   9ab1     BCF       0xb1,0x5,0x0   	T3CONbits.T3CKPS1 = 0;                                                          C:\trcCode\Repository\Summer\Oceanus\pwm.c
00589e   98b1     BCF       0xb1,0x4,0x0   	T3CONbits.T3CKPS0 = 0;                                                          C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// use the internal 10MHz clock for timer 3 (each timer "tick" equals 100ns)    C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058a0   92b1     BCF       0xb1,0x1,0x0   	T3CONbits.TMR3CS = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// disable the timer 3 overflow interrupt                                       C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058a2   92a0     BCF       0xa0,0x1,0x0   	PIE2bits.TMR3IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// disable the CCP interrupts                                                   C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058a4   90a0     BCF       0xa0,0x0,0x0   	PIE2bits.CCP2IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058a6   90a3     BCF       0xa3,0x0,0x0   	PIE3bits.CCP3IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058a8   92a3     BCF       0xa3,0x1,0x0   	PIE3bits.CCP4IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058aa   94a3     BCF       0xa3,0x2,0x0   	PIE3bits.CCP5IE = 0;	                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058ac   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	FUNCTION:		PWM()                                                               C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	PURPOSE:		Replacement for IFI's Generate_Pwms() function						                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	PARAMETERS:		Four unsigned char PWM position/velocity values                   C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *					for PWM outputs 13, 14, 15 and 16.                                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058ae   cfd9     MOVFF     0xfd9,0xfe6    void PWM(unsigned char pwm_13, unsigned char pwm_14, unsigned char pwm_15, unsigned char pwm_16) C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058b0   ffe6                                                                                                               
0058b2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0058b4   ffd9                                                                                                               
0058b6   0e08     MOVLW     0x8                                                                                             
0058b8   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	int temp_pwm_13;                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	int temp_pwm_14;                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	int temp_pwm_15;                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	int temp_pwm_16;                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// stop timer 3                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058ba   90b1     BCF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// initialize timer 3 register to zero                                          C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058bc   6ab3     CLRF      0xb3,0x0       	TMR3H = 0;                                                                      C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058be   6ab2     CLRF      0xb2,0x0       	TMR3L = 0;                                                                      C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// reset CCP hardware                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058c0   6aba     CLRF      0xba,0x0       	CCP2CON = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058c2   6ab7     CLRF      0xb7,0x0       	CCP3CON = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058c4   6a73     CLRF      0x73,0x0       	CCP4CON = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058c6   6a70     CLRF      0x70,0x0       	CCP5CON = 0;                                                                    C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// calculate the number of 100 ns timer ticks                                   C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// needed to match the desired PWM pulse width                                  C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058c8   0efe     MOVLW     0xfe           	temp_pwm_13 = (PWM_13_GAIN * ((int)pwm_13 - 127)) + PWM_13_CENTER;              C:\trcCode\Repository\Summer\Oceanus\pwm.c
0058ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0058cc   6e02     MOVWF     0x2,0x0                                                                                         
0058ce   6a03     CLRF      0x3,0x0                                                                                         
0058d0   0e7f     MOVLW     0x7f                                                                                            
0058d2   5e02     SUBWF     0x2,0x1,0x0                                                                                     
0058d4   0e00     MOVLW     0x0                                                                                             
0058d6   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
0058d8   0e32     MOVLW     0x32                                                                                            
0058da   6e36     MOVWF     0x36,0x0                                                                                        
0058dc   6a37     CLRF      0x37,0x0                                                                                        
0058de   c002     MOVFF     0x2,0x3b                                                                                        
0058e0   f03b                                                                                                               
0058e2   c003     MOVFF     0x3,0x3c                                                                                        
0058e4   f03c                                                                                                               
0058e6   ec99     CALL      0x3f32,0x0                                                                                      
0058e8   f01f                                                                                                               
0058ea   c034     MOVFF     0x34,0x0                                                                                        
0058ec   f000                                                                                                               
0058ee   c035     MOVFF     0x35,0x1                                                                                        
0058f0   f001                                                                                                               
0058f2   0e98     MOVLW     0x98                                                                                            
0058f4   2600     ADDWF     0x0,0x1,0x0                                                                                     
0058f6   0e3a     MOVLW     0x3a                                                                                            
0058f8   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0058fa   c000     MOVFF     0x0,0xfde                                                                                       
0058fc   ffde                                                                                                               
0058fe   c001     MOVFF     0x1,0xfdd                                                                                       
005900   ffdd                                                                                                               
005902   0efd     MOVLW     0xfd           	temp_pwm_14 = (PWM_14_GAIN * ((int)pwm_14 - 127)) + PWM_14_CENTER;              C:\trcCode\Repository\Summer\Oceanus\pwm.c
005904   50db     MOVF      0xdb,0x0,0x0                                                                                    
005906   6e02     MOVWF     0x2,0x0                                                                                         
005908   6a03     CLRF      0x3,0x0                                                                                         
00590a   0e7f     MOVLW     0x7f                                                                                            
00590c   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00590e   0e00     MOVLW     0x0                                                                                             
005910   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005912   0e32     MOVLW     0x32                                                                                            
005914   6e36     MOVWF     0x36,0x0                                                                                        
005916   6a37     CLRF      0x37,0x0                                                                                        
005918   c002     MOVFF     0x2,0x3b                                                                                        
00591a   f03b                                                                                                               
00591c   c003     MOVFF     0x3,0x3c                                                                                        
00591e   f03c                                                                                                               
005920   ec99     CALL      0x3f32,0x0                                                                                      
005922   f01f                                                                                                               
005924   c034     MOVFF     0x34,0x0                                                                                        
005926   f000                                                                                                               
005928   c035     MOVFF     0x35,0x1                                                                                        
00592a   f001                                                                                                               
00592c   0e98     MOVLW     0x98                                                                                            
00592e   2600     ADDWF     0x0,0x1,0x0                                                                                     
005930   0e3a     MOVLW     0x3a                                                                                            
005932   2201     ADDWFC    0x1,0x1,0x0                                                                                     
005934   0e02     MOVLW     0x2                                                                                             
005936   c000     MOVFF     0x0,0xfdb                                                                                       
005938   ffdb                                                                                                               
00593a   0e03     MOVLW     0x3                                                                                             
00593c   c001     MOVFF     0x1,0xfdb                                                                                       
00593e   ffdb                                                                                                               
005940   0efc     MOVLW     0xfc           	temp_pwm_15 = (PWM_15_GAIN * ((int)pwm_15 - 127)) + PWM_15_CENTER;              C:\trcCode\Repository\Summer\Oceanus\pwm.c
005942   50db     MOVF      0xdb,0x0,0x0                                                                                    
005944   6e02     MOVWF     0x2,0x0                                                                                         
005946   6a03     CLRF      0x3,0x0                                                                                         
005948   0e7f     MOVLW     0x7f                                                                                            
00594a   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00594c   0e00     MOVLW     0x0                                                                                             
00594e   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005950   0e32     MOVLW     0x32                                                                                            
005952   6e36     MOVWF     0x36,0x0                                                                                        
005954   6a37     CLRF      0x37,0x0                                                                                        
005956   c002     MOVFF     0x2,0x3b                                                                                        
005958   f03b                                                                                                               
00595a   c003     MOVFF     0x3,0x3c                                                                                        
00595c   f03c                                                                                                               
00595e   ec99     CALL      0x3f32,0x0                                                                                      
005960   f01f                                                                                                               
005962   c034     MOVFF     0x34,0x0                                                                                        
005964   f000                                                                                                               
005966   c035     MOVFF     0x35,0x1                                                                                        
005968   f001                                                                                                               
00596a   0e98     MOVLW     0x98                                                                                            
00596c   2600     ADDWF     0x0,0x1,0x0                                                                                     
00596e   0e3a     MOVLW     0x3a                                                                                            
005970   2201     ADDWFC    0x1,0x1,0x0                                                                                     
005972   0e04     MOVLW     0x4                                                                                             
005974   c000     MOVFF     0x0,0xfdb                                                                                       
005976   ffdb                                                                                                               
005978   0e05     MOVLW     0x5                                                                                             
00597a   c001     MOVFF     0x1,0xfdb                                                                                       
00597c   ffdb                                                                                                               
00597e   0efb     MOVLW     0xfb           	temp_pwm_16 = (PWM_16_GAIN * ((int)pwm_16 - 127)) + PWM_16_CENTER;              C:\trcCode\Repository\Summer\Oceanus\pwm.c
005980   50db     MOVF      0xdb,0x0,0x0                                                                                    
005982   6e02     MOVWF     0x2,0x0                                                                                         
005984   6a03     CLRF      0x3,0x0                                                                                         
005986   0e7f     MOVLW     0x7f                                                                                            
005988   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00598a   0e00     MOVLW     0x0                                                                                             
00598c   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
00598e   0e32     MOVLW     0x32                                                                                            
005990   6e36     MOVWF     0x36,0x0                                                                                        
005992   6a37     CLRF      0x37,0x0                                                                                        
005994   c002     MOVFF     0x2,0x3b                                                                                        
005996   f03b                                                                                                               
005998   c003     MOVFF     0x3,0x3c                                                                                        
00599a   f03c                                                                                                               
00599c   ec99     CALL      0x3f32,0x0                                                                                      
00599e   f01f                                                                                                               
0059a0   c034     MOVFF     0x34,0x0                                                                                        
0059a2   f000                                                                                                               
0059a4   c035     MOVFF     0x35,0x1                                                                                        
0059a6   f001                                                                                                               
0059a8   0e98     MOVLW     0x98                                                                                            
0059aa   2600     ADDWF     0x0,0x1,0x0                                                                                     
0059ac   0e3a     MOVLW     0x3a                                                                                            
0059ae   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0059b0   0e06     MOVLW     0x6                                                                                             
0059b2   c000     MOVFF     0x0,0xfdb                                                                                       
0059b4   ffdb                                                                                                               
0059b6   0e07     MOVLW     0x7                                                                                             
0059b8   c001     MOVFF     0x1,0xfdb                                                                                       
0059ba   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// load the CCP compare registers                                               C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059bc   50df     MOVF      0xdf,0x0,0x0   	CCPR2L = LOBYTE((unsigned int)temp_pwm_13);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059be   6ebb     MOVWF     0xbb,0x0                                                                                        
0059c0   cfde     MOVFF     0xfde,0x0      	CCPR2H = HIBYTE((unsigned int)temp_pwm_13);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059c2   f000                                                                                                               
0059c4   cfdd     MOVFF     0xfdd,0x1                                                                                       
0059c6   f001                                                                                                               
0059c8   c001     MOVFF     0x1,0x0                                                                                         
0059ca   f000                                                                                                               
0059cc   6a01     CLRF      0x1,0x0                                                                                         
0059ce   5000     MOVF      0x0,0x0,0x0                                                                                     
0059d0   6ebc     MOVWF     0xbc,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059d2   0e02     MOVLW     0x2            	CCPR3L = LOBYTE((unsigned int)temp_pwm_14);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059d4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0059d6   6eb8     MOVWF     0xb8,0x0                                                                                        
0059d8   0e02     MOVLW     0x2            	CCPR3H = HIBYTE((unsigned int)temp_pwm_14);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059da   cfdb     MOVFF     0xfdb,0x0                                                                                       
0059dc   f000                                                                                                               
0059de   0e03     MOVLW     0x3                                                                                             
0059e0   cfdb     MOVFF     0xfdb,0x1                                                                                       
0059e2   f001                                                                                                               
0059e4   c001     MOVFF     0x1,0x0                                                                                         
0059e6   f000                                                                                                               
0059e8   6a01     CLRF      0x1,0x0                                                                                         
0059ea   5000     MOVF      0x0,0x0,0x0                                                                                     
0059ec   6eb9     MOVWF     0xb9,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059ee   0e04     MOVLW     0x4            	CCPR4L = LOBYTE((unsigned int)temp_pwm_15);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059f0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0059f2   6e74     MOVWF     0x74,0x0                                                                                        
0059f4   0e04     MOVLW     0x4            	CCPR4H = HIBYTE((unsigned int)temp_pwm_15);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
0059f6   cfdb     MOVFF     0xfdb,0x0                                                                                       
0059f8   f000                                                                                                               
0059fa   0e05     MOVLW     0x5                                                                                             
0059fc   cfdb     MOVFF     0xfdb,0x1                                                                                       
0059fe   f001                                                                                                               
005a00   c001     MOVFF     0x1,0x0                                                                                         
005a02   f000                                                                                                               
005a04   6a01     CLRF      0x1,0x0                                                                                         
005a06   5000     MOVF      0x0,0x0,0x0                                                                                     
005a08   6e75     MOVWF     0x75,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a0a   0e06     MOVLW     0x6            	CCPR5L = LOBYTE((unsigned int)temp_pwm_16);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a0c   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a0e   6e71     MOVWF     0x71,0x0                                                                                        
005a10   0e06     MOVLW     0x6            	CCPR5H = HIBYTE((unsigned int)temp_pwm_16);                                     C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a12   cfdb     MOVFF     0xfdb,0x0                                                                                       
005a14   f000                                                                                                               
005a16   0e07     MOVLW     0x7                                                                                             
005a18   cfdb     MOVFF     0xfdb,0x1                                                                                       
005a1a   f001                                                                                                               
005a1c   c001     MOVFF     0x1,0x0                                                                                         
005a1e   f000                                                                                                               
005a20   6a01     CLRF      0x1,0x0                                                                                         
005a22   5000     MOVF      0x0,0x0,0x0                                                                                     
005a24   6e72     MOVWF     0x72,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// disable all interrupts to prevent an interrupt routine                       C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// from executing after the CCP hardware is initialized                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// and the moment the timer is started                                          C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a26   9ef2     BCF       0xf2,0x7,0x0   	INTCONbits.GIEH = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// setup CCP hardware for compare mode (each PWM output                         C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// transitions from low to high at this point)                                  C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a28   0e09     MOVLW     0x9            	CCP2CON = 0x09;                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a2a   6eba     MOVWF     0xba,0x0                                                                                        
005a2c   6eb7     MOVWF     0xb7,0x0       	CCP3CON = 0x09;                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a2e   6e73     MOVWF     0x73,0x0       	CCP4CON = 0x09;                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a30   6e70     MOVWF     0x70,0x0       	CCP5CON = 0x09;                                                                 C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	// start timer 3                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a32   80b1     BSF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 1;                                                           C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
                                           	//enable interrupts                                                             C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a34   8ef2     BSF       0xf2,0x7,0x0   	INTCONbits.GIEH = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a36   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\pwm.c
005a38   ffe1                                                                                                               
005a3a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005a3c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a3e   ffd9                                                                                                               
005a40   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	DATE:		10-Jan-2006                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				functions mentioned below.                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				correctly:                                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  from the project and all project source files.                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  the project and all project source files.                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  like this:                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // receive functionality                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // transmit functionality                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // receive functionality                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // transmit functionality                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  printf("and");                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *				Copyright ©2004-2007 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *		                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	10-Jan-2006  0.4  RKW - Modified the #pragma interruptlow line to also         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	                  save the .tmpdata section.                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// accept any more data                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// the last reset                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// the last reset                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// accept any more data                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// accept any more data                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// the last reset                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// the last reset                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// accept any more data                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           													// circular queue                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					port one.                                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ef8   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004efa   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004efc   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low speed                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high speed                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004efe   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f00   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f02   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f04   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// software build, include code that is specific to                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// initializing the receiver                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f06   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f08   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f0a   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables address detection                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables address detection                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f0c   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f0e   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							// asynchronous mode:                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables receiver                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enable receiver                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							// synchronous mode:                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f10   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low-priority                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high-priority                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f12   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif					//                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// software build, include code that is specific to                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f14   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f16   69e4     SETF      0xe4,0x1                                                                                        
004f18   69e5     SETF      0xe5,0x1                                                                                        
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f1a   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f1c   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f1e   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f20   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low-priority                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high-priority                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f22   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f24   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif					//                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f26   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f28   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					port two.                                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f2a   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f2c   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f2e   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low speed                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high speed                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f30   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f32   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f34   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f36   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// software build, include code that is specific to                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// initializing the receiver                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f38   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f3a   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f3c   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables address detection                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables address detection                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f3e   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f40   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							// asynchronous mode:                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables receiver                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enable receiver                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							// synchronous mode:                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f42   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low-priority                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high-priority                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f44   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif					//                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// software build, include code that is specific to                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f46   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f48   69e4     SETF      0xe4,0x1                                                                                        
004f4a   69e5     SETF      0xe5,0x1                                                                                        
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f4c   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f4e   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f50   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f52   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: low-priority                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: high-priority                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f54   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//                                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f56   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif					//                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f58   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f5a   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ones's received data queue.		                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the next byte.                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f5c   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f5e   ffe6                                                                                                               
004f60   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004f62   ffd9                                                                                                               
004f64   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	unsigned char temp;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// using it.                                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f66   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f68   c277     MOVFF     0x277,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f6a   ffdf                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f6c   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// return the byte count                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f6e   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f70   d000     BRA       0x4f72                                                                                          
004f72   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f76   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004f78   ffd9                                                                                                               
004f7a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					two's received data queue.		                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					the next byte.                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f7c   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f7e   ffe6                                                                                                               
004f80   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004f82   ffd9                                                                                                               
004f84   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	unsigned char temp;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// using it.                                                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f86   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f88   c283     MOVFF     0x283,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f8a   ffdf                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f8c   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// return the byte count                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f8e   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f90   d000     BRA       0x4f92                                                                                          
004f92   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f96   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004f98   ffd9                                                                                                               
004f9a   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f9c   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004f9e   ffe6                                                                                                               
004fa0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004fa2   ffd9                                                                                                               
004fa4   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	unsigned char byte;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fa6   0102     MOVLB     0x2            	if(Rx_1_Queue_Empty)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fa8   5174     MOVF      0x74,0x0,0x1                                                                                    
004faa   e003     BZ        0x4fb2                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// error: no data to read                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fac   0e00     MOVLW     0x0            		return(0);                                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fae   d017     BRA       0x4fde                                                                                          
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fb0   d016     BRA       0x4fde         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fb2   5175     MOVF      0x75,0x0,0x1   		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fb4   6aea     CLRF      0xea,0x0                                                                                        
004fb6   0f00     ADDLW     0x0                                                                                             
004fb8   6ee9     MOVWF     0xe9,0x0                                                                                        
004fba   0e01     MOVLW     0x1                                                                                             
004fbc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004fbe   cfef     MOVFF     0xfef,0xfdf                                                                                     
004fc0   ffdf                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// decrement the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fc2   0777     DECF      0x77,0x1,0x1   		Rx_1_Queue_Byte_Count--;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the read pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fc4   2b75     INCF      0x75,0x1,0x1   		Rx_1_Queue_Read_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fc6   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fc8   1775     ANDWF     0x75,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get altered while we're using it.                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fca   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fcc   5176     MOVF      0x76,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fce   5d75     SUBWF     0x75,0x0,0x1                                                                                    
004fd0   e102     BNZ       0x4fd6                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fd2   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fd4   6f74     MOVWF     0x74,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// interrupt back on.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fd6   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fd8   6b73     CLRF      0x73,0x1       		Rx_1_Queue_Full = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// return the data                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fda   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fdc   d000     BRA       0x4fde                                                                                          
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fde   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fe0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004fe2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004fe4   ffd9                                                                                                               
004fe6   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fe8   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004fea   ffe6                                                                                                               
004fec   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004fee   ffd9                                                                                                               
004ff0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	unsigned char byte;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ff2   0102     MOVLB     0x2            	if(Rx_2_Queue_Empty)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ff4   5180     MOVF      0x80,0x0,0x1                                                                                    
004ff6   e003     BZ        0x4ffe                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// error: no data to read                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ff8   0e00     MOVLW     0x0            		return(0);                                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ffa   d017     BRA       0x502a                                                                                          
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ffc   d016     BRA       0x502a         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
004ffe   5181     MOVF      0x81,0x0,0x1   		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005000   6aea     CLRF      0xea,0x0                                                                                        
005002   0f40     ADDLW     0x40                                                                                            
005004   6ee9     MOVWF     0xe9,0x0                                                                                        
005006   0e01     MOVLW     0x1                                                                                             
005008   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00500a   cfef     MOVFF     0xfef,0xfdf                                                                                     
00500c   ffdf                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// decrement the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00500e   0783     DECF      0x83,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the read pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005010   2b81     INCF      0x81,0x1,0x1   		Rx_2_Queue_Read_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005012   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005014   1781     ANDWF     0x81,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get altered while we're using it.                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005016   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005018   5182     MOVF      0x82,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00501a   5d81     SUBWF     0x81,0x0,0x1                                                                                    
00501c   e102     BNZ       0x5022                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00501e   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005020   6f80     MOVWF     0x80,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// interrupt back on.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005022   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005024   6b7f     CLRF      0x7f,0x1       		Rx_2_Queue_Full = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// return the data                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005026   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005028   d000     BRA       0x502a                                                                                          
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00502a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00502c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00502e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005030   ffd9                                                                                                               
005032   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005034   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005036   ffe6                                                                                                               
005038   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00503a   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00503c   0102     MOVLB     0x2            	while(Tx_1_Queue_Full);                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00503e   517a     MOVF      0x7a,0x0,0x1                                                                                    
005040   e001     BZ        0x5044                                                                                          
005042   d7fc     BRA       0x503c                                                                                          
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005044   517d     MOVF      0x7d,0x0,0x1   	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005046   6aea     CLRF      0xea,0x0                                                                                        
005048   0f20     ADDLW     0x20                                                                                            
00504a   6ee9     MOVWF     0xe9,0x0                                                                                        
00504c   0e01     MOVLW     0x1                                                                                             
00504e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005050   0efe     MOVLW     0xfe                                                                                            
005052   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005054   ffef                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// increment the queue byte count                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005056   2b7e     INCF      0x7e,0x1,0x1   	Tx_1_Queue_Byte_Count++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// increment the write pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005058   2b7d     INCF      0x7d,0x1,0x1   	Tx_1_Queue_Write_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00505a   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00505c   177d     ANDWF     0x7d,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// get altered while we're using it.                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00505e   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// is the circular queue now full?                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005060   517d     MOVF      0x7d,0x0,0x1   	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005062   5d7c     SUBWF     0x7c,0x0,0x1                                                                                    
005064   e102     BNZ       0x506a                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005066   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005068   6f7a     MOVWF     0x7a,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// interrupt back on.                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00506a   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00506c   6b7b     CLRF      0x7b,0x1       	Tx_1_Queue_Empty = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00506e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005070   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005072   ffd9                                                                                                               
005074   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005076   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005078   ffe6                                                                                                               
00507a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00507c   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00507e   0102     MOVLB     0x2            	while(Tx_2_Queue_Full);                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005080   5186     MOVF      0x86,0x0,0x1                                                                                    
005082   e001     BZ        0x5086                                                                                          
005084   d7fc     BRA       0x507e                                                                                          
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005086   5189     MOVF      0x89,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005088   6aea     CLRF      0xea,0x0                                                                                        
00508a   0f60     ADDLW     0x60                                                                                            
00508c   6ee9     MOVWF     0xe9,0x0                                                                                        
00508e   0e01     MOVLW     0x1                                                                                             
005090   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005092   0efe     MOVLW     0xfe                                                                                            
005094   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005096   ffef                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// increment the queue byte count                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005098   2b8a     INCF      0x8a,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// increment the write pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00509a   2b89     INCF      0x89,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00509c   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00509e   1789     ANDWF     0x89,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// get altered while we're using it.                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050a0   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// is the circular queue now full?                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050a2   5189     MOVF      0x89,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050a4   5d88     SUBWF     0x88,0x0,0x1                                                                                    
0050a6   e102     BNZ       0x50ac                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050a8   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050aa   6f86     MOVWF     0x86,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// interrupt back on.                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050ac   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050ae   6b87     CLRF      0x87,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050b0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050b2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0050b4   ffd9                                                                                                               
0050b6   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is received by serial port one.                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050b8   0102     MOVLB     0x2            	if(Rx_1_Queue_Full)                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050ba   5173     MOVF      0x73,0x0,0x1                                                                                    
0050bc   e002     BZ        0x50c2                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// more data is read.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050be   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050c0   d019     BRA       0x50f4         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050c2   5176     MOVF      0x76,0x0,0x1   		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050c4   6aea     CLRF      0xea,0x0                                                                                        
0050c6   0f00     ADDLW     0x0                                                                                             
0050c8   6ee9     MOVWF     0xe9,0x0                                                                                        
0050ca   0e01     MOVLW     0x1                                                                                             
0050cc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0050ce   cfae     MOVFF     0xfae,0xfef                                                                                     
0050d0   ffef                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to get data flowing again.                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050d2   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050d4   d003     BRA       0x50dc                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050d6   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// ...turn it back on                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050d8   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// indicate that we've had an error                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050da   2b78     INCF      0x78,0x1,0x1   			RX_1_Overrun_Errors++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050dc   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050de   2b79     INCF      0x79,0x1,0x1   			RX_1_Framing_Errors++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050e0   2b77     INCF      0x77,0x1,0x1   		Rx_1_Queue_Byte_Count++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the write pointer                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050e2   2b76     INCF      0x76,0x1,0x1   		Rx_1_Queue_Write_Index++;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050e4   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050e6   1776     ANDWF     0x76,0x1,0x1                                                                                    
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now full?                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050e8   5176     MOVF      0x76,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050ea   5d75     SUBWF     0x75,0x0,0x1                                                                                    
0050ec   e102     BNZ       0x50f2                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050ee   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050f0   6f73     MOVWF     0x73,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050f2   6b74     CLRF      0x74,0x1       		Rx_1_Queue_Empty = FALSE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050f4   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					is received by serial port two.                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050f6   0102     MOVLB     0x2            	if(Rx_2_Queue_Full)                                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050f8   517f     MOVF      0x7f,0x0,0x1                                                                                    
0050fa   e002     BZ        0x5100                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// more data is read.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050fc   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0050fe   d019     BRA       0x5132         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005100   5182     MOVF      0x82,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005102   6aea     CLRF      0xea,0x0                                                                                        
005104   0f40     ADDLW     0x40                                                                                            
005106   6ee9     MOVWF     0xe9,0x0                                                                                        
005108   0e01     MOVLW     0x1                                                                                             
00510a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00510c   cf6e     MOVFF     0xf6e,0xfef                                                                                     
00510e   ffef                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to get data flowing again.                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005110   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005112   d003     BRA       0x511a                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005114   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// ...turn it back on                                                         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005116   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           			// indicate that we've had an error                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005118   2b84     INCF      0x84,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00511a   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00511c   2b85     INCF      0x85,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00511e   2b83     INCF      0x83,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the write pointer                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005120   2b82     INCF      0x82,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005122   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005124   1782     ANDWF     0x82,0x1,0x1                                                                                    
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now full?                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005126   5182     MOVF      0x82,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005128   5d81     SUBWF     0x81,0x0,0x1                                                                                    
00512a   e102     BNZ       0x5130                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00512c   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00512e   6f7f     MOVWF     0x7f,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005130   6b80     CLRF      0x80,0x1       		Rx_2_Queue_Empty = FALSE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005132   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005134   0102     MOVLB     0x2            	if(Tx_1_Queue_Empty)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005136   517b     MOVF      0x7b,0x0,0x1                                                                                    
005138   e002     BZ        0x513e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// more data is sent.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00513a   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00513c   d012     BRA       0x5162         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00513e   517c     MOVF      0x7c,0x0,0x1   		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005140   6aea     CLRF      0xea,0x0                                                                                        
005142   0f20     ADDLW     0x20                                                                                            
005144   6ee9     MOVWF     0xe9,0x0                                                                                        
005146   0e01     MOVLW     0x1                                                                                             
005148   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00514a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00514c   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// decrement the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00514e   077e     DECF      0x7e,0x1,0x1   		Tx_1_Queue_Byte_Count--;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the read pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005150   2b7c     INCF      0x7c,0x1,0x1   		Tx_1_Queue_Read_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005152   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005154   177c     ANDWF     0x7c,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005156   517d     MOVF      0x7d,0x0,0x1   		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005158   5d7c     SUBWF     0x7c,0x0,0x1                                                                                    
00515a   e102     BNZ       0x5160                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00515c   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00515e   6f7b     MOVWF     0x7b,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005160   6b7a     CLRF      0x7a,0x1       		Tx_1_Queue_Full = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005162   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005164   0102     MOVLB     0x2            	if(Tx_2_Queue_Empty)                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005166   5187     MOVF      0x87,0x0,0x1                                                                                    
005168   e002     BZ        0x516e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// more data is sent.                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00516a   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00516c   d012     BRA       0x5192         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00516e   5188     MOVF      0x88,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005170   6aea     CLRF      0xea,0x0                                                                                        
005172   0f60     ADDLW     0x60                                                                                            
005174   6ee9     MOVWF     0xe9,0x0                                                                                        
005176   0e01     MOVLW     0x1                                                                                             
005178   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00517a   50ef     MOVF      0xef,0x0,0x0                                                                                    
00517c   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// decrement the queue byte count                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00517e   078a     DECF      0x8a,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// increment the read pointer                                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005180   2b88     INCF      0x88,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005182   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005184   1788     ANDWF     0x88,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005186   5189     MOVF      0x89,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005188   5d88     SUBWF     0x88,0x0,0x1                                                                                    
00518a   e102     BNZ       0x5190                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00518c   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00518e   6f87     MOVWF     0x87,0x1                                                                                        
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005190   6b86     CLRF      0x86,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005192   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005194   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
005196   ffe6                                                                                                               
005198   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00519a   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00519c   0102     MOVLB     0x2            	if(stdout_serial_port == NUL)                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
00519e   5172     MOVF      0x72,0x0,0x1                                                                                    
0051a0   e101     BNZ       0x51a4                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051a2   d010     BRA       0x51c4         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051a4   0572     DECF      0x72,0x0,0x1                                                                                    
0051a6   e106     BNZ       0x51b4                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// send the data to serial port one                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051a8   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051aa   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0051ac   ffe6                                                                                                               
0051ae   df42     RCALL     0x5034                                                                                          
0051b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051b2   d008     BRA       0x51c4         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051b4   0e02     MOVLW     0x2                                                                                             
0051b6   5d72     SUBWF     0x72,0x0,0x1                                                                                    
0051b8   e105     BNZ       0x51c4                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           		// send the data to serial port two                                            C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051ba   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051bc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0051be   ffe6                                                                                                               
0051c0   df5a     RCALL     0x5076                                                                                          
0051c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051c4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\serial_ports.c
0051c6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0051c8   ffd9                                                                                                               
0051ca   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	TITLE:		terminal.c                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	DATE:		21-Feb-2006                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *				without permission. Thanks.                                                 C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	25-Nov-2005  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	21-Feb-2006  0.2  RKW - Added "no camera data" diagnostic information.         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           #include "camera.h"                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           #include "tracking.h"                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	FUNCTION:		Tracking_Info_Terminal()                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	PURPOSE:		This function is designed to send tracking information               C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *					to a terminal attached to your robot controller's                          C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *					programming port.                                                          C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	PARAMETERS:		none                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	RETURNS:		nothing                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *	COMMENTS:		This code assumes that the terminal serial port is                  C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *					properly set in camera.h                                                   C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           void Tracking_Info_Terminal(void)                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	static unsigned char i = 0;                                                     C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	static unsigned char j = 0;                                                     C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	// has a new camera tracking packet arrived since we last checked?              C:\trcCode\Repository\Summer\Oceanus\terminal.c
005484   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
005486   51de     MOVF      0xde,0x0,0x1                                                                                    
005488   0102     MOVLB     0x2                                                                                             
00548a   19b8     XORWF     0xb8,0x0,0x1                                                                                    
00548c   e104     BNZ       0x5496                                                                                          
00548e   0102     MOVLB     0x2                                                                                             
005490   51df     MOVF      0xdf,0x0,0x1                                                                                    
005492   0102     MOVLB     0x2                                                                                             
005494   19b9     XORWF     0xb9,0x0,0x1                                                                                    
005496   e101     BNZ       0x549a                                                                                          
005498   d0f8     BRA       0x568a                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		// increment the t-packet counter                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
00549a   0102     MOVLB     0x2            		i++;                                                                           C:\trcCode\Repository\Summer\Oceanus\terminal.c
00549c   2bdc     INCF      0xdc,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		// reset the "no camera data" loop counter                                     C:\trcCode\Repository\Summer\Oceanus\terminal.c
00549e   6bdd     CLRF      0xdd,0x1       		j = 0;                                                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		// only show data on every twenty t-packets                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054a0   0e14     MOVLW     0x14           		if(i >= 20)                                                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054a2   5ddc     SUBWF     0xdc,0x0,0x1                                                                                    
0054a4   e201     BC        0x54a8                                                                                          
0054a6   d0f0     BRA       0x5688                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           			// reset the local t-packet counter                                           C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054a8   6bdc     CLRF      0xdc,0x1       			i = 0;                                                                        C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           			// does the camera have a tracking solution?                                  C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054aa   ec3c     CALL      0x3c78,0x0     			if(Get_Tracking_State() == SEARCHING)                                         C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054ac   f01e                                                                                                               
0054ae   0900     IORLW     0x0                                                                                             
0054b0   e111     BNZ       0x54d4                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054b2   0e8b     MOVLW     0x8b           				printf("Searching...\r\n");                                                  C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054b4   6e00     MOVWF     0x0,0x0                                                                                         
0054b6   0e52     MOVLW     0x52                                                                                            
0054b8   6e01     MOVWF     0x1,0x0                                                                                         
0054ba   6a02     CLRF      0x2,0x0                                                                                         
0054bc   c000     MOVFF     0x0,0xfe6                                                                                       
0054be   ffe6                                                                                                               
0054c0   c001     MOVFF     0x1,0xfe6                                                                                       
0054c2   ffe6                                                                                                               
0054c4   c002     MOVFF     0x2,0xfe6                                                                                       
0054c6   ffe6                                                                                                               
0054c8   ecf3     CALL      0x5be6,0x0                                                                                      
0054ca   f02d                                                                                                               
0054cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0054ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0054d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054d2   d0da     BRA       0x5688         			else                                                                          C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054d4   0e88     MOVLW     0x88           				printf("\r\n");                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054d6   6e00     MOVWF     0x0,0x0                                                                                         
0054d8   0e52     MOVLW     0x52                                                                                            
0054da   6e01     MOVWF     0x1,0x0                                                                                         
0054dc   6a02     CLRF      0x2,0x0                                                                                         
0054de   c000     MOVFF     0x0,0xfe6                                                                                       
0054e0   ffe6                                                                                                               
0054e2   c001     MOVFF     0x1,0xfe6                                                                                       
0054e4   ffe6                                                                                                               
0054e6   c002     MOVFF     0x2,0xfe6                                                                                       
0054e8   ffe6                                                                                                               
0054ea   ecf3     CALL      0x5be6,0x0                                                                                      
0054ec   f02d                                                                                                               
0054ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0054f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0054f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           				// pan angle = ((current pan PWM) - (pan center PWM)) * degrees/pan PWM step C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054f4   0102     MOVLB     0x2            				printf(" Pan Angle (degrees) = %d\r\n", (((int)PAN_SERVO - 124) * 65)/124);  C:\trcCode\Repository\Summer\Oceanus\terminal.c
0054f6   5104     MOVF      0x4,0x0,0x1                                                                                     
0054f8   6e00     MOVWF     0x0,0x0                                                                                         
0054fa   6a01     CLRF      0x1,0x0                                                                                         
0054fc   0e7c     MOVLW     0x7c                                                                                            
0054fe   5e00     SUBWF     0x0,0x1,0x0                                                                                     
005500   0e00     MOVLW     0x0                                                                                             
005502   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
005504   0e41     MOVLW     0x41                                                                                            
005506   0201     MULWF     0x1,0x0                                                                                         
005508   cff3     MOVFF     0xff3,0x1                                                                                       
00550a   f001                                                                                                               
00550c   0200     MULWF     0x0,0x0                                                                                         
00550e   cff3     MOVFF     0xff3,0x0                                                                                       
005510   f000                                                                                                               
005512   50f4     MOVF      0xf4,0x0,0x0                                                                                    
005514   2601     ADDWF     0x1,0x1,0x0                                                                                     
005516   0e7c     MOVLW     0x7c                                                                                            
005518   6e3b     MOVWF     0x3b,0x0                                                                                        
00551a   6a3c     CLRF      0x3c,0x0                                                                                        
00551c   c000     MOVFF     0x0,0x36                                                                                        
00551e   f036                                                                                                               
005520   c001     MOVFF     0x1,0x37                                                                                        
005522   f037                                                                                                               
005524   ec3f     CALL      0x3e7e,0x0                                                                                      
005526   f01f                                                                                                               
005528   c036     MOVFF     0x36,0x0                                                                                        
00552a   f000                                                                                                               
00552c   c037     MOVFF     0x37,0x1                                                                                        
00552e   f001                                                                                                               
005530   c000     MOVFF     0x0,0xfe6                                                                                       
005532   ffe6                                                                                                               
005534   c001     MOVFF     0x1,0xfe6                                                                                       
005536   ffe6                                                                                                               
005538   0e6c     MOVLW     0x6c                                                                                            
00553a   6e02     MOVWF     0x2,0x0                                                                                         
00553c   0e52     MOVLW     0x52                                                                                            
00553e   6e03     MOVWF     0x3,0x0                                                                                         
005540   6a04     CLRF      0x4,0x0                                                                                         
005542   c002     MOVFF     0x2,0xfe6                                                                                       
005544   ffe6                                                                                                               
005546   c003     MOVFF     0x3,0xfe6                                                                                       
005548   ffe6                                                                                                               
00554a   c004     MOVFF     0x4,0xfe6                                                                                       
00554c   ffe6                                                                                                               
00554e   ecf3     CALL      0x5be6,0x0                                                                                      
005550   f02d                                                                                                               
005552   6ef5     MOVWF     0xf5,0x0                                                                                        
005554   0e05     MOVLW     0x5                                                                                             
005556   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005558   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           				// tilt angle = ((current tilt PWM) - (tilt center PWM)) * degrees/tilt PWM step C:\trcCode\Repository\Summer\Oceanus\terminal.c
00555a   0102     MOVLB     0x2            				printf("Tilt Angle (degrees) = %d\r\n", (((int)TILT_SERVO - 144) * 25)/50);  C:\trcCode\Repository\Summer\Oceanus\terminal.c
00555c   5105     MOVF      0x5,0x0,0x1                                                                                     
00555e   6e00     MOVWF     0x0,0x0                                                                                         
005560   6a01     CLRF      0x1,0x0                                                                                         
005562   0e90     MOVLW     0x90                                                                                            
005564   5e00     SUBWF     0x0,0x1,0x0                                                                                     
005566   0e00     MOVLW     0x0                                                                                             
005568   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00556a   0e19     MOVLW     0x19                                                                                            
00556c   0201     MULWF     0x1,0x0                                                                                         
00556e   cff3     MOVFF     0xff3,0x1                                                                                       
005570   f001                                                                                                               
005572   0200     MULWF     0x0,0x0                                                                                         
005574   cff3     MOVFF     0xff3,0x0                                                                                       
005576   f000                                                                                                               
005578   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00557a   2601     ADDWF     0x1,0x1,0x0                                                                                     
00557c   0e32     MOVLW     0x32                                                                                            
00557e   6e3b     MOVWF     0x3b,0x0                                                                                        
005580   6a3c     CLRF      0x3c,0x0                                                                                        
005582   c000     MOVFF     0x0,0x36                                                                                        
005584   f036                                                                                                               
005586   c001     MOVFF     0x1,0x37                                                                                        
005588   f037                                                                                                               
00558a   ec3f     CALL      0x3e7e,0x0                                                                                      
00558c   f01f                                                                                                               
00558e   c036     MOVFF     0x36,0x0                                                                                        
005590   f000                                                                                                               
005592   c037     MOVFF     0x37,0x1                                                                                        
005594   f001                                                                                                               
005596   c000     MOVFF     0x0,0xfe6                                                                                       
005598   ffe6                                                                                                               
00559a   c001     MOVFF     0x1,0xfe6                                                                                       
00559c   ffe6                                                                                                               
00559e   0e50     MOVLW     0x50                                                                                            
0055a0   6e02     MOVWF     0x2,0x0                                                                                         
0055a2   0e52     MOVLW     0x52                                                                                            
0055a4   6e03     MOVWF     0x3,0x0                                                                                         
0055a6   6a04     CLRF      0x4,0x0                                                                                         
0055a8   c002     MOVFF     0x2,0xfe6                                                                                       
0055aa   ffe6                                                                                                               
0055ac   c003     MOVFF     0x3,0xfe6                                                                                       
0055ae   ffe6                                                                                                               
0055b0   c004     MOVFF     0x4,0xfe6                                                                                       
0055b2   ffe6                                                                                                               
0055b4   ecf3     CALL      0x5be6,0x0                                                                                      
0055b6   f02d                                                                                                               
0055b8   6ef5     MOVWF     0xf5,0x0                                                                                        
0055ba   0e05     MOVLW     0x5                                                                                             
0055bc   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0055be   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
0055c0   0102     MOVLB     0x2            				printf(" Pan Error (Pixels)  = %d\r\n", (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT); C:\trcCode\Repository\Summer\Oceanus\terminal.c
0055c2   5141     MOVF      0x41,0x0,0x1                                                                                    
0055c4   6e00     MOVWF     0x0,0x0                                                                                         
0055c6   6a01     CLRF      0x1,0x0                                                                                         
0055c8   0e4f     MOVLW     0x4f                                                                                            
0055ca   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0055cc   0e00     MOVLW     0x0                                                                                             
0055ce   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0055d0   c000     MOVFF     0x0,0xfe6                                                                                       
0055d2   ffe6                                                                                                               
0055d4   c001     MOVFF     0x1,0xfe6                                                                                       
0055d6   ffe6                                                                                                               
0055d8   0e34     MOVLW     0x34                                                                                            
0055da   6e02     MOVWF     0x2,0x0                                                                                         
0055dc   0e52     MOVLW     0x52                                                                                            
0055de   6e03     MOVWF     0x3,0x0                                                                                         
0055e0   6a04     CLRF      0x4,0x0                                                                                         
0055e2   c002     MOVFF     0x2,0xfe6                                                                                       
0055e4   ffe6                                                                                                               
0055e6   c003     MOVFF     0x3,0xfe6                                                                                       
0055e8   ffe6                                                                                                               
0055ea   c004     MOVFF     0x4,0xfe6                                                                                       
0055ec   ffe6                                                                                                               
0055ee   ecf3     CALL      0x5be6,0x0                                                                                      
0055f0   f02d                                                                                                               
0055f2   6ef5     MOVWF     0xf5,0x0                                                                                        
0055f4   0e05     MOVLW     0x5                                                                                             
0055f6   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0055f8   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0055fa   0102     MOVLB     0x2            				printf("Tilt Error (Pixels)  = %d\r\n", (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT); C:\trcCode\Repository\Summer\Oceanus\terminal.c
0055fc   5142     MOVF      0x42,0x0,0x1                                                                                    
0055fe   6e00     MOVWF     0x0,0x0                                                                                         
005600   6a01     CLRF      0x1,0x0                                                                                         
005602   0e77     MOVLW     0x77                                                                                            
005604   5e00     SUBWF     0x0,0x1,0x0                                                                                     
005606   0e00     MOVLW     0x0                                                                                             
005608   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00560a   c000     MOVFF     0x0,0xfe6                                                                                       
00560c   ffe6                                                                                                               
00560e   c001     MOVFF     0x1,0xfe6                                                                                       
005610   ffe6                                                                                                               
005612   0e18     MOVLW     0x18                                                                                            
005614   6e02     MOVWF     0x2,0x0                                                                                         
005616   0e52     MOVLW     0x52                                                                                            
005618   6e03     MOVWF     0x3,0x0                                                                                         
00561a   6a04     CLRF      0x4,0x0                                                                                         
00561c   c002     MOVFF     0x2,0xfe6                                                                                       
00561e   ffe6                                                                                                               
005620   c003     MOVFF     0x3,0xfe6                                                                                       
005622   ffe6                                                                                                               
005624   c004     MOVFF     0x4,0xfe6                                                                                       
005626   ffe6                                                                                                               
005628   ecf3     CALL      0x5be6,0x0                                                                                      
00562a   f02d                                                                                                               
00562c   6ef5     MOVWF     0xf5,0x0                                                                                        
00562e   0e05     MOVLW     0x5                                                                                             
005630   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005632   50f5     MOVF      0xf5,0x0,0x0                                                                                    
005634   0102     MOVLB     0x2            				printf(" Blob Size (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.pixels); C:\trcCode\Repository\Summer\Oceanus\terminal.c
005636   5147     MOVF      0x47,0x0,0x1                                                                                    
005638   6ee6     MOVWF     0xe6,0x0                                                                                        
00563a   6ae6     CLRF      0xe6,0x0                                                                                        
00563c   0efc     MOVLW     0xfc                                                                                            
00563e   6e00     MOVWF     0x0,0x0                                                                                         
005640   0e51     MOVLW     0x51                                                                                            
005642   6e01     MOVWF     0x1,0x0                                                                                         
005644   6a02     CLRF      0x2,0x0                                                                                         
005646   c000     MOVFF     0x0,0xfe6                                                                                       
005648   ffe6                                                                                                               
00564a   c001     MOVFF     0x1,0xfe6                                                                                       
00564c   ffe6                                                                                                               
00564e   c002     MOVFF     0x2,0xfe6                                                                                       
005650   ffe6                                                                                                               
005652   ecf3     CALL      0x5be6,0x0                                                                                      
005654   f02d                                                                                                               
005656   6ef5     MOVWF     0xf5,0x0                                                                                        
005658   0e05     MOVLW     0x5                                                                                             
00565a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00565c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00565e   0102     MOVLB     0x2            				printf("Confidence (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.confidence); C:\trcCode\Repository\Summer\Oceanus\terminal.c
005660   5148     MOVF      0x48,0x0,0x1                                                                                    
005662   6ee6     MOVWF     0xe6,0x0                                                                                        
005664   6ae6     CLRF      0xe6,0x0                                                                                        
005666   0ee0     MOVLW     0xe0                                                                                            
005668   6e00     MOVWF     0x0,0x0                                                                                         
00566a   0e51     MOVLW     0x51                                                                                            
00566c   6e01     MOVWF     0x1,0x0                                                                                         
00566e   6a02     CLRF      0x2,0x0                                                                                         
005670   c000     MOVFF     0x0,0xfe6                                                                                       
005672   ffe6                                                                                                               
005674   c001     MOVFF     0x1,0xfe6                                                                                       
005676   ffe6                                                                                                               
005678   c002     MOVFF     0x2,0xfe6                                                                                       
00567a   ffe6                                                                                                               
00567c   ecf3     CALL      0x5be6,0x0                                                                                      
00567e   f02d                                                                                                               
005680   6ef5     MOVWF     0xf5,0x0                                                                                        
005682   0e05     MOVLW     0x5                                                                                             
005684   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005686   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\terminal.c
005688   d016     BRA       0x56b6         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\terminal.c
00568a   0102     MOVLB     0x2            		j++;                                                                           C:\trcCode\Repository\Summer\Oceanus\terminal.c
00568c   2bdd     INCF      0xdd,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		// display a "no camera data" warning if we haven't received                   C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           		// a t-packet in 26 loops, which is about 1 second                             C:\trcCode\Repository\Summer\Oceanus\terminal.c
00568e   0e1a     MOVLW     0x1a           		if(j >= 26)                                                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
005690   5ddd     SUBWF     0xdd,0x0,0x1                                                                                    
005692   e311     BNC       0x56b6                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           			// reset the "no camera data" loop counter                                    C:\trcCode\Repository\Summer\Oceanus\terminal.c
005694   6bdd     CLRF      0xdd,0x1       			j = 0;                                                                        C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
005696   0ecc     MOVLW     0xcc           			printf("No camera data...\r\n");                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
005698   6e00     MOVWF     0x0,0x0                                                                                         
00569a   0e51     MOVLW     0x51                                                                                            
00569c   6e01     MOVWF     0x1,0x0                                                                                         
00569e   6a02     CLRF      0x2,0x0                                                                                         
0056a0   c000     MOVFF     0x0,0xfe6                                                                                       
0056a2   ffe6                                                                                                               
0056a4   c001     MOVFF     0x1,0xfe6                                                                                       
0056a6   ffe6                                                                                                               
0056a8   c002     MOVFF     0x2,0xfe6                                                                                       
0056aa   ffe6                                                                                                               
0056ac   ecf3     CALL      0x5be6,0x0                                                                                      
0056ae   f02d                                                                                                               
0056b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0056b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0056b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\terminal.c
0056b6   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\terminal.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	TITLE:		tracking.c                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	DATE:		21-Feb-2006                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	COMMENTS:	This is the "streamlined" version of tracking.c                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				You are free to use this source code for any non-commercial                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				use. Please do not make copies of this source code, modified                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				without permission. Thanks.                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           ******************************************************************************** C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	CHANGE LOG:                                                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	21-Feb-2006  0.2  RKW - Provided two new functions to set the pan and          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  tilt servo position. This was done to provide a level        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  of indirection so that the servos could be commanded         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  from the robot controller or the CMUcam2.                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  RKW - Fixed bug in search initialization code where          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  temp_pan_servo was initialized to zero instead of            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  Tracking_Config_Data.Pan_Min_PWM.                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  RKW - Altered tracking algorithm to use the t-packet         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  confidence value to determine whether the code should        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  track or search.                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  RKW - Added Get_Tracking_State() function, which can         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	                  be used to determine if the camera is on target.             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           #include "camera.h"                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           #include "tracking.h"                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           // This variable is used to signal whether or not the camera                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           // is pointed at the target. See Get_Tracking_State(), below.                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           unsigned char Tracking_State = STATE_SEARCHING;                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	FUNCTION:		Servo_Track()                                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PURPOSE:		This function reads data placed in the T_Packet_Data                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					structure by the Camera_Handler() function and if new                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					tracking data is available, attempts to keep the center                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					of the tracked object in the center of the camera's                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					image using two servos that drive a pan/tilt platform.                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					If the camera doesn't have the object within it's field                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					of view, this function will execute a search algorithm                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					in an attempt to find the object.		                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	COMMENTS:		This version of the tracking code uses a proportional               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					feedback controller to track the object.                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\tracking.c
003818   cfd9     MOVFF     0xfd9,0xfe6    void Servo_Track(void)                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
00381a   ffe6                                                                                                               
00381c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00381e   ffd9                                                                                                               
003820   0e0a     MOVLW     0xa                                                                                             
003822   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned char Tracking_Initialized = 0;                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned char new_search = 1;                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned char loop_count = 0;                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned char pan_servo_position;                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	static unsigned char tilt_servo_position;                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	int temp_pan_servo;                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	int temp_tilt_servo;                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	int servo_step;                                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	int pan_error;                                                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	int tilt_error;                                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	// if needed, initialize the tracking code                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003824   0102     MOVLB     0x2            	if(Tracking_Initialized == 0)                                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003826   51d3     MOVF      0xd3,0x0,0x1                                                                                    
003828   e10f     BNZ       0x3848                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
00382a   0e01     MOVLW     0x1            		Tracking_Initialized = 1;                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
00382c   6fd3     MOVWF     0xd3,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// get center values for the servos                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
00382e   0101     MOVLB     0x1            		pan_servo_position = PAN_CENTER_PWM_DEFAULT;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003830   0e7c     MOVLW     0x7c                                                                                            
003832   6ffd     MOVWF     0xfd,0x1                                                                                        
003834   0e90     MOVLW     0x90           		tilt_servo_position = TILT_CENTER_PWM_DEFAULT;                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003836   6ffe     MOVWF     0xfe,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// command servos to center position                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003838   c1fd     MOVFF     0x1fd,0xfe6    		Set_Pan_Servo_Position(pan_servo_position);                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
00383a   ffe6                                                                                                               
00383c   da39     RCALL     0x3cb0                                                                                          
00383e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003840   c1fe     MOVFF     0x1fe,0xfe6    		Set_Tilt_Servo_Position(tilt_servo_position);                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
003842   ffe6                                                                                                               
003844   da40     RCALL     0x3cc6                                                                                          
003846   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	// Has a new camera t-packet arrived since we last checked?                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
003848   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
00384a   51d4     MOVF      0xd4,0x0,0x1                                                                                    
00384c   0102     MOVLB     0x2                                                                                             
00384e   19b8     XORWF     0xb8,0x0,0x1                                                                                    
003850   e104     BNZ       0x385a                                                                                          
003852   0102     MOVLB     0x2                                                                                             
003854   51d5     MOVF      0xd5,0x0,0x1                                                                                    
003856   0102     MOVLB     0x2                                                                                             
003858   19b9     XORWF     0xb9,0x0,0x1                                                                                    
00385a   e101     BNZ       0x385e                                                                                          
00385c   d207     BRA       0x3c6c                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
00385e   c2b8     MOVFF     0x2b8,0x2d4    		old_camera_t_packets = camera_t_packets;                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
003860   f2d4                                                                                                               
003862   c2b9     MOVFF     0x2b9,0x2d5                                                                                     
003864   f2d5                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// Reset the Tracking_State variable to indicate that                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// we're in the searching state. If it turns out the                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// target is in view, Tracking_State will be updated                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// to reflect this below.                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003866   0102     MOVLB     0x2            		Tracking_State = SEARCHING;                                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003868   6bd2     CLRF      0xd2,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// Does the camera have a tracking solution? If so,                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// do we need to move the servos to keep the center                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// of the tracked object centered within the image?                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// If not, we need to drop down below to start or                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		// continue a search.                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
00386a   0e14     MOVLW     0x14           		if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT)                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
00386c   0102     MOVLB     0x2                                                                                             
00386e   5d48     SUBWF     0x48,0x0,0x1                                                                                    
003870   e201     BC        0x3874                                                                                          
003872   d176     BRA       0x3b60                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// if we're tracking, reset the search                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// algorithm so that a new search pattern                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// will start should we lose tracking lock                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003874   0102     MOVLB     0x2            			new_search = 1;                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003876   0e01     MOVLW     0x1                                                                                             
003878   6fd6     MOVWF     0xd6,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// update Tracking_State to indicate that the target                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// is at least in view of the camera                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
00387a   6fd2     MOVWF     0xd2,0x1       			Tracking_State = TARGET_IN_VIEW;                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			////////////////////////////////                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//                            //                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//	x-axis/pan tracking code  //                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//                            //                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			////////////////////////////////                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// save the current pan servo PWM value into a local                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// the pan servo PWM value with a new value                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
00387c   0101     MOVLB     0x1            			temp_pan_servo = (int)pan_servo_position;                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
00387e   51fd     MOVF      0xfd,0x0,0x1                                                                                    
003880   6ede     MOVWF     0xde,0x0                                                                                        
003882   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// vertical center line.                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003884   0102     MOVLB     0x2            			pan_error = (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT;                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003886   5141     MOVF      0x41,0x0,0x1                                                                                    
003888   6e00     MOVWF     0x0,0x0                                                                                         
00388a   6a01     CLRF      0x1,0x0                                                                                         
00388c   0e4f     MOVLW     0x4f                                                                                            
00388e   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003890   0e00     MOVLW     0x0                                                                                             
003892   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003894   0e06     MOVLW     0x6                                                                                             
003896   c000     MOVFF     0x0,0xfdb                                                                                       
003898   ffdb                                                                                                               
00389a   0e07     MOVLW     0x7                                                                                             
00389c   c001     MOVFF     0x1,0xfdb                                                                                       
00389e   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// Are we too far to the left or right of the vertical                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// center line? If so, calculate how far we should step                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// the pan servo to reduce the error.                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038a0   0e06     MOVLW     0x6            			if(pan_error > PAN_ALLOWABLE_ERROR_DEFAULT)                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038a2   cfdb     MOVFF     0xfdb,0x0                                                                                       
0038a4   f000                                                                                                               
0038a6   0e07     MOVLW     0x7                                                                                             
0038a8   cfdb     MOVFF     0xfdb,0x1                                                                                       
0038aa   f001                                                                                                               
0038ac   3401     RLCF      0x1,0x0,0x0                                                                                     
0038ae   e204     BC        0x38b8                                                                                          
0038b0   5000     MOVF      0x0,0x0,0x0                                                                                     
0038b2   0806     SUBLW     0x6                                                                                             
0038b4   0e00     MOVLW     0x0                                                                                             
0038b6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0038b8   e225     BC        0x3904                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038ba   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038bc   6e00     MOVWF     0x0,0x0                                                                                         
0038be   6a01     CLRF      0x1,0x0                                                                                         
0038c0   0e06     MOVLW     0x6                                                                                             
0038c2   cfdb     MOVFF     0xfdb,0x36                                                                                      
0038c4   f036                                                                                                               
0038c6   0e07     MOVLW     0x7                                                                                             
0038c8   cfdb     MOVFF     0xfdb,0x37                                                                                      
0038ca   f037                                                                                                               
0038cc   c000     MOVFF     0x0,0x3b                                                                                        
0038ce   f03b                                                                                                               
0038d0   c001     MOVFF     0x1,0x3c                                                                                        
0038d2   f03c                                                                                                               
0038d4   ec3f     CALL      0x3e7e,0x0                                                                                      
0038d6   f01f                                                                                                               
0038d8   0e04     MOVLW     0x4                                                                                             
0038da   c036     MOVFF     0x36,0xfdb                                                                                      
0038dc   ffdb                                                                                                               
0038de   0e05     MOVLW     0x5                                                                                             
0038e0   c037     MOVFF     0x37,0xfdb                                                                                      
0038e2   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038e4   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038e6   0f04     ADDLW     0x4                                                                                             
0038e8   6ee9     MOVWF     0xe9,0x0                                                                                        
0038ea   cfda     MOVFF     0xfda,0xfea                                                                                     
0038ec   ffea                                                                                                               
0038ee   50ee     MOVF      0xee,0x0,0x0                                                                                    
0038f0   10ed     IORWF     0xed,0x0,0x0                                                                                    
0038f2   e107     BNZ       0x3902                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038f4   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
0038f6   6ef3     MOVWF     0xf3,0x0                                                                                        
0038f8   0e04     MOVLW     0x4                                                                                             
0038fa   cff3     MOVFF     0xff3,0xfdb                                                                                     
0038fc   ffdb                                                                                                               
0038fe   0e05     MOVLW     0x5                                                                                             
003900   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003902   d037     BRA       0x3972         			else if(pan_error < -1 * PAN_ALLOWABLE_ERROR_DEFAULT)                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
003904   0e06     MOVLW     0x6                                                                                             
003906   cfdb     MOVFF     0xfdb,0x0                                                                                       
003908   f000                                                                                                               
00390a   0e07     MOVLW     0x7                                                                                             
00390c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00390e   f001                                                                                                               
003910   80d8     BSF       0xd8,0x0,0x0                                                                                    
003912   5001     MOVF      0x1,0x0,0x0                                                                                     
003914   e704     BNN       0x391e                                                                                          
003916   0efa     MOVLW     0xfa                                                                                            
003918   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00391a   0eff     MOVLW     0xff                                                                                            
00391c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00391e   e222     BC        0x3964                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003920   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003922   6e00     MOVWF     0x0,0x0                                                                                         
003924   6a01     CLRF      0x1,0x0                                                                                         
003926   0e06     MOVLW     0x6                                                                                             
003928   cfdb     MOVFF     0xfdb,0x36                                                                                      
00392a   f036                                                                                                               
00392c   0e07     MOVLW     0x7                                                                                             
00392e   cfdb     MOVFF     0xfdb,0x37                                                                                      
003930   f037                                                                                                               
003932   c000     MOVFF     0x0,0x3b                                                                                        
003934   f03b                                                                                                               
003936   c001     MOVFF     0x1,0x3c                                                                                        
003938   f03c                                                                                                               
00393a   ec3f     CALL      0x3e7e,0x0                                                                                      
00393c   f01f                                                                                                               
00393e   0e04     MOVLW     0x4                                                                                             
003940   c036     MOVFF     0x36,0xfdb                                                                                      
003942   ffdb                                                                                                               
003944   0e05     MOVLW     0x5                                                                                             
003946   c037     MOVFF     0x37,0xfdb                                                                                      
003948   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// we just test for the zero case and set the step size to one               C:\trcCode\Repository\Summer\Oceanus\tracking.c
00394a   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
00394c   0f04     ADDLW     0x4                                                                                             
00394e   6ee9     MOVWF     0xe9,0x0                                                                                        
003950   cfda     MOVFF     0xfda,0xfea                                                                                     
003952   ffea                                                                                                               
003954   50ee     MOVF      0xee,0x0,0x0                                                                                    
003956   10ed     IORWF     0xed,0x0,0x0                                                                                    
003958   e104     BNZ       0x3962                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
00395a   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
00395c   68db     SETF      0xdb,0x0                                                                                        
00395e   0e05     MOVLW     0x5                                                                                             
003960   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003962   d007     BRA       0x3972         			else                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// neither too far to the left or too far to the right                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// of the vertical center line of the image and don't                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// need to move the servo                                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003964   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003966   6adb     CLRF      0xdb,0x0                                                                                        
003968   0e05     MOVLW     0x5                                                                                             
00396a   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// signal that the pan servo is on target                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
00396c   0e02     MOVLW     0x2            				Tracking_State += STATE_PAN_ON_TARGET;                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
00396e   0102     MOVLB     0x2                                                                                             
003970   27d2     ADDWF     0xd2,0x1,0x1                                                                                    
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
003972   6836     SETF      0x36,0x0       			temp_pan_servo += (PAN_ROTATION_SIGN_DEFAULT * servo_step);                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003974   6837     SETF      0x37,0x0                                                                                        
003976   0e04     MOVLW     0x4                                                                                             
003978   cfdb     MOVFF     0xfdb,0x3b                                                                                      
00397a   f03b                                                                                                               
00397c   0e05     MOVLW     0x5                                                                                             
00397e   cfdb     MOVFF     0xfdb,0x3c                                                                                      
003980   f03c                                                                                                               
003982   ec99     CALL      0x3f32,0x0                                                                                      
003984   f01f                                                                                                               
003986   c034     MOVFF     0x34,0x0                                                                                        
003988   f000                                                                                                               
00398a   c035     MOVFF     0x35,0x1                                                                                        
00398c   f001                                                                                                               
00398e   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
003990   ffe9                                                                                                               
003992   cfda     MOVFF     0xfda,0xfea                                                                                     
003994   ffea                                                                                                               
003996   5000     MOVF      0x0,0x0,0x0                                                                                     
003998   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00399a   5001     MOVF      0x1,0x0,0x0                                                                                     
00399c   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// check the pan servo PWM value for under/overflow                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
00399e   cfde     MOVFF     0xfde,0x0      			if(temp_pan_servo < PAN_MIN_PWM_DEFAULT)                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039a0   f000                                                                                                               
0039a2   cfdd     MOVFF     0xfdd,0x1                                                                                       
0039a4   f001                                                                                                               
0039a6   0100     MOVLB     0x0                                                                                             
0039a8   0e80     MOVLW     0x80                                                                                            
0039aa   1401     ANDWF     0x1,0x0,0x0                                                                                     
0039ac   e003     BZ        0x39b4                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039ae   6ade     CLRF      0xde,0x0       				temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039b0   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039b2   d00e     BRA       0x39d0         			else if(temp_pan_servo > PAN_MAX_PWM_DEFAULT)                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039b4   cfde     MOVFF     0xfde,0x0                                                                                       
0039b6   f000                                                                                                               
0039b8   cfdd     MOVFF     0xfdd,0x1                                                                                       
0039ba   f001                                                                                                               
0039bc   3401     RLCF      0x1,0x0,0x0                                                                                     
0039be   e204     BC        0x39c8                                                                                          
0039c0   5000     MOVF      0x0,0x0,0x0                                                                                     
0039c2   08f8     SUBLW     0xf8                                                                                            
0039c4   0e00     MOVLW     0x0                                                                                             
0039c6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0039c8   e203     BC        0x39d0                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039ca   0ef8     MOVLW     0xf8           				temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039cc   6ede     MOVWF     0xde,0x0                                                                                        
0039ce   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039d0   cfdf     MOVFF     0xfdf,0x1fd    			pan_servo_position = (unsigned char)temp_pan_servo;                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039d2   f1fd                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// update pan servo PWM value                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039d4   c1fd     MOVFF     0x1fd,0xfe6    			Set_Pan_Servo_Position(pan_servo_position);                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039d6   ffe6                                                                                                               
0039d8   d96b     RCALL     0x3cb0                                                                                          
0039da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			/////////////////////////////////                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//                             //                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//	y-axis/tilt tracking code  //                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//                             //                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			/////////////////////////////////                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// save the current tilt servo PWM value into a local                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// the tilt servo PWM value with a new value                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039dc   0101     MOVLB     0x1            			temp_tilt_servo = (int)tilt_servo_position;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039de   51fe     MOVF      0xfe,0x0,0x1                                                                                    
0039e0   6ee6     MOVWF     0xe6,0x0                                                                                        
0039e2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0039e4   0f02     ADDLW     0x2                                                                                             
0039e6   6ee9     MOVWF     0xe9,0x0                                                                                        
0039e8   cfda     MOVFF     0xfda,0xfea                                                                                     
0039ea   ffea                                                                                                               
0039ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0039ee   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0039f0   6eee     MOVWF     0xee,0x0                                                                                        
0039f2   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// horizontal center line.                                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039f4   0102     MOVLB     0x2            			tilt_error = (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT;               C:\trcCode\Repository\Summer\Oceanus\tracking.c
0039f6   5142     MOVF      0x42,0x0,0x1                                                                                    
0039f8   6e00     MOVWF     0x0,0x0                                                                                         
0039fa   6a01     CLRF      0x1,0x0                                                                                         
0039fc   0e77     MOVLW     0x77                                                                                            
0039fe   5e00     SUBWF     0x0,0x1,0x0                                                                                     
003a00   0e00     MOVLW     0x0                                                                                             
003a02   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003a04   0e08     MOVLW     0x8                                                                                             
003a06   c000     MOVFF     0x0,0xfdb                                                                                       
003a08   ffdb                                                                                                               
003a0a   0e09     MOVLW     0x9                                                                                             
003a0c   c001     MOVFF     0x1,0xfdb                                                                                       
003a0e   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// Are we too far above or below the horizontal center line?                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// If so, calculate how far we should step the tilt servo to                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// reduce the error.                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a10   0e08     MOVLW     0x8            			if(tilt_error > TILT_ALLOWABLE_ERROR_DEFAULT)                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a12   cfdb     MOVFF     0xfdb,0x0                                                                                       
003a14   f000                                                                                                               
003a16   0e09     MOVLW     0x9                                                                                             
003a18   cfdb     MOVFF     0xfdb,0x1                                                                                       
003a1a   f001                                                                                                               
003a1c   3401     RLCF      0x1,0x0,0x0                                                                                     
003a1e   e204     BC        0x3a28                                                                                          
003a20   5000     MOVF      0x0,0x0,0x0                                                                                     
003a22   0806     SUBLW     0x6                                                                                             
003a24   0e00     MOVLW     0x0                                                                                             
003a26   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003a28   e224     BC        0x3a72                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a2a   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a2c   6e00     MOVWF     0x0,0x0                                                                                         
003a2e   6a01     CLRF      0x1,0x0                                                                                         
003a30   cfdb     MOVFF     0xfdb,0x36                                                                                      
003a32   f036                                                                                                               
003a34   0e09     MOVLW     0x9                                                                                             
003a36   cfdb     MOVFF     0xfdb,0x37                                                                                      
003a38   f037                                                                                                               
003a3a   c000     MOVFF     0x0,0x3b                                                                                        
003a3c   f03b                                                                                                               
003a3e   c001     MOVFF     0x1,0x3c                                                                                        
003a40   f03c                                                                                                               
003a42   ec3f     CALL      0x3e7e,0x0                                                                                      
003a44   f01f                                                                                                               
003a46   0e04     MOVLW     0x4                                                                                             
003a48   c036     MOVFF     0x36,0xfdb                                                                                      
003a4a   ffdb                                                                                                               
003a4c   0e05     MOVLW     0x5                                                                                             
003a4e   c037     MOVFF     0x37,0xfdb                                                                                      
003a50   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a52   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a54   0f04     ADDLW     0x4                                                                                             
003a56   6ee9     MOVWF     0xe9,0x0                                                                                        
003a58   cfda     MOVFF     0xfda,0xfea                                                                                     
003a5a   ffea                                                                                                               
003a5c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003a5e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003a60   e107     BNZ       0x3a70                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a62   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a64   6ef3     MOVWF     0xf3,0x0                                                                                        
003a66   0e04     MOVLW     0x4                                                                                             
003a68   cff3     MOVFF     0xff3,0xfdb                                                                                     
003a6a   ffdb                                                                                                               
003a6c   0e05     MOVLW     0x5                                                                                             
003a6e   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a70   d036     BRA       0x3ade         			else if (tilt_error < -1 * TILT_ALLOWABLE_ERROR_DEFAULT)                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a72   0e08     MOVLW     0x8                                                                                             
003a74   cfdb     MOVFF     0xfdb,0x0                                                                                       
003a76   f000                                                                                                               
003a78   0e09     MOVLW     0x9                                                                                             
003a7a   cfdb     MOVFF     0xfdb,0x1                                                                                       
003a7c   f001                                                                                                               
003a7e   80d8     BSF       0xd8,0x0,0x0                                                                                    
003a80   5001     MOVF      0x1,0x0,0x0                                                                                     
003a82   e704     BNN       0x3a8c                                                                                          
003a84   0efa     MOVLW     0xfa                                                                                            
003a86   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003a88   0eff     MOVLW     0xff                                                                                            
003a8a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003a8c   e221     BC        0x3ad0                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a8e   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003a90   6e00     MOVWF     0x0,0x0                                                                                         
003a92   6a01     CLRF      0x1,0x0                                                                                         
003a94   cfdb     MOVFF     0xfdb,0x36                                                                                      
003a96   f036                                                                                                               
003a98   0e09     MOVLW     0x9                                                                                             
003a9a   cfdb     MOVFF     0xfdb,0x37                                                                                      
003a9c   f037                                                                                                               
003a9e   c000     MOVFF     0x0,0x3b                                                                                        
003aa0   f03b                                                                                                               
003aa2   c001     MOVFF     0x1,0x3c                                                                                        
003aa4   f03c                                                                                                               
003aa6   ec3f     CALL      0x3e7e,0x0                                                                                      
003aa8   f01f                                                                                                               
003aaa   0e04     MOVLW     0x4                                                                                             
003aac   c036     MOVFF     0x36,0xfdb                                                                                      
003aae   ffdb                                                                                                               
003ab0   0e05     MOVLW     0x5                                                                                             
003ab2   c037     MOVFF     0x37,0xfdb                                                                                      
003ab4   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ab6   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ab8   0f04     ADDLW     0x4                                                                                             
003aba   6ee9     MOVWF     0xe9,0x0                                                                                        
003abc   cfda     MOVFF     0xfda,0xfea                                                                                     
003abe   ffea                                                                                                               
003ac0   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ac2   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ac4   e104     BNZ       0x3ace                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ac6   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ac8   68db     SETF      0xdb,0x0                                                                                        
003aca   0e05     MOVLW     0x5                                                                                             
003acc   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ace   d007     BRA       0x3ade         			else                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// neither too far below or to far above the horizontal                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// center line of the image and don't need to move the                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// servo                                                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ad0   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ad2   6adb     CLRF      0xdb,0x0                                                                                        
003ad4   0e05     MOVLW     0x5                                                                                             
003ad6   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// signal that the tilt servo is on target                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ad8   0e04     MOVLW     0x4            				Tracking_State += STATE_TILT_ON_TARGET;                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ada   0102     MOVLB     0x2                                                                                             
003adc   27d2     ADDWF     0xd2,0x1,0x1                                                                                    
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ade   0e04     MOVLW     0x4            			temp_tilt_servo += (TILT_ROTATION_SIGN_DEFAULT * servo_step);                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ae0   cfdb     MOVFF     0xfdb,0x0                                                                                       
003ae2   f000                                                                                                               
003ae4   0e05     MOVLW     0x5                                                                                             
003ae6   cfdb     MOVFF     0xfdb,0x1                                                                                       
003ae8   f001                                                                                                               
003aea   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003aec   0f02     ADDLW     0x2                                                                                             
003aee   6ee9     MOVWF     0xe9,0x0                                                                                        
003af0   cfda     MOVFF     0xfda,0xfea                                                                                     
003af2   ffea                                                                                                               
003af4   5000     MOVF      0x0,0x0,0x0                                                                                     
003af6   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003af8   5001     MOVF      0x1,0x0,0x0                                                                                     
003afa   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// check the tilt PWM value for under/overflow                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003afc   0e02     MOVLW     0x2            			if(temp_tilt_servo < TILT_MIN_PWM_DEFAULT)                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003afe   cfdb     MOVFF     0xfdb,0x0                                                                                       
003b00   f000                                                                                                               
003b02   0e03     MOVLW     0x3                                                                                             
003b04   cfdb     MOVFF     0xfdb,0x1                                                                                       
003b06   f001                                                                                                               
003b08   90d8     BCF       0xd8,0x0,0x0                                                                                    
003b0a   5001     MOVF      0x1,0x0,0x0                                                                                     
003b0c   e604     BN        0x3b16                                                                                          
003b0e   0e5e     MOVLW     0x5e                                                                                            
003b10   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003b12   0e00     MOVLW     0x0                                                                                             
003b14   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003b16   e208     BC        0x3b28                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b18   0e5e     MOVLW     0x5e           				temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b1a   6ef3     MOVWF     0xf3,0x0                                                                                        
003b1c   0e02     MOVLW     0x2                                                                                             
003b1e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b20   ffdb                                                                                                               
003b22   0e03     MOVLW     0x3                                                                                             
003b24   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b26   d014     BRA       0x3b50         			else if(temp_tilt_servo > TILT_MAX_PWM_DEFAULT)                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b28   0e02     MOVLW     0x2                                                                                             
003b2a   cfdb     MOVFF     0xfdb,0x0                                                                                       
003b2c   f000                                                                                                               
003b2e   0e03     MOVLW     0x3                                                                                             
003b30   cfdb     MOVFF     0xfdb,0x1                                                                                       
003b32   f001                                                                                                               
003b34   3401     RLCF      0x1,0x0,0x0                                                                                     
003b36   e204     BC        0x3b40                                                                                          
003b38   5000     MOVF      0x0,0x0,0x0                                                                                     
003b3a   08c2     SUBLW     0xc2                                                                                            
003b3c   0e00     MOVLW     0x0                                                                                             
003b3e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003b40   e207     BC        0x3b50                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b42   0ec2     MOVLW     0xc2           				temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b44   6ef3     MOVWF     0xf3,0x0                                                                                        
003b46   0e02     MOVLW     0x2                                                                                             
003b48   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b4a   ffdb                                                                                                               
003b4c   0e03     MOVLW     0x3                                                                                             
003b4e   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b50   0e02     MOVLW     0x2            			tilt_servo_position = (unsigned char)temp_tilt_servo;                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b52   cfdb     MOVFF     0xfdb,0x1fe                                                                                     
003b54   f1fe                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// update tilt servo PWM value                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b56   c1fe     MOVFF     0x1fe,0xfe6    			Set_Tilt_Servo_Position(tilt_servo_position);                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b58   ffe6                                                                                                               
003b5a   d8b5     RCALL     0x3cc6                                                                                          
003b5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b5e   d086     BRA       0x3c6c         		else // matching else to if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT) above C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			///////////////////                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//               //                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//  search code  //                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			//               //                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			///////////////////                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// To provide a delay for the camera to lock onto the                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// target between position changes, we only step the camera                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// to a new position every SEARCH_DELAY times while we're                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// in search mode. SEARCH_DELAY_DEFAULT is #define'd in                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           			// tracking.h                                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b60   0102     MOVLB     0x2            			loop_count++;                                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b62   2bd7     INCF      0xd7,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b64   51d7     MOVF      0xd7,0x0,0x1   			if(loop_count > SEARCH_DELAY_DEFAULT)                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b66   0806     SUBLW     0x6                                                                                             
003b68   e301     BNC       0x3b6c                                                                                          
003b6a   d080     BRA       0x3c6c                                                                                          
                                           			{                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// reset the loop counter                                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b6c   6bd7     CLRF      0xd7,0x1       				loop_count = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// If we're starting a new search, initialize the pan                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// and tilt servos to the search starting point.                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// Otherwise, just continue the search pattern from                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// where we left off. The variable new_search is reset                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// to one each time the tracking code (above) executes.                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b6e   05d6     DECF      0xd6,0x0,0x1   				if(new_search == 1)                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b70   e10b     BNZ       0x3b88                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b72   6bd6     CLRF      0xd6,0x1       					new_search = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b74   6ade     CLRF      0xde,0x0       					temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b76   6add     CLRF      0xdd,0x0                                                                                        
003b78   0e90     MOVLW     0x90           					temp_tilt_servo = TILT_CENTER_PWM_DEFAULT;                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b7a   6ef3     MOVWF     0xf3,0x0                                                                                        
003b7c   0e02     MOVLW     0x2                                                                                             
003b7e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b80   ffdb                                                                                                               
003b82   0e03     MOVLW     0x3                                                                                             
003b84   6adb     CLRF      0xdb,0x0                                                                                        
                                           										                                                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b86   d065     BRA       0x3c52         				else                                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					// calculate new servo position(s) based upon our                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					// current servo position(s)                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b88   0101     MOVLB     0x1            					temp_pan_servo = (int)pan_servo_position;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b8a   51fd     MOVF      0xfd,0x0,0x1                                                                                    
003b8c   6ede     MOVWF     0xde,0x0                                                                                        
003b8e   6add     CLRF      0xdd,0x0                                                                                        
003b90   51fe     MOVF      0xfe,0x0,0x1   					temp_tilt_servo = (int)tilt_servo_position;                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003b92   6ee6     MOVWF     0xe6,0x0                                                                                        
003b94   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003b96   0f02     ADDLW     0x2                                                                                             
003b98   6ee9     MOVWF     0xe9,0x0                                                                                        
003b9a   cfda     MOVFF     0xfda,0xfea                                                                                     
003b9c   ffea                                                                                                               
003b9e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003ba0   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003ba2   6eee     MOVWF     0xee,0x0                                                                                        
003ba4   6aed     CLRF      0xed,0x0                                                                                        
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					// if the pan servo is at the end of its travel,                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					// send it back to the start and step the tilt                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					// servo to its next position                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ba6   cfde     MOVFF     0xfde,0x0      					if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ba8   f000                                                                                                               
003baa   cfdd     MOVFF     0xfdd,0x1                                                                                       
003bac   f001                                                                                                               
003bae   90d8     BCF       0xd8,0x0,0x0                                                                                    
003bb0   5001     MOVF      0x1,0x0,0x0                                                                                     
003bb2   e604     BN        0x3bbc                                                                                          
003bb4   0ef8     MOVLW     0xf8                                                                                            
003bb6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003bb8   0e00     MOVLW     0x0                                                                                             
003bba   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003bbc   e337     BNC       0x3c2c                                                                                          
                                           					{                                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bbe   6ade     CLRF      0xde,0x0       						temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bc0   6add     CLRF      0xdd,0x0                                                                                        
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						// if the tilt servo is at the end of its                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						// travel, send it back to the start                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bc2   0e02     MOVLW     0x2            						if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bc4   cfdb     MOVFF     0xfdb,0x0                                                                                       
003bc6   f000                                                                                                               
003bc8   0e03     MOVLW     0x3                                                                                             
003bca   cfdb     MOVFF     0xfdb,0x1                                                                                       
003bcc   f001                                                                                                               
003bce   90d8     BCF       0xd8,0x0,0x0                                                                                    
003bd0   5001     MOVF      0x1,0x0,0x0                                                                                     
003bd2   e604     BN        0x3bdc                                                                                          
003bd4   0ec2     MOVLW     0xc2                                                                                            
003bd6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003bd8   0e00     MOVLW     0x0                                                                                             
003bda   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003bdc   e308     BNC       0x3bee                                                                                          
                                           						{                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bde   0e5e     MOVLW     0x5e           							temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003be0   6ef3     MOVWF     0xf3,0x0                                                                                        
003be2   0e02     MOVLW     0x2                                                                                             
003be4   cff3     MOVFF     0xff3,0xfdb                                                                                     
003be6   ffdb                                                                                                               
003be8   0e03     MOVLW     0x3                                                                                             
003bea   6adb     CLRF      0xdb,0x0                                                                                        
                                           						}                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bec   d01e     BRA       0x3c2a         						else                                                                       C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						{                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           							// step the tilt servo to its next destination                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bee   50d9     MOVF      0xd9,0x0,0x0   							temp_tilt_servo += TILT_SEARCH_STEP_SIZE_DEFAULT;                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
003bf0   0f02     ADDLW     0x2                                                                                             
003bf2   6ee9     MOVWF     0xe9,0x0                                                                                        
003bf4   cfda     MOVFF     0xfda,0xfea                                                                                     
003bf6   ffea                                                                                                               
003bf8   0e32     MOVLW     0x32                                                                                            
003bfa   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003bfc   0e00     MOVLW     0x0                                                                                             
003bfe   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           			                                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           							// make sure its new position isn't beyond                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           							// the maximum value set in tracking.h                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c00   0e02     MOVLW     0x2            							if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c02   cfdb     MOVFF     0xfdb,0x0                                                                                       
003c04   f000                                                                                                               
003c06   0e03     MOVLW     0x3                                                                                             
003c08   cfdb     MOVFF     0xfdb,0x1                                                                                       
003c0a   f001                                                                                                               
003c0c   90d8     BCF       0xd8,0x0,0x0                                                                                    
003c0e   5001     MOVF      0x1,0x0,0x0                                                                                     
003c10   e604     BN        0x3c1a                                                                                          
003c12   0ec2     MOVLW     0xc2                                                                                            
003c14   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003c16   0e00     MOVLW     0x0                                                                                             
003c18   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003c1a   e307     BNC       0x3c2a                                                                                          
                                           							{                                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c1c   0ec2     MOVLW     0xc2           								temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c1e   6ef3     MOVWF     0xf3,0x0                                                                                        
003c20   0e02     MOVLW     0x2                                                                                             
003c22   cff3     MOVFF     0xff3,0xfdb                                                                                     
003c24   ffdb                                                                                                               
003c26   0e03     MOVLW     0x3                                                                                             
003c28   6adb     CLRF      0xdb,0x0                                                                                        
                                           							}                                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						}                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					}                                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c2a   d013     BRA       0x3c52         					else                                                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					{                                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						// step the pan servo to its next destination                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c2c   0e3e     MOVLW     0x3e           						temp_pan_servo += PAN_SEARCH_STEP_SIZE_DEFAULT;                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c2e   26de     ADDWF     0xde,0x1,0x0                                                                                    
003c30   0e00     MOVLW     0x0                                                                                             
003c32   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						// make sure its new position isn't beyond                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           						// the maximum value set in tracking.h                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c34   cfde     MOVFF     0xfde,0x0      						if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c36   f000                                                                                                               
003c38   cfdd     MOVFF     0xfdd,0x1                                                                                       
003c3a   f001                                                                                                               
003c3c   90d8     BCF       0xd8,0x0,0x0                                                                                    
003c3e   5001     MOVF      0x1,0x0,0x0                                                                                     
003c40   e604     BN        0x3c4a                                                                                          
003c42   0ef8     MOVLW     0xf8                                                                                            
003c44   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003c46   0e00     MOVLW     0x0                                                                                             
003c48   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003c4a   e303     BNC       0x3c52                                                                                          
                                           						{                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c4c   0ef8     MOVLW     0xf8           							temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c4e   6ede     MOVWF     0xde,0x0                                                                                        
003c50   6add     CLRF      0xdd,0x0                                                                                        
                                           						}                                                                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           					}                                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c52   cfdf     MOVFF     0xfdf,0x1fd    				pan_servo_position = (int)temp_pan_servo;                                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c54   f1fd                                                                                                               
003c56   0e02     MOVLW     0x2            				tilt_servo_position = (int)temp_tilt_servo;                                  C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c58   cfdb     MOVFF     0xfdb,0x1fe                                                                                     
003c5a   f1fe                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           				// update the pan and tilt servo PWM value                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c5c   c1fd     MOVFF     0x1fd,0xfe6    				Set_Pan_Servo_Position((unsigned char)pan_servo_position);                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c5e   ffe6                                                                                                               
003c60   d827     RCALL     0x3cb0                                                                                          
003c62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c64   c1fe     MOVFF     0x1fe,0xfe6    				Set_Tilt_Servo_Position((unsigned char)tilt_servo_position);                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c66   ffe6                                                                                                               
003c68   d82e     RCALL     0x3cc6                                                                                          
003c6a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c6c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c6e   ffe1                                                                                                               
003c70   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c72   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003c74   ffd9                                                                                                               
003c76   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	FUNCTION:		Get_Tracking_State()                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PURPOSE:		This function can be used to determine if both the pan               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					and tilt servos have the camera positioned such that the                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					centroid (center) of the green light is located at the                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					center of the camera's imager.                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	CALLED FROM:	User code.                                                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	RETURNS:		SEARCHING if in search mode.                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					TARGET_IN_VIEW if the target is in view of the camera                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					but not locked on.                                                         C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					CAMERA_ON_TARGET if the camera is locked onto the                          C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *					target                                                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	COMMENTS:		The return values are defined in tracking.h.                        C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c78   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_Tracking_State(void)                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c7a   ffe6                                                                                                               
003c7c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003c7e   ffd9                                                                                                               
003c80   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	unsigned char return_value;                                                     C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c82   0102     MOVLB     0x2            	if(Tracking_State == STATE_SEARCHING)                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c84   51d2     MOVF      0xd2,0x0,0x1                                                                                    
003c86   e102     BNZ       0x3c8c                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c88   6adf     CLRF      0xdf,0x0       		return_value = SEARCHING;                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c8a   d00b     BRA       0x3ca2         	else if(Tracking_State < STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c8c   0e07     MOVLW     0x7                                                                                             
003c8e   5dd2     SUBWF     0xd2,0x0,0x1                                                                                    
003c90   e203     BC        0x3c98                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c92   0e01     MOVLW     0x1            		return_value = TARGET_IN_VIEW;                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c94   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c96   d005     BRA       0x3ca2         	else if(Tracking_State == STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c98   0e07     MOVLW     0x7                                                                                             
003c9a   5dd2     SUBWF     0xd2,0x0,0x1                                                                                    
003c9c   e102     BNZ       0x3ca2                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003c9e   0e02     MOVLW     0x2            		return_value = CAMERA_ON_TARGET;                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ca0   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ca2   50df     MOVF      0xdf,0x0,0x0   	return(return_value);                                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ca4   d000     BRA       0x3ca6                                                                                          
003ca6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003ca8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003caa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cac   ffd9                                                                                                               
003cae   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	FUNCTION:		Set_Pan_Servo_Position()                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PURPOSE:		Commands the pan servo to a new position                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cb0   cfd9     MOVFF     0xfd9,0xfe6    void Set_Pan_Servo_Position(unsigned char new_pan_position)                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cb2   ffe6                                                                                                               
003cb4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003cb6   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cb8   0efe     MOVLW     0xfe           	PAN_SERVO = new_pan_position;                                                   C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cba   cfdb     MOVFF     0xfdb,0x204                                                                                     
003cbc   f204                                                                                                               
003cbe   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cc0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cc2   ffd9                                                                                                               
003cc4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	FUNCTION:		Set_Tilt_Servo_Position()                                           C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PURPOSE:		Commands the tilt servo to a new position                            C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *	COMMENTS:                                                                      C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cc6   cfd9     MOVFF     0xfd9,0xfe6    void Set_Tilt_Servo_Position(unsigned char new_tilt_position)                    C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cc8   ffe6                                                                                                               
003cca   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003ccc   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cce   0efe     MOVLW     0xfe           	TILT_SERVO = new_tilt_position;                                                 C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cd0   cfdb     MOVFF     0xfdb,0x205                                                                                     
003cd2   f205                                                                                                               
003cd4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\tracking.c
003cd6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cd8   ffd9                                                                                                               
003cda   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           * FILE NAME: TRCfunctions.c                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           * AUTHOR: Paul Malmsten, 2008                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *  This file contains all of the extra functions the Titan Robotics Club has     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *  added. Feel free to mess with it.                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "ifi_utilities.h"                                                       C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "user_routines.h"                                                       C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "serial_ports.h"                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "encoder.h"                                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "adc.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "gyro.h"                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #include "TRCfunctions.h"                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           extern VelServo Left, Right;                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0008a4   cfd9     MOVFF     0xfd9,0xfe6    int doVelPid(VelServo *p, long encoder, int motor_direction)                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0008a6   ffe6                                                                                                               
0008a8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0008aa   ffd9                                                                                                               
0008ac   0e0a     MOVLW     0xa                                                                                             
0008ae   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	long vel;                                                                       C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	int velErr,Drive,Kp;                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	/*if(p->mode == 1)																//Position mode?                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           		p->Vsetpoint = ((p->Psetpoint - encoder)*p->Kpp)/p->Ko;								//Velocity based on position error C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	*/                                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0008b0   0efd     MOVLW     0xfd           	p->Vsetpoint = lim(p->Vsetpoint, p->velLim);									//Velocity Limit           C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0008b2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008b4   ffe9                                                                                                               
0008b6   0efe     MOVLW     0xfe                                                                                            
0008b8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008ba   ffea                                                                                                               
0008bc   0e10     MOVLW     0x10                                                                                            
0008be   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008c0   0e00     MOVLW     0x0                                                                                             
0008c2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008c4   cfee     MOVFF     0xfee,0xfe6                                                                                     
0008c6   ffe6                                                                                                               
0008c8   cfef     MOVFF     0xfef,0xfe6                                                                                     
0008ca   ffe6                                                                                                               
0008cc   0efd     MOVLW     0xfd                                                                                            
0008ce   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008d0   ffe9                                                                                                               
0008d2   0efe     MOVLW     0xfe                                                                                            
0008d4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008d6   ffea                                                                                                               
0008d8   0e06     MOVLW     0x6                                                                                             
0008da   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008dc   0e00     MOVLW     0x0                                                                                             
0008de   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008e0   cfee     MOVFF     0xfee,0xfe6                                                                                     
0008e2   ffe6                                                                                                               
0008e4   cfef     MOVFF     0xfef,0xfe6                                                                                     
0008e6   ffe6                                                                                                               
0008e8   dbbe     RCALL     0x1066                                                                                          
0008ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0008ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0008ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0008f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0008f2   cff3     MOVFF     0xff3,0x0                                                                                       
0008f4   f000                                                                                                               
0008f6   cff4     MOVFF     0xff4,0x1                                                                                       
0008f8   f001                                                                                                               
0008fa   0efd     MOVLW     0xfd                                                                                            
0008fc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008fe   ffe9                                                                                                               
000900   0efe     MOVLW     0xfe                                                                                            
000902   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000904   ffea                                                                                                               
000906   0e06     MOVLW     0x6                                                                                             
000908   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00090a   0e00     MOVLW     0x0                                                                                             
00090c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00090e   c000     MOVFF     0x0,0xfee                                                                                       
000910   ffee                                                                                                               
000912   c001     MOVFF     0x1,0xfed                                                                                       
000914   ffed                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000916   0ef9     MOVLW     0xf9           	vel = (encoder - p->prevEnc);                                                   C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000918   cfdb     MOVFF     0xfdb,0x4                                                                                       
00091a   f004                                                                                                               
00091c   0efa     MOVLW     0xfa                                                                                            
00091e   cfdb     MOVFF     0xfdb,0x5                                                                                       
000920   f005                                                                                                               
000922   0efb     MOVLW     0xfb                                                                                            
000924   cfdb     MOVFF     0xfdb,0x6                                                                                       
000926   f006                                                                                                               
000928   0efc     MOVLW     0xfc                                                                                            
00092a   cfdb     MOVFF     0xfdb,0x7                                                                                       
00092c   f007                                                                                                               
00092e   0efd     MOVLW     0xfd                                                                                            
000930   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000932   ffe9                                                                                                               
000934   0efe     MOVLW     0xfe                                                                                            
000936   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000938   ffea                                                                                                               
00093a   0e0a     MOVLW     0xa                                                                                             
00093c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00093e   0e00     MOVLW     0x0                                                                                             
000940   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000942   50ee     MOVF      0xee,0x0,0x0                                                                                    
000944   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000946   6e00     MOVWF     0x0,0x0                                                                                         
000948   50ee     MOVF      0xee,0x0,0x0                                                                                    
00094a   5805     SUBWFB    0x5,0x0,0x0                                                                                     
00094c   6e01     MOVWF     0x1,0x0                                                                                         
00094e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000950   5806     SUBWFB    0x6,0x0,0x0                                                                                     
000952   6e02     MOVWF     0x2,0x0                                                                                         
000954   50ee     MOVF      0xee,0x0,0x0                                                                                    
000956   5807     SUBWFB    0x7,0x0,0x0                                                                                     
000958   6e03     MOVWF     0x3,0x0                                                                                         
00095a   c000     MOVFF     0x0,0xfdf                                                                                       
00095c   ffdf                                                                                                               
00095e   0e01     MOVLW     0x1                                                                                             
000960   c001     MOVFF     0x1,0xfdb                                                                                       
000962   ffdb                                                                                                               
000964   0e02     MOVLW     0x2                                                                                             
000966   c002     MOVFF     0x2,0xfdb                                                                                       
000968   ffdb                                                                                                               
00096a   0e03     MOVLW     0x3                                                                                             
00096c   c003     MOVFF     0x3,0xfdb                                                                                       
00096e   ffdb                                                                                                               
000970   0efd     MOVLW     0xfd           	velErr = p->Vsetpoint - vel;													//Velocity Error                       C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000972   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000974   ffe9                                                                                                               
000976   0efe     MOVLW     0xfe                                                                                            
000978   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00097a   ffea                                                                                                               
00097c   0e06     MOVLW     0x6                                                                                             
00097e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000980   0e00     MOVLW     0x0                                                                                             
000982   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000984   cfee     MOVFF     0xfee,0x4                                                                                       
000986   f004                                                                                                               
000988   cfef     MOVFF     0xfef,0x5                                                                                       
00098a   f005                                                                                                               
00098c   6a06     CLRF      0x6,0x0                                                                                         
00098e   6a07     CLRF      0x7,0x0                                                                                         
000990   ae05     BTFSS     0x5,0x7,0x0                                                                                     
000992   d002     BRA       0x998                                                                                           
000994   6806     SETF      0x6,0x0                                                                                         
000996   6807     SETF      0x7,0x0                                                                                         
000998   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
00099a   ffe9                                                                                                               
00099c   cfda     MOVFF     0xfda,0xfea                                                                                     
00099e   ffea                                                                                                               
0009a0   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009a2   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0009a4   6e00     MOVWF     0x0,0x0                                                                                         
0009a6   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009a8   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0009aa   6e01     MOVWF     0x1,0x0                                                                                         
0009ac   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009ae   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0009b0   6e02     MOVWF     0x2,0x0                                                                                         
0009b2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009b4   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0009b6   6e03     MOVWF     0x3,0x0                                                                                         
0009b8   0e04     MOVLW     0x4                                                                                             
0009ba   c000     MOVFF     0x0,0xfdb                                                                                       
0009bc   ffdb                                                                                                               
0009be   0e05     MOVLW     0x5                                                                                             
0009c0   c001     MOVFF     0x1,0xfdb                                                                                       
0009c2   ffdb                                                                                                               
0009c4   0e00     MOVLW     0x0            	Kp = (abs(vel) > p->velThresh) ? p->Kvphs:p->Kvpls;									//Are we going slowly or quickly? C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0009c6   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0009c8   ffe6                                                                                                               
0009ca   0e01     MOVLW     0x1                                                                                             
0009cc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0009ce   ffe6                                                                                                               
0009d0   db22     RCALL     0x1016                                                                                          
0009d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0009d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0009d6   cff3     MOVFF     0xff3,0x2                                                                                       
0009d8   f002                                                                                                               
0009da   cff4     MOVFF     0xff4,0x3                                                                                       
0009dc   f003                                                                                                               
0009de   0efd     MOVLW     0xfd                                                                                            
0009e0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009e2   ffe9                                                                                                               
0009e4   0efe     MOVLW     0xfe                                                                                            
0009e6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009e8   ffea                                                                                                               
0009ea   0e12     MOVLW     0x12                                                                                            
0009ec   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0009ee   0e00     MOVLW     0x0                                                                                             
0009f0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0009f2   cfee     MOVFF     0xfee,0x4                                                                                       
0009f4   f004                                                                                                               
0009f6   cfef     MOVFF     0xfef,0x5                                                                                       
0009f8   f005                                                                                                               
0009fa   5005     MOVF      0x5,0x0,0x0                                                                                     
0009fc   1803     XORWF     0x3,0x0,0x0                                                                                     
0009fe   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000a00   d002     BRA       0xa06                                                                                           
000a02   3403     RLCF      0x3,0x0,0x0                                                                                     
000a04   d004     BRA       0xa0e                                                                                           
000a06   5002     MOVF      0x2,0x0,0x0                                                                                     
000a08   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000a0a   5003     MOVF      0x3,0x0,0x0                                                                                     
000a0c   5805     SUBWFB    0x5,0x0,0x0                                                                                     
000a0e   e20f     BC        0xa2e                                                                                           
000a10   0efd     MOVLW     0xfd                                                                                            
000a12   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a14   ffe9                                                                                                               
000a16   0efe     MOVLW     0xfe                                                                                            
000a18   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a1a   ffea                                                                                                               
000a1c   0e1a     MOVLW     0x1a                                                                                            
000a1e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a20   0e00     MOVLW     0x0                                                                                             
000a22   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a24   cfee     MOVFF     0xfee,0x0                                                                                       
000a26   f000                                                                                                               
000a28   cfef     MOVFF     0xfef,0x1                                                                                       
000a2a   f001                                                                                                               
000a2c   d00e     BRA       0xa4a                                                                                           
000a2e   0efd     MOVLW     0xfd                                                                                            
000a30   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a32   ffe9                                                                                                               
000a34   0efe     MOVLW     0xfe                                                                                            
000a36   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a38   ffea                                                                                                               
000a3a   0e18     MOVLW     0x18                                                                                            
000a3c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a3e   0e00     MOVLW     0x0                                                                                             
000a40   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a42   cfee     MOVFF     0xfee,0x0                                                                                       
000a44   f000                                                                                                               
000a46   cfef     MOVFF     0xfef,0x1                                                                                       
000a48   f001                                                                                                               
000a4a   0e08     MOVLW     0x8                                                                                             
000a4c   c000     MOVFF     0x0,0xfdb                                                                                       
000a4e   ffdb                                                                                                               
000a50   0e09     MOVLW     0x9                                                                                             
000a52   c001     MOVFF     0x1,0xfdb                                                                                       
000a54   ffdb                                                                                                               
000a56   0efd     MOVLW     0xfd           	Drive = (velErr*Kp + (velErr - p->prevErr)*p->Kd + p->Ierr*p->Kvi)/p->Ko;		//PID Algorithm C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000a58   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a5a   ffe9                                                                                                               
000a5c   0efe     MOVLW     0xfe                                                                                            
000a5e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a60   ffea                                                                                                               
000a62   0e22     MOVLW     0x22                                                                                            
000a64   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a66   0e00     MOVLW     0x0                                                                                             
000a68   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a6a   cfee     MOVFF     0xfee,0x10                                                                                      
000a6c   f010                                                                                                               
000a6e   cfef     MOVFF     0xfef,0x11                                                                                      
000a70   f011                                                                                                               
000a72   0e04     MOVLW     0x4                                                                                             
000a74   cfdb     MOVFF     0xfdb,0x8                                                                                       
000a76   f008                                                                                                               
000a78   0e05     MOVLW     0x5                                                                                             
000a7a   cfdb     MOVFF     0xfdb,0x9                                                                                       
000a7c   f009                                                                                                               
000a7e   0efd     MOVLW     0xfd                                                                                            
000a80   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a82   ffe9                                                                                                               
000a84   0efe     MOVLW     0xfe                                                                                            
000a86   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a88   ffea                                                                                                               
000a8a   0e0e     MOVLW     0xe                                                                                             
000a8c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a8e   0e00     MOVLW     0x0                                                                                             
000a90   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a92   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a94   5c08     SUBWF     0x8,0x0,0x0                                                                                     
000a96   6e06     MOVWF     0x6,0x0                                                                                         
000a98   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a9a   5809     SUBWFB    0x9,0x0,0x0                                                                                     
000a9c   6e07     MOVWF     0x7,0x0                                                                                         
000a9e   0efd     MOVLW     0xfd                                                                                            
000aa0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000aa2   ffe9                                                                                                               
000aa4   0efe     MOVLW     0xfe                                                                                            
000aa6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000aa8   ffea                                                                                                               
000aaa   0e1e     MOVLW     0x1e                                                                                            
000aac   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000aae   0e00     MOVLW     0x0                                                                                             
000ab0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ab2   cfee     MOVFF     0xfee,0xa                                                                                       
000ab4   f00a                                                                                                               
000ab6   cfef     MOVFF     0xfef,0xb                                                                                       
000ab8   f00b                                                                                                               
000aba   0100     MOVLB     0x0                                                                                             
000abc   500a     MOVF      0xa,0x0,0x0                                                                                     
000abe   0206     MULWF     0x6,0x0                                                                                         
000ac0   cff3     MOVFF     0xff3,0x4                                                                                       
000ac2   f004                                                                                                               
000ac4   cff4     MOVFF     0xff4,0x5                                                                                       
000ac6   f005                                                                                                               
000ac8   0207     MULWF     0x7,0x0                                                                                         
000aca   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000acc   2605     ADDWF     0x5,0x1,0x0                                                                                     
000ace   500b     MOVF      0xb,0x0,0x0                                                                                     
000ad0   0206     MULWF     0x6,0x0                                                                                         
000ad2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000ad4   2605     ADDWF     0x5,0x1,0x0                                                                                     
000ad6   0e04     MOVLW     0x4                                                                                             
000ad8   cfdb     MOVFF     0xfdb,0x36                                                                                      
000ada   f036                                                                                                               
000adc   0e05     MOVLW     0x5                                                                                             
000ade   cfdb     MOVFF     0xfdb,0x37                                                                                      
000ae0   f037                                                                                                               
000ae2   0e08     MOVLW     0x8                                                                                             
000ae4   cfdb     MOVFF     0xfdb,0x3b                                                                                      
000ae6   f03b                                                                                                               
000ae8   0e09     MOVLW     0x9                                                                                             
000aea   cfdb     MOVFF     0xfdb,0x3c                                                                                      
000aec   f03c                                                                                                               
000aee   ec99     CALL      0x3f32,0x0                                                                                      
000af0   f01f                                                                                                               
000af2   5034     MOVF      0x34,0x0,0x0                                                                                    
000af4   2404     ADDWF     0x4,0x0,0x0                                                                                     
000af6   6e02     MOVWF     0x2,0x0                                                                                         
000af8   5035     MOVF      0x35,0x0,0x0                                                                                    
000afa   2005     ADDWFC    0x5,0x0,0x0                                                                                     
000afc   6e03     MOVWF     0x3,0x0                                                                                         
000afe   0efd     MOVLW     0xfd                                                                                            
000b00   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b02   ffe9                                                                                                               
000b04   0efe     MOVLW     0xfe                                                                                            
000b06   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b08   ffea                                                                                                               
000b0a   0e1c     MOVLW     0x1c                                                                                            
000b0c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b0e   0e00     MOVLW     0x0                                                                                             
000b10   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b12   cfee     MOVFF     0xfee,0xe                                                                                       
000b14   f00e                                                                                                               
000b16   cfef     MOVFF     0xfef,0xf                                                                                       
000b18   f00f                                                                                                               
000b1a   0efd     MOVLW     0xfd                                                                                            
000b1c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b1e   ffe9                                                                                                               
000b20   0efe     MOVLW     0xfe                                                                                            
000b22   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b24   ffea                                                                                                               
000b26   0e08     MOVLW     0x8                                                                                             
000b28   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b2a   0e00     MOVLW     0x0                                                                                             
000b2c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b2e   cfee     MOVFF     0xfee,0xc                                                                                       
000b30   f00c                                                                                                               
000b32   cfef     MOVFF     0xfef,0xd                                                                                       
000b34   f00d                                                                                                               
000b36   c00c     MOVFF     0xc,0x36                                                                                        
000b38   f036                                                                                                               
000b3a   c00d     MOVFF     0xd,0x37                                                                                        
000b3c   f037                                                                                                               
000b3e   c00e     MOVFF     0xe,0x3b                                                                                        
000b40   f03b                                                                                                               
000b42   c00f     MOVFF     0xf,0x3c                                                                                        
000b44   f03c                                                                                                               
000b46   ec99     CALL      0x3f32,0x0                                                                                      
000b48   f01f                                                                                                               
000b4a   5002     MOVF      0x2,0x0,0x0                                                                                     
000b4c   2434     ADDWF     0x34,0x0,0x0                                                                                    
000b4e   6e00     MOVWF     0x0,0x0                                                                                         
000b50   5003     MOVF      0x3,0x0,0x0                                                                                     
000b52   2035     ADDWFC    0x35,0x0,0x0                                                                                    
000b54   6e01     MOVWF     0x1,0x0                                                                                         
000b56   c000     MOVFF     0x0,0x36                                                                                        
000b58   f036                                                                                                               
000b5a   c001     MOVFF     0x1,0x37                                                                                        
000b5c   f037                                                                                                               
000b5e   c010     MOVFF     0x10,0x3b                                                                                       
000b60   f03b                                                                                                               
000b62   c011     MOVFF     0x11,0x3c                                                                                       
000b64   f03c                                                                                                               
000b66   ec3f     CALL      0x3e7e,0x0                                                                                      
000b68   f01f                                                                                                               
000b6a   0e06     MOVLW     0x6                                                                                             
000b6c   c036     MOVFF     0x36,0xfdb                                                                                      
000b6e   ffdb                                                                                                               
000b70   0e07     MOVLW     0x7                                                                                             
000b72   c037     MOVFF     0x37,0xfdb                                                                                      
000b74   ffdb                                                                                                               
                                           																						//Remember: no p-> in front of Kp	                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000b76   0efd     MOVLW     0xfd           	Drive = lim(Drive, p->tqLim);													//Torgue Limit                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000b78   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b7a   ffe9                                                                                                               
000b7c   0efe     MOVLW     0xfe                                                                                            
000b7e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b80   ffea                                                                                                               
000b82   0e14     MOVLW     0x14                                                                                            
000b84   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b86   0e00     MOVLW     0x0                                                                                             
000b88   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b8a   cfee     MOVFF     0xfee,0xfe6                                                                                     
000b8c   ffe6                                                                                                               
000b8e   cfef     MOVFF     0xfef,0xfe6                                                                                     
000b90   ffe6                                                                                                               
000b92   0e06     MOVLW     0x6                                                                                             
000b94   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b96   ffe6                                                                                                               
000b98   0e07     MOVLW     0x7                                                                                             
000b9a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b9c   ffe6                                                                                                               
000b9e   da63     RCALL     0x1066                                                                                          
000ba0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000ba8   0e06     MOVLW     0x6                                                                                             
000baa   cff3     MOVFF     0xff3,0xfdb                                                                                     
000bac   ffdb                                                                                                               
000bae   0e07     MOVLW     0x7                                                                                             
000bb0   cff4     MOVFF     0xff4,0xfdb                                                                                     
000bb2   ffdb                                                                                                               
000bb4   0efd     MOVLW     0xfd           	Drive += (vel * p->bEMF)/p->Ko;													//bEMF Compensation                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000bb6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bb8   ffe9                                                                                                               
000bba   0efe     MOVLW     0xfe                                                                                            
000bbc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000bbe   ffea                                                                                                               
000bc0   0e22     MOVLW     0x22                                                                                            
000bc2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000bc4   0e00     MOVLW     0x0                                                                                             
000bc6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000bc8   cfee     MOVFF     0xfee,0xa                                                                                       
000bca   f00a                                                                                                               
000bcc   cfef     MOVFF     0xfef,0xb                                                                                       
000bce   f00b                                                                                                               
000bd0   6a0c     CLRF      0xc,0x0                                                                                         
000bd2   6a0d     CLRF      0xd,0x0                                                                                         
000bd4   ae0b     BTFSS     0xb,0x7,0x0                                                                                     
000bd6   d002     BRA       0xbdc                                                                                           
000bd8   680c     SETF      0xc,0x0                                                                                         
000bda   680d     SETF      0xd,0x0                                                                                         
000bdc   0efd     MOVLW     0xfd                                                                                            
000bde   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000be0   ffe9                                                                                                               
000be2   0efe     MOVLW     0xfe                                                                                            
000be4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000be6   ffea                                                                                                               
000be8   0e20     MOVLW     0x20                                                                                            
000bea   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000bec   0e00     MOVLW     0x0                                                                                             
000bee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000bf0   cfee     MOVFF     0xfee,0x6                                                                                       
000bf2   f006                                                                                                               
000bf4   cfef     MOVFF     0xfef,0x7                                                                                       
000bf6   f007                                                                                                               
000bf8   6a08     CLRF      0x8,0x0                                                                                         
000bfa   6a09     CLRF      0x9,0x0                                                                                         
000bfc   ae07     BTFSS     0x7,0x7,0x0                                                                                     
000bfe   d002     BRA       0xc04                                                                                           
000c00   6808     SETF      0x8,0x0                                                                                         
000c02   6809     SETF      0x9,0x0                                                                                         
000c04   c006     MOVFF     0x6,0x34                                                                                        
000c06   f034                                                                                                               
000c08   c007     MOVFF     0x7,0x35                                                                                        
000c0a   f035                                                                                                               
000c0c   c008     MOVFF     0x8,0x36                                                                                        
000c0e   f036                                                                                                               
000c10   c009     MOVFF     0x9,0x37                                                                                        
000c12   f037                                                                                                               
000c14   cfdf     MOVFF     0xfdf,0x39                                                                                      
000c16   f039                                                                                                               
000c18   0e01     MOVLW     0x1                                                                                             
000c1a   cfdb     MOVFF     0xfdb,0x3a                                                                                      
000c1c   f03a                                                                                                               
000c1e   0e02     MOVLW     0x2                                                                                             
000c20   cfdb     MOVFF     0xfdb,0x3b                                                                                      
000c22   f03b                                                                                                               
000c24   0e03     MOVLW     0x3                                                                                             
000c26   cfdb     MOVFF     0xfdb,0x3c                                                                                      
000c28   f03c                                                                                                               
000c2a   ec7f     CALL      0x5cfe,0x0                                                                                      
000c2c   f02e                                                                                                               
000c2e   c030     MOVFF     0x30,0x2                                                                                        
000c30   f002                                                                                                               
000c32   c031     MOVFF     0x31,0x3                                                                                        
000c34   f003                                                                                                               
000c36   c032     MOVFF     0x32,0x4                                                                                        
000c38   f004                                                                                                               
000c3a   c033     MOVFF     0x33,0x5                                                                                        
000c3c   f005                                                                                                               
000c3e   c002     MOVFF     0x2,0x34                                                                                        
000c40   f034                                                                                                               
000c42   c003     MOVFF     0x3,0x35                                                                                        
000c44   f035                                                                                                               
000c46   c004     MOVFF     0x4,0x36                                                                                        
000c48   f036                                                                                                               
000c4a   c005     MOVFF     0x5,0x37                                                                                        
000c4c   f037                                                                                                               
000c4e   c00a     MOVFF     0xa,0x39                                                                                        
000c50   f039                                                                                                               
000c52   c00b     MOVFF     0xb,0x3a                                                                                        
000c54   f03a                                                                                                               
000c56   c00c     MOVFF     0xc,0x3b                                                                                        
000c58   f03b                                                                                                               
000c5a   c00d     MOVFF     0xd,0x3c                                                                                        
000c5c   f03c                                                                                                               
000c5e   ec65     CALL      0x3eca,0x0                                                                                      
000c60   f01f                                                                                                               
000c62   c034     MOVFF     0x34,0x0                                                                                        
000c64   f000                                                                                                               
000c66   c035     MOVFF     0x35,0x1                                                                                        
000c68   f001                                                                                                               
000c6a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000c6c   0f06     ADDLW     0x6                                                                                             
000c6e   6ee9     MOVWF     0xe9,0x0                                                                                        
000c70   cfda     MOVFF     0xfda,0xfea                                                                                     
000c72   ffea                                                                                                               
000c74   5000     MOVF      0x0,0x0,0x0                                                                                     
000c76   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000c78   5001     MOVF      0x1,0x0,0x0                                                                                     
000c7a   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
000c7c   0e7f     MOVLW     0x7f           	Drive = lim(Drive, 127);														//Saturation Limit                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000c7e   6ee6     MOVWF     0xe6,0x0                                                                                        
000c80   6ae6     CLRF      0xe6,0x0                                                                                        
000c82   0e06     MOVLW     0x6                                                                                             
000c84   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000c86   ffe6                                                                                                               
000c88   0e07     MOVLW     0x7                                                                                             
000c8a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000c8c   ffe6                                                                                                               
000c8e   d9eb     RCALL     0x1066                                                                                          
000c90   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000c98   0e06     MOVLW     0x6                                                                                             
000c9a   cff3     MOVFF     0xff3,0xfdb                                                                                     
000c9c   ffdb                                                                                                               
000c9e   0e07     MOVLW     0x7                                                                                             
000ca0   cff4     MOVFF     0xff4,0xfdb                                                                                     
000ca2   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ca4   0e06     MOVLW     0x6            	if(abs(Drive) < 127)															//Saturation check for integration           C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ca6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000ca8   ffe6                                                                                                               
000caa   0e07     MOVLW     0x7                                                                                             
000cac   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000cae   ffe6                                                                                                               
000cb0   d9b2     RCALL     0x1016                                                                                          
000cb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cb4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cb6   cff3     MOVFF     0xff3,0x0                                                                                       
000cb8   f000                                                                                                               
000cba   cff4     MOVFF     0xff4,0x1                                                                                       
000cbc   f001                                                                                                               
000cbe   90d8     BCF       0xd8,0x0,0x0                                                                                    
000cc0   5001     MOVF      0x1,0x0,0x0                                                                                     
000cc2   e604     BN        0xccc                                                                                           
000cc4   0e7f     MOVLW     0x7f                                                                                            
000cc6   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000cc8   0e00     MOVLW     0x0                                                                                             
000cca   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000ccc   e214     BC        0xcf6                                                                                           
000cce   0e04     MOVLW     0x4            		p->Ierr += velErr;                                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000cd0   cfdb     MOVFF     0xfdb,0x0                                                                                       
000cd2   f000                                                                                                               
000cd4   0e05     MOVLW     0x5                                                                                             
000cd6   cfdb     MOVFF     0xfdb,0x1                                                                                       
000cd8   f001                                                                                                               
000cda   0efd     MOVLW     0xfd                                                                                            
000cdc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000cde   ffe9                                                                                                               
000ce0   0efe     MOVLW     0xfe                                                                                            
000ce2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000ce4   ffea                                                                                                               
000ce6   0e08     MOVLW     0x8                                                                                             
000ce8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000cea   0e00     MOVLW     0x0                                                                                             
000cec   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000cee   5000     MOVF      0x0,0x0,0x0                                                                                     
000cf0   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000cf2   5001     MOVF      0x1,0x0,0x0                                                                                     
000cf4   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           #ifdef DRIVE_DEBUG                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000cf6   0ef9     MOVLW     0xf9           	printf("PSet:%ld VSet:%d velErr:%d prevErr:%d Kd:%d Enc:%ld Drive:%d Perr:%ld\r\n", p->Psetpoint, p->Vsetpoint, velErr,p->prevErr, ((velErr - p->prevErr)*p->Kd)/p->Ko, encoder, Drive*motor_direction, (p->Psetpoint - encoder)); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000cf8   cfdb     MOVFF     0xfdb,0x4                                                                                       
000cfa   f004                                                                                                               
000cfc   0efa     MOVLW     0xfa                                                                                            
000cfe   cfdb     MOVFF     0xfdb,0x5                                                                                       
000d00   f005                                                                                                               
000d02   0efb     MOVLW     0xfb                                                                                            
000d04   cfdb     MOVFF     0xfdb,0x6                                                                                       
000d06   f006                                                                                                               
000d08   0efc     MOVLW     0xfc                                                                                            
000d0a   cfdb     MOVFF     0xfdb,0x7                                                                                       
000d0c   f007                                                                                                               
000d0e   0efd     MOVLW     0xfd                                                                                            
000d10   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d12   ffe9                                                                                                               
000d14   0efe     MOVLW     0xfe                                                                                            
000d16   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d18   ffea                                                                                                               
000d1a   0e02     MOVLW     0x2                                                                                             
000d1c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d1e   0e00     MOVLW     0x0                                                                                             
000d20   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d22   5004     MOVF      0x4,0x0,0x0                                                                                     
000d24   5cee     SUBWF     0xee,0x0,0x0                                                                                    
000d26   6e00     MOVWF     0x0,0x0                                                                                         
000d28   5005     MOVF      0x5,0x0,0x0                                                                                     
000d2a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000d2c   6e01     MOVWF     0x1,0x0                                                                                         
000d2e   5006     MOVF      0x6,0x0,0x0                                                                                     
000d30   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000d32   6e02     MOVWF     0x2,0x0                                                                                         
000d34   5007     MOVF      0x7,0x0,0x0                                                                                     
000d36   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000d38   6e03     MOVWF     0x3,0x0                                                                                         
000d3a   c000     MOVFF     0x0,0xfe6                                                                                       
000d3c   ffe6                                                                                                               
000d3e   c001     MOVFF     0x1,0xfe6                                                                                       
000d40   ffe6                                                                                                               
000d42   c002     MOVFF     0x2,0xfe6                                                                                       
000d44   ffe6                                                                                                               
000d46   c003     MOVFF     0x3,0xfe6                                                                                       
000d48   ffe6                                                                                                               
000d4a   0e06     MOVLW     0x6                                                                                             
000d4c   cfdb     MOVFF     0xfdb,0x36                                                                                      
000d4e   f036                                                                                                               
000d50   0e07     MOVLW     0x7                                                                                             
000d52   cfdb     MOVFF     0xfdb,0x37                                                                                      
000d54   f037                                                                                                               
000d56   0ef7     MOVLW     0xf7                                                                                            
000d58   cfdb     MOVFF     0xfdb,0x3b                                                                                      
000d5a   f03b                                                                                                               
000d5c   0ef8     MOVLW     0xf8                                                                                            
000d5e   cfdb     MOVFF     0xfdb,0x3c                                                                                      
000d60   f03c                                                                                                               
000d62   ec99     CALL      0x3f32,0x0                                                                                      
000d64   f01f                                                                                                               
000d66   c034     MOVFF     0x34,0x8                                                                                        
000d68   f008                                                                                                               
000d6a   c035     MOVFF     0x35,0x9                                                                                        
000d6c   f009                                                                                                               
000d6e   c008     MOVFF     0x8,0xfe6                                                                                       
000d70   ffe6                                                                                                               
000d72   c009     MOVFF     0x9,0xfe6                                                                                       
000d74   ffe6                                                                                                               
000d76   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000d78   0ff9     ADDLW     0xf9                                                                                            
000d7a   6ee9     MOVWF     0xe9,0x0                                                                                        
000d7c   0eff     MOVLW     0xff                                                                                            
000d7e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
000d80   6eea     MOVWF     0xea,0x0                                                                                        
000d82   cfee     MOVFF     0xfee,0xfe6                                                                                     
000d84   ffe6                                                                                                               
000d86   cfee     MOVFF     0xfee,0xfe6                                                                                     
000d88   ffe6                                                                                                               
000d8a   cfee     MOVFF     0xfee,0xfe6                                                                                     
000d8c   ffe6                                                                                                               
000d8e   cfef     MOVFF     0xfef,0xfe6                                                                                     
000d90   ffe6                                                                                                               
000d92   0efd     MOVLW     0xfd                                                                                            
000d94   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d96   ffe9                                                                                                               
000d98   0efe     MOVLW     0xfe                                                                                            
000d9a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d9c   ffea                                                                                                               
000d9e   0e22     MOVLW     0x22                                                                                            
000da0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000da2   0e00     MOVLW     0x0                                                                                             
000da4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000da6   cfee     MOVFF     0xfee,0x14                                                                                      
000da8   f014                                                                                                               
000daa   cfef     MOVFF     0xfef,0x15                                                                                      
000dac   f015                                                                                                               
000dae   0e04     MOVLW     0x4                                                                                             
000db0   cfdb     MOVFF     0xfdb,0x10                                                                                      
000db2   f010                                                                                                               
000db4   0e05     MOVLW     0x5                                                                                             
000db6   cfdb     MOVFF     0xfdb,0x11                                                                                      
000db8   f011                                                                                                               
000dba   0efd     MOVLW     0xfd                                                                                            
000dbc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dbe   ffe9                                                                                                               
000dc0   0efe     MOVLW     0xfe                                                                                            
000dc2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dc4   ffea                                                                                                               
000dc6   0e0e     MOVLW     0xe                                                                                             
000dc8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000dca   0e00     MOVLW     0x0                                                                                             
000dcc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dce   50ee     MOVF      0xee,0x0,0x0                                                                                    
000dd0   5c10     SUBWF     0x10,0x0,0x0                                                                                    
000dd2   6e0e     MOVWF     0xe,0x0                                                                                         
000dd4   50ee     MOVF      0xee,0x0,0x0                                                                                    
000dd6   5811     SUBWFB    0x11,0x0,0x0                                                                                    
000dd8   6e0f     MOVWF     0xf,0x0                                                                                         
000dda   0efd     MOVLW     0xfd                                                                                            
000ddc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dde   ffe9                                                                                                               
000de0   0efe     MOVLW     0xfe                                                                                            
000de2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000de4   ffea                                                                                                               
000de6   0e1e     MOVLW     0x1e                                                                                            
000de8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000dea   0e00     MOVLW     0x0                                                                                             
000dec   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000dee   cfee     MOVFF     0xfee,0x12                                                                                      
000df0   f012                                                                                                               
000df2   cfef     MOVFF     0xfef,0x13                                                                                      
000df4   f013                                                                                                               
000df6   0100     MOVLB     0x0                                                                                             
000df8   5012     MOVF      0x12,0x0,0x0                                                                                    
000dfa   020e     MULWF     0xe,0x0                                                                                         
000dfc   cff3     MOVFF     0xff3,0xc                                                                                       
000dfe   f00c                                                                                                               
000e00   cff4     MOVFF     0xff4,0xd                                                                                       
000e02   f00d                                                                                                               
000e04   020f     MULWF     0xf,0x0                                                                                         
000e06   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000e08   260d     ADDWF     0xd,0x1,0x0                                                                                     
000e0a   5013     MOVF      0x13,0x0,0x0                                                                                    
000e0c   020e     MULWF     0xe,0x0                                                                                         
000e0e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000e10   260d     ADDWF     0xd,0x1,0x0                                                                                     
000e12   c00c     MOVFF     0xc,0x36                                                                                        
000e14   f036                                                                                                               
000e16   c00d     MOVFF     0xd,0x37                                                                                        
000e18   f037                                                                                                               
000e1a   c014     MOVFF     0x14,0x3b                                                                                       
000e1c   f03b                                                                                                               
000e1e   c015     MOVFF     0x15,0x3c                                                                                       
000e20   f03c                                                                                                               
000e22   ec3f     CALL      0x3e7e,0x0                                                                                      
000e24   f01f                                                                                                               
000e26   c036     MOVFF     0x36,0xa                                                                                        
000e28   f00a                                                                                                               
000e2a   c037     MOVFF     0x37,0xb                                                                                        
000e2c   f00b                                                                                                               
000e2e   c00a     MOVFF     0xa,0xfe6                                                                                       
000e30   ffe6                                                                                                               
000e32   c00b     MOVFF     0xb,0xfe6                                                                                       
000e34   ffe6                                                                                                               
000e36   0efd     MOVLW     0xfd                                                                                            
000e38   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e3a   ffe9                                                                                                               
000e3c   0efe     MOVLW     0xfe                                                                                            
000e3e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e40   ffea                                                                                                               
000e42   0e0e     MOVLW     0xe                                                                                             
000e44   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e46   0e00     MOVLW     0x0                                                                                             
000e48   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e4a   cfee     MOVFF     0xfee,0xfe6                                                                                     
000e4c   ffe6                                                                                                               
000e4e   cfef     MOVFF     0xfef,0xfe6                                                                                     
000e50   ffe6                                                                                                               
000e52   0e04     MOVLW     0x4                                                                                             
000e54   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000e56   ffe6                                                                                                               
000e58   0e05     MOVLW     0x5                                                                                             
000e5a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000e5c   ffe6                                                                                                               
000e5e   0efd     MOVLW     0xfd                                                                                            
000e60   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e62   ffe9                                                                                                               
000e64   0efe     MOVLW     0xfe                                                                                            
000e66   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e68   ffea                                                                                                               
000e6a   0e06     MOVLW     0x6                                                                                             
000e6c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e6e   0e00     MOVLW     0x0                                                                                             
000e70   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e72   cfee     MOVFF     0xfee,0xfe6                                                                                     
000e74   ffe6                                                                                                               
000e76   cfef     MOVFF     0xfef,0xfe6                                                                                     
000e78   ffe6                                                                                                               
000e7a   0efd     MOVLW     0xfd                                                                                            
000e7c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e7e   ffe9                                                                                                               
000e80   0efe     MOVLW     0xfe                                                                                            
000e82   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e84   ffea                                                                                                               
000e86   0e02     MOVLW     0x2                                                                                             
000e88   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e8a   0e00     MOVLW     0x0                                                                                             
000e8c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e8e   cfee     MOVFF     0xfee,0xfe6                                                                                     
000e90   ffe6                                                                                                               
000e92   cfee     MOVFF     0xfee,0xfe6                                                                                     
000e94   ffe6                                                                                                               
000e96   cfee     MOVFF     0xfee,0xfe6                                                                                     
000e98   ffe6                                                                                                               
000e9a   cfef     MOVFF     0xfef,0xfe6                                                                                     
000e9c   ffe6                                                                                                               
000e9e   0eb1     MOVLW     0xb1                                                                                            
000ea0   6e16     MOVWF     0x16,0x0                                                                                        
000ea2   0e53     MOVLW     0x53                                                                                            
000ea4   6e17     MOVWF     0x17,0x0                                                                                        
000ea6   6a18     CLRF      0x18,0x0                                                                                        
000ea8   c016     MOVFF     0x16,0xfe6                                                                                      
000eaa   ffe6                                                                                                               
000eac   c017     MOVFF     0x17,0xfe6                                                                                      
000eae   ffe6                                                                                                               
000eb0   c018     MOVFF     0x18,0xfe6                                                                                      
000eb2   ffe6                                                                                                               
000eb4   ecf3     CALL      0x5be6,0x0                                                                                      
000eb6   f02d                                                                                                               
000eb8   6ef5     MOVWF     0xf5,0x0                                                                                        
000eba   0e19     MOVLW     0x19                                                                                            
000ebc   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
000ebe   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ec0   0efd     MOVLW     0xfd           	p->prevErr = velErr;                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ec2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ec4   ffe9                                                                                                               
000ec6   0efe     MOVLW     0xfe                                                                                            
000ec8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000eca   ffea                                                                                                               
000ecc   0e0e     MOVLW     0xe                                                                                             
000ece   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ed0   0e00     MOVLW     0x0                                                                                             
000ed2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ed4   0e04     MOVLW     0x4                                                                                             
000ed6   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000ed8   ffee                                                                                                               
000eda   0e05     MOVLW     0x5                                                                                             
000edc   cfdb     MOVFF     0xfdb,0xfed                                                                                     
000ede   ffed                                                                                                               
000ee0   0efd     MOVLW     0xfd           	p->prevEnc = encoder;                                                           C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ee2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ee4   ffe9                                                                                                               
000ee6   0efe     MOVLW     0xfe                                                                                            
000ee8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000eea   ffea                                                                                                               
000eec   0e0a     MOVLW     0xa                                                                                             
000eee   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ef0   0e00     MOVLW     0x0                                                                                             
000ef2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ef4   0ef9     MOVLW     0xf9                                                                                            
000ef6   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000ef8   ffee                                                                                                               
000efa   0efa     MOVLW     0xfa                                                                                            
000efc   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000efe   ffee                                                                                                               
000f00   0efb     MOVLW     0xfb                                                                                            
000f02   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000f04   ffee                                                                                                               
000f06   0efc     MOVLW     0xfc                                                                                            
000f08   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000f0a   ffee                                                                                                               
000f0c   0e06     MOVLW     0x6            	return ((Drive*motor_direction)+127);								//Compensate for direction         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f0e   cfdb     MOVFF     0xfdb,0x36                                                                                      
000f10   f036                                                                                                               
000f12   0e07     MOVLW     0x7                                                                                             
000f14   cfdb     MOVFF     0xfdb,0x37                                                                                      
000f16   f037                                                                                                               
000f18   0ef7     MOVLW     0xf7                                                                                            
000f1a   cfdb     MOVFF     0xfdb,0x3b                                                                                      
000f1c   f03b                                                                                                               
000f1e   0ef8     MOVLW     0xf8                                                                                            
000f20   cfdb     MOVFF     0xfdb,0x3c                                                                                      
000f22   f03c                                                                                                               
000f24   ec99     CALL      0x3f32,0x0                                                                                      
000f26   f01f                                                                                                               
000f28   c034     MOVFF     0x34,0x0                                                                                        
000f2a   f000                                                                                                               
000f2c   c035     MOVFF     0x35,0x1                                                                                        
000f2e   f001                                                                                                               
000f30   0e7f     MOVLW     0x7f                                                                                            
000f32   2600     ADDWF     0x0,0x1,0x0                                                                                     
000f34   0e00     MOVLW     0x0                                                                                             
000f36   2201     ADDWFC    0x1,0x1,0x0                                                                                     
000f38   c000     MOVFF     0x0,0xff3                                                                                       
000f3a   fff3                                                                                                               
000f3c   c001     MOVFF     0x1,0xff4                                                                                       
000f3e   fff4                                                                                                               
000f40   d000     BRA       0xf42                                                                                           
000f42   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f44   ffe1                                                                                                               
000f46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f48   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000f4a   ffd9                                                                                                               
000f4c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f4e   cfd9     MOVFF     0xfd9,0xfe6    int deadBandInput(int in, int deadBand)                                          C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f50   ffe6                                                                                                               
000f52   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000f54   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f56   0efd     MOVLW     0xfd           	if(abs(in - 127) <= deadBand)                                                   C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000f58   cfdb     MOVFF     0xfdb,0x2                                                                                       
000f5a   f002                                                                                                               
000f5c   0efe     MOVLW     0xfe                                                                                            
000f5e   cfdb     MOVFF     0xfdb,0x3                                                                                       
000f60   f003                                                                                                               
000f62   0e7f     MOVLW     0x7f                                                                                            
000f64   5e02     SUBWF     0x2,0x1,0x0                                                                                     
000f66   0e00     MOVLW     0x0                                                                                             
000f68   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
000f6a   c002     MOVFF     0x2,0xfe6                                                                                       
000f6c   ffe6                                                                                                               
000f6e   c003     MOVFF     0x3,0xfe6                                                                                       
000f70   ffe6                                                                                                               
000f72   d851     RCALL     0x1016                                                                                          
000f74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f76   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000f78   cff3     MOVFF     0xff3,0x0                                                                                       
000f7a   f000                                                                                                               
000f7c   cff4     MOVFF     0xff4,0x1                                                                                       
000f7e   f001                                                                                                               
000f80   0efb     MOVLW     0xfb                                                                                            
000f82   cfdb     MOVFF     0xfdb,0x4                                                                                       
000f84   f004                                                                                                               
000f86   0efc     MOVLW     0xfc                                                                                            
000f88   cfdb     MOVFF     0xfdb,0x5                                                                                       
000f8a   f005                                                                                                               
000f8c   5005     MOVF      0x5,0x0,0x0                                                                                     
000f8e   1801     XORWF     0x1,0x0,0x0                                                                                     
000f90   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000f92   d002     BRA       0xf98                                                                                           
000f94   3401     RLCF      0x1,0x0,0x0                                                                                     
000f96   d004     BRA       0xfa0                                                                                           
000f98   5000     MOVF      0x0,0x0,0x0                                                                                     
000f9a   5c04     SUBWF     0x4,0x0,0x0                                                                                     
000f9c   5001     MOVF      0x1,0x0,0x0                                                                                     
000f9e   5805     SUBWFB    0x5,0x0,0x0                                                                                     
000fa0   e304     BNC       0xfaa                                                                                           
000fa2   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000fa4   6af4     CLRF      0xf4,0x0                                                                                        
000fa6   d033     BRA       0x100e                                                                                          
000fa8   d023     BRA       0xff0          	else                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000faa   0efd     MOVLW     0xfd           		if((in - 127) > 125)                                                           C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000fac   cfdb     MOVFF     0xfdb,0x0                                                                                       
000fae   f000                                                                                                               
000fb0   0efe     MOVLW     0xfe                                                                                            
000fb2   cfdb     MOVFF     0xfdb,0x1                                                                                       
000fb4   f001                                                                                                               
000fb6   0e7f     MOVLW     0x7f                                                                                            
000fb8   5e00     SUBWF     0x0,0x1,0x0                                                                                     
000fba   0e00     MOVLW     0x0                                                                                             
000fbc   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
000fbe   3401     RLCF      0x1,0x0,0x0                                                                                     
000fc0   e204     BC        0xfca                                                                                           
000fc2   5000     MOVF      0x0,0x0,0x0                                                                                     
000fc4   087d     SUBLW     0x7d                                                                                            
000fc6   0e00     MOVLW     0x0                                                                                             
000fc8   5401     SUBFWB    0x1,0x0,0x0                                                                                     
000fca   e212     BC        0xff0                                                                                           
000fcc   0efd     MOVLW     0xfd           			return -(in - 127); //Joysticks want to flip direction when > 125             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000fce   cfdb     MOVFF     0xfdb,0x0                                                                                       
000fd0   f000                                                                                                               
000fd2   0efe     MOVLW     0xfe                                                                                            
000fd4   cfdb     MOVFF     0xfdb,0x1                                                                                       
000fd6   f001                                                                                                               
000fd8   0e7f     MOVLW     0x7f                                                                                            
000fda   5e00     SUBWF     0x0,0x1,0x0                                                                                     
000fdc   0e00     MOVLW     0x0                                                                                             
000fde   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
000fe0   6c00     NEGF      0x0,0x0                                                                                         
000fe2   1e01     COMF      0x1,0x1,0x0                                                                                     
000fe4   2201     ADDWFC    0x1,0x1,0x0                                                                                     
000fe6   c000     MOVFF     0x0,0xff3                                                                                       
000fe8   fff3                                                                                                               
000fea   c001     MOVFF     0x1,0xff4                                                                                       
000fec   fff4                                                                                                               
000fee   d00f     BRA       0x100e                                                                                          
000ff0   0efd     MOVLW     0xfd           		return in - 127;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
000ff2   cfdb     MOVFF     0xfdb,0x0                                                                                       
000ff4   f000                                                                                                               
000ff6   0efe     MOVLW     0xfe                                                                                            
000ff8   cfdb     MOVFF     0xfdb,0x1                                                                                       
000ffa   f001                                                                                                               
000ffc   0e7f     MOVLW     0x7f                                                                                            
000ffe   5e00     SUBWF     0x0,0x1,0x0                                                                                     
001000   0e00     MOVLW     0x0                                                                                             
001002   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
001004   c000     MOVFF     0x0,0xff3                                                                                       
001006   fff3                                                                                                               
001008   c001     MOVFF     0x1,0xff4                                                                                       
00100a   fff4                                                                                                               
00100c   d000     BRA       0x100e                                                                                          
00100e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001010   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001012   ffd9                                                                                                               
001014   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001016   cfd9     MOVFF     0xfd9,0xfe6    int abs(int val)                                                                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001018   ffe6                                                                                                               
00101a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00101c   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00101e   0efd     MOVLW     0xfd           	return (val >= 0)?val:-val;                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001020   cfdb     MOVFF     0xfdb,0x2                                                                                       
001022   f002                                                                                                               
001024   0efe     MOVLW     0xfe                                                                                            
001026   cfdb     MOVFF     0xfdb,0x3                                                                                       
001028   f003                                                                                                               
00102a   0100     MOVLB     0x0                                                                                             
00102c   0e80     MOVLW     0x80                                                                                            
00102e   1403     ANDWF     0x3,0x0,0x0                                                                                     
001030   e107     BNZ       0x1040                                                                                          
001032   0efd     MOVLW     0xfd                                                                                            
001034   cfdb     MOVFF     0xfdb,0x0                                                                                       
001036   f000                                                                                                               
001038   0efe     MOVLW     0xfe                                                                                            
00103a   cfdb     MOVFF     0xfdb,0x1                                                                                       
00103c   f001                                                                                                               
00103e   d00a     BRA       0x1054                                                                                          
001040   0efd     MOVLW     0xfd                                                                                            
001042   cfdb     MOVFF     0xfdb,0x0                                                                                       
001044   f000                                                                                                               
001046   0efe     MOVLW     0xfe                                                                                            
001048   cfdb     MOVFF     0xfdb,0x1                                                                                       
00104a   f001                                                                                                               
00104c   6c00     NEGF      0x0,0x0                                                                                         
00104e   1e01     COMF      0x1,0x1,0x0                                                                                     
001050   0e00     MOVLW     0x0                                                                                             
001052   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001054   c000     MOVFF     0x0,0xff3                                                                                       
001056   fff3                                                                                                               
001058   c001     MOVFF     0x1,0xff4                                                                                       
00105a   fff4                                                                                                               
00105c   d000     BRA       0x105e                                                                                          
00105e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001060   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001062   ffd9                                                                                                               
001064   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001066   cfd9     MOVFF     0xfd9,0xfe6    int lim(int input, int limit)		//Limits input value to a range inside + and - limit C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001068   ffe6                                                                                                               
00106a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00106c   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00106e   0efd     MOVLW     0xfd           	if(input > limit)                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001070   cfdb     MOVFF     0xfdb,0x0                                                                                       
001072   f000                                                                                                               
001074   0efe     MOVLW     0xfe                                                                                            
001076   cfdb     MOVFF     0xfdb,0x1                                                                                       
001078   f001                                                                                                               
00107a   0efb     MOVLW     0xfb                                                                                            
00107c   cfdb     MOVFF     0xfdb,0x2                                                                                       
00107e   f002                                                                                                               
001080   0efc     MOVLW     0xfc                                                                                            
001082   cfdb     MOVFF     0xfdb,0x3                                                                                       
001084   f003                                                                                                               
001086   5003     MOVF      0x3,0x0,0x0                                                                                     
001088   1801     XORWF     0x1,0x0,0x0                                                                                     
00108a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00108c   d002     BRA       0x1092                                                                                          
00108e   3401     RLCF      0x1,0x0,0x0                                                                                     
001090   d004     BRA       0x109a                                                                                          
001092   5000     MOVF      0x0,0x0,0x0                                                                                     
001094   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001096   5001     MOVF      0x1,0x0,0x0                                                                                     
001098   5803     SUBWFB    0x3,0x0,0x0                                                                                     
00109a   e20c     BC        0x10b4                                                                                          
00109c   0efb     MOVLW     0xfb           		return limit;                                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00109e   cfdb     MOVFF     0xfdb,0x0                                                                                       
0010a0   f000                                                                                                               
0010a2   0efc     MOVLW     0xfc                                                                                            
0010a4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0010a6   f001                                                                                                               
0010a8   c000     MOVFF     0x0,0xff3                                                                                       
0010aa   fff3                                                                                                               
0010ac   c001     MOVFF     0x1,0xff4                                                                                       
0010ae   fff4                                                                                                               
0010b0   d037     BRA       0x1120                                                                                          
0010b2   d036     BRA       0x1120         	else if(input < -limit)                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0010b4   0efd     MOVLW     0xfd                                                                                            
0010b6   cfdb     MOVFF     0xfdb,0x0                                                                                       
0010b8   f000                                                                                                               
0010ba   0efe     MOVLW     0xfe                                                                                            
0010bc   cfdb     MOVFF     0xfdb,0x1                                                                                       
0010be   f001                                                                                                               
0010c0   0efb     MOVLW     0xfb                                                                                            
0010c2   cfdb     MOVFF     0xfdb,0x2                                                                                       
0010c4   f002                                                                                                               
0010c6   0efc     MOVLW     0xfc                                                                                            
0010c8   cfdb     MOVFF     0xfdb,0x3                                                                                       
0010ca   f003                                                                                                               
0010cc   6c02     NEGF      0x2,0x0                                                                                         
0010ce   1e03     COMF      0x3,0x1,0x0                                                                                     
0010d0   0e00     MOVLW     0x0                                                                                             
0010d2   2203     ADDWFC    0x3,0x1,0x0                                                                                     
0010d4   5001     MOVF      0x1,0x0,0x0                                                                                     
0010d6   1803     XORWF     0x3,0x0,0x0                                                                                     
0010d8   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0010da   d002     BRA       0x10e0                                                                                          
0010dc   3403     RLCF      0x3,0x0,0x0                                                                                     
0010de   d004     BRA       0x10e8                                                                                          
0010e0   5002     MOVF      0x2,0x0,0x0                                                                                     
0010e2   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0010e4   5003     MOVF      0x3,0x0,0x0                                                                                     
0010e6   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0010e8   e210     BC        0x110a                                                                                          
0010ea   0efb     MOVLW     0xfb           		return -limit;                                                                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0010ec   cfdb     MOVFF     0xfdb,0x0                                                                                       
0010ee   f000                                                                                                               
0010f0   0efc     MOVLW     0xfc                                                                                            
0010f2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0010f4   f001                                                                                                               
0010f6   6c00     NEGF      0x0,0x0                                                                                         
0010f8   1e01     COMF      0x1,0x1,0x0                                                                                     
0010fa   0e00     MOVLW     0x0                                                                                             
0010fc   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0010fe   c000     MOVFF     0x0,0xff3                                                                                       
001100   fff3                                                                                                               
001102   c001     MOVFF     0x1,0xff4                                                                                       
001104   fff4                                                                                                               
001106   d00c     BRA       0x1120                                                                                          
001108   d00b     BRA       0x1120         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00110a   0efd     MOVLW     0xfd           		return input;                                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00110c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00110e   f000                                                                                                               
001110   0efe     MOVLW     0xfe                                                                                            
001112   cfdb     MOVFF     0xfdb,0x1                                                                                       
001114   f001                                                                                                               
001116   c000     MOVFF     0x0,0xff3                                                                                       
001118   fff3                                                                                                               
00111a   c001     MOVFF     0x1,0xff4                                                                                       
00111c   fff4                                                                                                               
00111e   d000     BRA       0x1120                                                                                          
001120   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001122   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001124   ffd9                                                                                                               
001126   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001128   cfd9     MOVFF     0xfd9,0xfe6    int turn(int degrees, int vel)		                                                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00112a   ffe6                                                                                                               
00112c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00112e   ffd9                                                                                                               
001130   0e02     MOVLW     0x2                                                                                             
001132   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	int error;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001134   0efd     MOVLW     0xfd           	error = degrees - Get_Gyro_Angle();                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001136   cfdb     MOVFF     0xfdb,0x4                                                                                       
001138   f004                                                                                                               
00113a   0efe     MOVLW     0xfe                                                                                            
00113c   cfdb     MOVFF     0xfdb,0x5                                                                                       
00113e   f005                                                                                                               
001140   6a06     CLRF      0x6,0x0                                                                                         
001142   6a07     CLRF      0x7,0x0                                                                                         
001144   ae05     BTFSS     0x5,0x7,0x0                                                                                     
001146   d002     BRA       0x114c                                                                                          
001148   6806     SETF      0x6,0x0                                                                                         
00114a   6807     SETF      0x7,0x0                                                                                         
00114c   c004     MOVFF     0x4,0xfe6                                                                                       
00114e   ffe6                                                                                                               
001150   c005     MOVFF     0x5,0xfe6                                                                                       
001152   ffe6                                                                                                               
001154   c006     MOVFF     0x6,0xfe6                                                                                       
001156   ffe6                                                                                                               
001158   c007     MOVFF     0x7,0xfe6                                                                                       
00115a   ffe6                                                                                                               
00115c   ec65     CALL      0x4cca,0x0                                                                                      
00115e   f026                                                                                                               
001160   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001162   cfe7     MOVFF     0xfe7,0x7                                                                                       
001164   f007                                                                                                               
001166   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001168   cfe7     MOVFF     0xfe7,0x6                                                                                       
00116a   f006                                                                                                               
00116c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00116e   cfe7     MOVFF     0xfe7,0x5                                                                                       
001170   f005                                                                                                               
001172   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001174   cfe7     MOVFF     0xfe7,0x4                                                                                       
001176   f004                                                                                                               
001178   5034     MOVF      0x34,0x0,0x0                                                                                    
00117a   5c04     SUBWF     0x4,0x0,0x0                                                                                     
00117c   6e00     MOVWF     0x0,0x0                                                                                         
00117e   5035     MOVF      0x35,0x0,0x0                                                                                    
001180   5805     SUBWFB    0x5,0x0,0x0                                                                                     
001182   6e01     MOVWF     0x1,0x0                                                                                         
001184   5036     MOVF      0x36,0x0,0x0                                                                                    
001186   5806     SUBWFB    0x6,0x0,0x0                                                                                     
001188   6e02     MOVWF     0x2,0x0                                                                                         
00118a   5037     MOVF      0x37,0x0,0x0                                                                                    
00118c   5807     SUBWFB    0x7,0x0,0x0                                                                                     
00118e   6e03     MOVWF     0x3,0x0                                                                                         
001190   c000     MOVFF     0x0,0xfde                                                                                       
001192   ffde                                                                                                               
001194   c001     MOVFF     0x1,0xfdd                                                                                       
001196   ffdd                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001198   0e14     MOVLW     0x14           	error = lim(error, 20);                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00119a   6ee6     MOVWF     0xe6,0x0                                                                                        
00119c   6ae6     CLRF      0xe6,0x0                                                                                        
00119e   cfde     MOVFF     0xfde,0xfe6                                                                                     
0011a0   ffe6                                                                                                               
0011a2   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
0011a4   ffe6                                                                                                               
0011a6   df5f     RCALL     0x1066                                                                                          
0011a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011b0   cff3     MOVFF     0xff3,0xfde                                                                                     
0011b2   ffde                                                                                                               
0011b4   cff4     MOVFF     0xff4,0xfdd                                                                                     
0011b6   ffdd                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0011b8   0efb     MOVLW     0xfb           	Left.Vsetpoint  = vel + error;                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0011ba   cfdb     MOVFF     0xfdb,0x0                                                                                       
0011bc   f000                                                                                                               
0011be   0efc     MOVLW     0xfc                                                                                            
0011c0   cfdb     MOVFF     0xfdb,0x1                                                                                       
0011c2   f001                                                                                                               
0011c4   50de     MOVF      0xde,0x0,0x0                                                                                    
0011c6   0100     MOVLB     0x0                                                                                             
0011c8   2400     ADDWF     0x0,0x0,0x0                                                                                     
0011ca   0101     MOVLB     0x1                                                                                             
0011cc   6f86     MOVWF     0x86,0x1                                                                                        
0011ce   50dd     MOVF      0xdd,0x0,0x0                                                                                    
0011d0   0100     MOVLB     0x0                                                                                             
0011d2   2001     ADDWFC    0x1,0x0,0x0                                                                                     
0011d4   0101     MOVLB     0x1                                                                                             
0011d6   6f87     MOVWF     0x87,0x1                                                                                        
0011d8   0efb     MOVLW     0xfb           	Right.Vsetpoint = vel - error;                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0011da   cfdb     MOVFF     0xfdb,0x0                                                                                       
0011dc   f000                                                                                                               
0011de   0efc     MOVLW     0xfc                                                                                            
0011e0   cfdb     MOVFF     0xfdb,0x1                                                                                       
0011e2   f001                                                                                                               
0011e4   0101     MOVLB     0x1                                                                                             
0011e6   50de     MOVF      0xde,0x0,0x0                                                                                    
0011e8   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0011ea   6faa     MOVWF     0xaa,0x1                                                                                        
0011ec   50dd     MOVF      0xdd,0x0,0x0                                                                                    
0011ee   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0011f0   6fab     MOVWF     0xab,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0011f2   cfde     MOVFF     0xfde,0xfe6    	if(abs(error) < 10)                                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0011f4   ffe6                                                                                                               
0011f6   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
0011f8   ffe6                                                                                                               
0011fa   df0d     RCALL     0x1016                                                                                          
0011fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0011fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001200   cff3     MOVFF     0xff3,0x0                                                                                       
001202   f000                                                                                                               
001204   cff4     MOVFF     0xff4,0x1                                                                                       
001206   f001                                                                                                               
001208   90d8     BCF       0xd8,0x0,0x0                                                                                    
00120a   5001     MOVF      0x1,0x0,0x0                                                                                     
00120c   e604     BN        0x1216                                                                                          
00120e   0e0a     MOVLW     0xa                                                                                             
001210   5c00     SUBWF     0x0,0x0,0x0                                                                                     
001212   0e00     MOVLW     0x0                                                                                             
001214   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001216   e205     BC        0x1222                                                                                          
001218   0e01     MOVLW     0x1            		return 1;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00121a   6ef3     MOVWF     0xf3,0x0                                                                                        
00121c   6af4     CLRF      0xf4,0x0                                                                                        
00121e   d004     BRA       0x1228                                                                                          
001220   d003     BRA       0x1228         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001222   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001224   6af4     CLRF      0xf4,0x0                                                                                        
001226   d000     BRA       0x1228                                                                                          
001228   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00122a   ffe1                                                                                                               
00122c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00122e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001230   ffd9                                                                                                               
001232   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001234   cfd9     MOVFF     0xfd9,0xfe6    int checkDistance(long dist, int db)                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001236   ffe6                                                                                                               
001238   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00123a   ffd9                                                                                                               
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00123c   ec2c     CALL      0x5a58,0x0     	if((Get_Encoder_1_Count() + Get_Encoder_2_Count())/2 - dist > db)               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00123e   f02d                                                                                                               
001240   c034     MOVFF     0x34,0x8                                                                                        
001242   f008                                                                                                               
001244   c035     MOVFF     0x35,0x9                                                                                        
001246   f009                                                                                                               
001248   c036     MOVFF     0x36,0xa                                                                                        
00124a   f00a                                                                                                               
00124c   c037     MOVFF     0x37,0xb                                                                                        
00124e   f00b                                                                                                               
001250   c008     MOVFF     0x8,0xfe6                                                                                       
001252   ffe6                                                                                                               
001254   c009     MOVFF     0x9,0xfe6                                                                                       
001256   ffe6                                                                                                               
001258   c00a     MOVFF     0xa,0xfe6                                                                                       
00125a   ffe6                                                                                                               
00125c   c00b     MOVFF     0xb,0xfe6                                                                                       
00125e   ffe6                                                                                                               
001260   ec68     CALL      0x5ad0,0x0                                                                                      
001262   f02d                                                                                                               
001264   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001266   cfe7     MOVFF     0xfe7,0xb                                                                                       
001268   f00b                                                                                                               
00126a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00126c   cfe7     MOVFF     0xfe7,0xa                                                                                       
00126e   f00a                                                                                                               
001270   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001272   cfe7     MOVFF     0xfe7,0x9                                                                                       
001274   f009                                                                                                               
001276   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001278   cfe7     MOVFF     0xfe7,0x8                                                                                       
00127a   f008                                                                                                               
00127c   5008     MOVF      0x8,0x0,0x0                                                                                     
00127e   2434     ADDWF     0x34,0x0,0x0                                                                                    
001280   6e04     MOVWF     0x4,0x0                                                                                         
001282   5009     MOVF      0x9,0x0,0x0                                                                                     
001284   2035     ADDWFC    0x35,0x0,0x0                                                                                    
001286   6e05     MOVWF     0x5,0x0                                                                                         
001288   500a     MOVF      0xa,0x0,0x0                                                                                     
00128a   2036     ADDWFC    0x36,0x0,0x0                                                                                    
00128c   6e06     MOVWF     0x6,0x0                                                                                         
00128e   500b     MOVF      0xb,0x0,0x0                                                                                     
001290   2037     ADDWFC    0x37,0x0,0x0                                                                                    
001292   6e07     MOVWF     0x7,0x0                                                                                         
001294   0e02     MOVLW     0x2                                                                                             
001296   6e39     MOVWF     0x39,0x0                                                                                        
001298   6a3a     CLRF      0x3a,0x0                                                                                        
00129a   6a3b     CLRF      0x3b,0x0                                                                                        
00129c   6a3c     CLRF      0x3c,0x0                                                                                        
00129e   c004     MOVFF     0x4,0x34                                                                                        
0012a0   f034                                                                                                               
0012a2   c005     MOVFF     0x5,0x35                                                                                        
0012a4   f035                                                                                                               
0012a6   c006     MOVFF     0x6,0x36                                                                                        
0012a8   f036                                                                                                               
0012aa   c007     MOVFF     0x7,0x37                                                                                        
0012ac   f037                                                                                                               
0012ae   ec65     CALL      0x3eca,0x0                                                                                      
0012b0   f01f                                                                                                               
0012b2   c034     MOVFF     0x34,0x4                                                                                        
0012b4   f004                                                                                                               
0012b6   c035     MOVFF     0x35,0x5                                                                                        
0012b8   f005                                                                                                               
0012ba   c036     MOVFF     0x36,0x6                                                                                        
0012bc   f006                                                                                                               
0012be   c037     MOVFF     0x37,0x7                                                                                        
0012c0   f007                                                                                                               
0012c2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0012c4   0ffb     ADDLW     0xfb                                                                                            
0012c6   6ee9     MOVWF     0xe9,0x0                                                                                        
0012c8   0eff     MOVLW     0xff                                                                                            
0012ca   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0012cc   6eea     MOVWF     0xea,0x0                                                                                        
0012ce   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012d0   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0012d2   6e00     MOVWF     0x0,0x0                                                                                         
0012d4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012d6   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0012d8   6e01     MOVWF     0x1,0x0                                                                                         
0012da   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012dc   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0012de   6e02     MOVWF     0x2,0x0                                                                                         
0012e0   50ee     MOVF      0xee,0x0,0x0                                                                                    
0012e2   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0012e4   6e03     MOVWF     0x3,0x0                                                                                         
0012e6   0ef9     MOVLW     0xf9                                                                                            
0012e8   cfdb     MOVFF     0xfdb,0xc                                                                                       
0012ea   f00c                                                                                                               
0012ec   0efa     MOVLW     0xfa                                                                                            
0012ee   cfdb     MOVFF     0xfdb,0xd                                                                                       
0012f0   f00d                                                                                                               
0012f2   6a0e     CLRF      0xe,0x0                                                                                         
0012f4   6a0f     CLRF      0xf,0x0                                                                                         
0012f6   ae0d     BTFSS     0xd,0x7,0x0                                                                                     
0012f8   d002     BRA       0x12fe                                                                                          
0012fa   680e     SETF      0xe,0x0                                                                                         
0012fc   680f     SETF      0xf,0x0                                                                                         
0012fe   500f     MOVF      0xf,0x0,0x0                                                                                     
001300   1803     XORWF     0x3,0x0,0x0                                                                                     
001302   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001304   d002     BRA       0x130a                                                                                          
001306   3403     RLCF      0x3,0x0,0x0                                                                                     
001308   d008     BRA       0x131a                                                                                          
00130a   5000     MOVF      0x0,0x0,0x0                                                                                     
00130c   5c0c     SUBWF     0xc,0x0,0x0                                                                                     
00130e   5001     MOVF      0x1,0x0,0x0                                                                                     
001310   580d     SUBWFB    0xd,0x0,0x0                                                                                     
001312   5002     MOVF      0x2,0x0,0x0                                                                                     
001314   580e     SUBWFB    0xe,0x0,0x0                                                                                     
001316   5003     MOVF      0x3,0x0,0x0                                                                                     
001318   580f     SUBWFB    0xf,0x0,0x0                                                                                     
00131a   e205     BC        0x1326                                                                                          
00131c   0e01     MOVLW     0x1            		return 1;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00131e   6ef3     MOVWF     0xf3,0x0                                                                                        
001320   6af4     CLRF      0xf4,0x0                                                                                        
001322   d004     BRA       0x132c                                                                                          
001324   d003     BRA       0x132c         	else                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001326   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001328   6af4     CLRF      0xf4,0x0                                                                                        
00132a   d000     BRA       0x132c                                                                                          
00132c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00132e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001330   ffd9                                                                                                               
001332   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001334   cfd9     MOVFF     0xfd9,0xfe6    void configTerminal(void)                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001336   ffe6                                                                                                               
001338   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00133a   ffd9                                                                                                               
00133c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	unsigned char character;                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static char debugMode = 0;                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static char debugChar = 'c';                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static char delayCount = 0;                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static char KpSpeed = 0;                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static int *KpL = &Left.Kvpls;                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	static int *KpR = &Right.Kvpls;                                                 C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00133e   ecae     CALL      0x4f5c,0x0     	while(Serial_Port_One_Byte_Count() > 0)                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001340   f027                                                                                                               
001342   0800     SUBLW     0x0                                                                                             
001344   e301     BNC       0x1348                                                                                          
001346   d13c     BRA       0x15c0                                                                                          
0015be   d6bf     BRA       0x133e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001348   ecce     CALL      0x4f9c,0x0     		character = Read_Serial_Port_One();                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00134a   f027                                                                                                               
00134c   6edf     MOVWF     0xdf,0x0                                                                                        
00134e   50df     MOVF      0xdf,0x0,0x0   		switch(character)                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001350   0a63     XORLW     0x63                                                                                            
001352   e101     BNZ       0x1356                                                                                          
001354   d124     BRA       0x159e                                                                                          
001356   0a12     XORLW     0x12                                                                                            
001358   e101     BNZ       0x135c                                                                                          
00135a   d0e5     BRA       0x1526                                                                                          
00135c   0a1d     XORLW     0x1d                                                                                            
00135e   e101     BNZ       0x1362                                                                                          
001360   d0c0     BRA       0x14e2                                                                                          
001362   0a1f     XORLW     0x1f                                                                                            
001364   e101     BNZ       0x1368                                                                                          
001366   d091     BRA       0x148a                                                                                          
001368   0a17     XORLW     0x17                                                                                            
00136a   e063     BZ        0x1432                                                                                          
00136c   0a0b     XORLW     0xb                                                                                             
00136e   e032     BZ        0x13d4                                                                                          
001370   0a1f     XORLW     0x1f                                                                                            
001372   e001     BZ        0x1376                                                                                          
001374   d11c     BRA       0x15ae                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'p':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001376   c2ce     MOVFF     0x2ce,0xfe9    				(*KpL)++;                                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001378   ffe9                                                                                                               
00137a   c2cf     MOVFF     0x2cf,0xfea                                                                                     
00137c   ffea                                                                                                               
00137e   2aee     INCF      0xee,0x1,0x0                                                                                    
001380   0e00     MOVLW     0x0                                                                                             
001382   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
001384   c2d0     MOVFF     0x2d0,0xfe9    				(*KpR)++;                                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001386   ffe9                                                                                                               
001388   c2d1     MOVFF     0x2d1,0xfea                                                                                     
00138a   ffea                                                                                                               
00138c   2aee     INCF      0xee,0x1,0x0                                                                                    
00138e   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
001390   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001392   ffe6                                                                                                               
001394   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
001396   ffe6                                                                                                               
001398   c19e     MOVFF     0x19e,0xfe6                                                                                     
00139a   ffe6                                                                                                               
00139c   c19f     MOVFF     0x19f,0xfe6                                                                                     
00139e   ffe6                                                                                                               
0013a0   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
0013a2   ffe9                                                                                                               
0013a4   c2cf     MOVFF     0x2cf,0xfea                                                                                     
0013a6   ffea                                                                                                               
0013a8   cfee     MOVFF     0xfee,0xfe6                                                                                     
0013aa   ffe6                                                                                                               
0013ac   cfef     MOVFF     0xfef,0xfe6                                                                                     
0013ae   ffe6                                                                                                               
0013b0   0e9c     MOVLW     0x9c                                                                                            
0013b2   6e00     MOVWF     0x0,0x0                                                                                         
0013b4   0e53     MOVLW     0x53                                                                                            
0013b6   6e01     MOVWF     0x1,0x0                                                                                         
0013b8   6a02     CLRF      0x2,0x0                                                                                         
0013ba   c000     MOVFF     0x0,0xfe6                                                                                       
0013bc   ffe6                                                                                                               
0013be   c001     MOVFF     0x1,0xfe6                                                                                       
0013c0   ffe6                                                                                                               
0013c2   c002     MOVFF     0x2,0xfe6                                                                                       
0013c4   ffe6                                                                                                               
0013c6   ecf3     CALL      0x5be6,0x0                                                                                      
0013c8   f02d                                                                                                               
0013ca   6ef5     MOVWF     0xf5,0x0                                                                                        
0013cc   0e09     MOVLW     0x9                                                                                             
0013ce   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0013d0   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0013d2   d0ed     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'o':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0013d4   c2ce     MOVFF     0x2ce,0xfe9    				(*KpL)--;                                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0013d6   ffe9                                                                                                               
0013d8   c2cf     MOVFF     0x2cf,0xfea                                                                                     
0013da   ffea                                                                                                               
0013dc   06ee     DECF      0xee,0x1,0x0                                                                                    
0013de   0e00     MOVLW     0x0                                                                                             
0013e0   5aef     SUBWFB    0xef,0x1,0x0                                                                                    
0013e2   c2d0     MOVFF     0x2d0,0xfe9    				(*KpR)--;                                                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0013e4   ffe9                                                                                                               
0013e6   c2d1     MOVFF     0x2d1,0xfea                                                                                     
0013e8   ffea                                                                                                               
0013ea   06ee     DECF      0xee,0x1,0x0                                                                                    
0013ec   5aef     SUBWFB    0xef,0x1,0x0                                                                                    
0013ee   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0013f0   ffe6                                                                                                               
0013f2   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
0013f4   ffe6                                                                                                               
0013f6   c19e     MOVFF     0x19e,0xfe6                                                                                     
0013f8   ffe6                                                                                                               
0013fa   c19f     MOVFF     0x19f,0xfe6                                                                                     
0013fc   ffe6                                                                                                               
0013fe   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
001400   ffe9                                                                                                               
001402   c2cf     MOVFF     0x2cf,0xfea                                                                                     
001404   ffea                                                                                                               
001406   cfee     MOVFF     0xfee,0xfe6                                                                                     
001408   ffe6                                                                                                               
00140a   cfef     MOVFF     0xfef,0xfe6                                                                                     
00140c   ffe6                                                                                                               
00140e   0e9c     MOVLW     0x9c                                                                                            
001410   6e00     MOVWF     0x0,0x0                                                                                         
001412   0e53     MOVLW     0x53                                                                                            
001414   6e01     MOVWF     0x1,0x0                                                                                         
001416   6a02     CLRF      0x2,0x0                                                                                         
001418   c000     MOVFF     0x0,0xfe6                                                                                       
00141a   ffe6                                                                                                               
00141c   c001     MOVFF     0x1,0xfe6                                                                                       
00141e   ffe6                                                                                                               
001420   c002     MOVFF     0x2,0xfe6                                                                                       
001422   ffe6                                                                                                               
001424   ecf3     CALL      0x5be6,0x0                                                                                      
001426   f02d                                                                                                               
001428   6ef5     MOVWF     0xf5,0x0                                                                                        
00142a   0e09     MOVLW     0x9                                                                                             
00142c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00142e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001430   d0be     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'd':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001432   0e05     MOVLW     0x5            				Left.Kd  += 5;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001434   0101     MOVLB     0x1                                                                                             
001436   279e     ADDWF     0x9e,0x1,0x1                                                                                    
001438   0e00     MOVLW     0x0                                                                                             
00143a   239f     ADDWFC    0x9f,0x1,0x1                                                                                    
00143c   0e05     MOVLW     0x5            				Right.Kd += 5;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00143e   0101     MOVLB     0x1                                                                                             
001440   27c2     ADDWF     0xc2,0x1,0x1                                                                                    
001442   0e00     MOVLW     0x0                                                                                             
001444   23c3     ADDWFC    0xc3,0x1,0x1                                                                                    
001446   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001448   ffe6                                                                                                               
00144a   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
00144c   ffe6                                                                                                               
00144e   c19e     MOVFF     0x19e,0xfe6                                                                                     
001450   ffe6                                                                                                               
001452   c19f     MOVFF     0x19f,0xfe6                                                                                     
001454   ffe6                                                                                                               
001456   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
001458   ffe9                                                                                                               
00145a   c2cf     MOVFF     0x2cf,0xfea                                                                                     
00145c   ffea                                                                                                               
00145e   cfee     MOVFF     0xfee,0xfe6                                                                                     
001460   ffe6                                                                                                               
001462   cfef     MOVFF     0xfef,0xfe6                                                                                     
001464   ffe6                                                                                                               
001466   0e9c     MOVLW     0x9c                                                                                            
001468   6e00     MOVWF     0x0,0x0                                                                                         
00146a   0e53     MOVLW     0x53                                                                                            
00146c   6e01     MOVWF     0x1,0x0                                                                                         
00146e   6a02     CLRF      0x2,0x0                                                                                         
001470   c000     MOVFF     0x0,0xfe6                                                                                       
001472   ffe6                                                                                                               
001474   c001     MOVFF     0x1,0xfe6                                                                                       
001476   ffe6                                                                                                               
001478   c002     MOVFF     0x2,0xfe6                                                                                       
00147a   ffe6                                                                                                               
00147c   ecf3     CALL      0x5be6,0x0                                                                                      
00147e   f02d                                                                                                               
001480   6ef5     MOVWF     0xf5,0x0                                                                                        
001482   0e09     MOVLW     0x9                                                                                             
001484   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001486   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001488   d092     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 's':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00148a   0e05     MOVLW     0x5            				Left.Kd  -= 5;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00148c   0101     MOVLB     0x1                                                                                             
00148e   5f9e     SUBWF     0x9e,0x1,0x1                                                                                    
001490   0e00     MOVLW     0x0                                                                                             
001492   5b9f     SUBWFB    0x9f,0x1,0x1                                                                                    
001494   0e05     MOVLW     0x5            				Right.Kd -= 5;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001496   0101     MOVLB     0x1                                                                                             
001498   5fc2     SUBWF     0xc2,0x1,0x1                                                                                    
00149a   0e00     MOVLW     0x0                                                                                             
00149c   5bc3     SUBWFB    0xc3,0x1,0x1                                                                                    
00149e   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0014a0   ffe6                                                                                                               
0014a2   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
0014a4   ffe6                                                                                                               
0014a6   c19e     MOVFF     0x19e,0xfe6                                                                                     
0014a8   ffe6                                                                                                               
0014aa   c19f     MOVFF     0x19f,0xfe6                                                                                     
0014ac   ffe6                                                                                                               
0014ae   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
0014b0   ffe9                                                                                                               
0014b2   c2cf     MOVFF     0x2cf,0xfea                                                                                     
0014b4   ffea                                                                                                               
0014b6   cfee     MOVFF     0xfee,0xfe6                                                                                     
0014b8   ffe6                                                                                                               
0014ba   cfef     MOVFF     0xfef,0xfe6                                                                                     
0014bc   ffe6                                                                                                               
0014be   0e9c     MOVLW     0x9c                                                                                            
0014c0   6e00     MOVWF     0x0,0x0                                                                                         
0014c2   0e53     MOVLW     0x53                                                                                            
0014c4   6e01     MOVWF     0x1,0x0                                                                                         
0014c6   6a02     CLRF      0x2,0x0                                                                                         
0014c8   c000     MOVFF     0x0,0xfe6                                                                                       
0014ca   ffe6                                                                                                               
0014cc   c001     MOVFF     0x1,0xfe6                                                                                       
0014ce   ffe6                                                                                                               
0014d0   c002     MOVFF     0x2,0xfe6                                                                                       
0014d2   ffe6                                                                                                               
0014d4   ecf3     CALL      0x5be6,0x0                                                                                      
0014d6   f02d                                                                                                               
0014d8   6ef5     MOVWF     0xf5,0x0                                                                                        
0014da   0e09     MOVLW     0x9                                                                                             
0014dc   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0014de   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0014e0   d066     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'l':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0014e2   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0014e4   ffe6                                                                                                               
0014e6   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
0014e8   ffe6                                                                                                               
0014ea   c19e     MOVFF     0x19e,0xfe6                                                                                     
0014ec   ffe6                                                                                                               
0014ee   c19f     MOVFF     0x19f,0xfe6                                                                                     
0014f0   ffe6                                                                                                               
0014f2   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
0014f4   ffe9                                                                                                               
0014f6   c2cf     MOVFF     0x2cf,0xfea                                                                                     
0014f8   ffea                                                                                                               
0014fa   cfee     MOVFF     0xfee,0xfe6                                                                                     
0014fc   ffe6                                                                                                               
0014fe   cfef     MOVFF     0xfef,0xfe6                                                                                     
001500   ffe6                                                                                                               
001502   0e9c     MOVLW     0x9c                                                                                            
001504   6e00     MOVWF     0x0,0x0                                                                                         
001506   0e53     MOVLW     0x53                                                                                            
001508   6e01     MOVWF     0x1,0x0                                                                                         
00150a   6a02     CLRF      0x2,0x0                                                                                         
00150c   c000     MOVFF     0x0,0xfe6                                                                                       
00150e   ffe6                                                                                                               
001510   c001     MOVFF     0x1,0xfe6                                                                                       
001512   ffe6                                                                                                               
001514   c002     MOVFF     0x2,0xfe6                                                                                       
001516   ffe6                                                                                                               
001518   ecf3     CALL      0x5be6,0x0                                                                                      
00151a   f02d                                                                                                               
00151c   6ef5     MOVWF     0xf5,0x0                                                                                        
00151e   0e09     MOVLW     0x9                                                                                             
001520   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001522   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001524   d044     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'q':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001526   0102     MOVLB     0x2            				KpSpeed = !KpSpeed;                                                          C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001528   51cd     MOVF      0xcd,0x0,0x1                                                                                    
00152a   e002     BZ        0x1530                                                                                          
00152c   0e00     MOVLW     0x0                                                                                             
00152e   d001     BRA       0x1532                                                                                          
001530   0e01     MOVLW     0x1                                                                                             
001532   6fcd     MOVWF     0xcd,0x1                                                                                        
001534   51cd     MOVF      0xcd,0x0,0x1   				if(KpSpeed)                                                                  C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001536   e009     BZ        0x154a                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001538   0e9a     MOVLW     0x9a           					KpL = &Left.Kvphs;                                                          C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00153a   6fce     MOVWF     0xce,0x1                                                                                        
00153c   0e01     MOVLW     0x1                                                                                             
00153e   6fcf     MOVWF     0xcf,0x1                                                                                        
001540   0ebe     MOVLW     0xbe           					KpR = &Right.Kvphs;                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001542   6fd0     MOVWF     0xd0,0x1                                                                                        
001544   0e01     MOVLW     0x1                                                                                             
001546   6fd1     MOVWF     0xd1,0x1                                                                                        
001548   d008     BRA       0x155a         				} else {                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00154a   0e98     MOVLW     0x98           					KpL = &Left.Kvpls;                                                          C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00154c   6fce     MOVWF     0xce,0x1                                                                                        
00154e   0e01     MOVLW     0x1                                                                                             
001550   6fcf     MOVWF     0xcf,0x1                                                                                        
001552   0ebc     MOVLW     0xbc           					KpR = &Right.Kvpls;                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001554   6fd0     MOVWF     0xd0,0x1                                                                                        
001556   0e01     MOVLW     0x1                                                                                             
001558   6fd1     MOVWF     0xd1,0x1                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00155a   c1a2     MOVFF     0x1a2,0xfe6    				printf("Kvp:%d Kd:%d Ko:%d\r\n", *KpL, Left.Kd, Left.Ko);                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00155c   ffe6                                                                                                               
00155e   c1a3     MOVFF     0x1a3,0xfe6                                                                                     
001560   ffe6                                                                                                               
001562   c19e     MOVFF     0x19e,0xfe6                                                                                     
001564   ffe6                                                                                                               
001566   c19f     MOVFF     0x19f,0xfe6                                                                                     
001568   ffe6                                                                                                               
00156a   c2ce     MOVFF     0x2ce,0xfe9                                                                                     
00156c   ffe9                                                                                                               
00156e   c2cf     MOVFF     0x2cf,0xfea                                                                                     
001570   ffea                                                                                                               
001572   cfee     MOVFF     0xfee,0xfe6                                                                                     
001574   ffe6                                                                                                               
001576   cfef     MOVFF     0xfef,0xfe6                                                                                     
001578   ffe6                                                                                                               
00157a   0e9c     MOVLW     0x9c                                                                                            
00157c   6e00     MOVWF     0x0,0x0                                                                                         
00157e   0e53     MOVLW     0x53                                                                                            
001580   6e01     MOVWF     0x1,0x0                                                                                         
001582   6a02     CLRF      0x2,0x0                                                                                         
001584   c000     MOVFF     0x0,0xfe6                                                                                       
001586   ffe6                                                                                                               
001588   c001     MOVFF     0x1,0xfe6                                                                                       
00158a   ffe6                                                                                                               
00158c   c002     MOVFF     0x2,0xfe6                                                                                       
00158e   ffe6                                                                                                               
001590   ecf3     CALL      0x5be6,0x0                                                                                      
001592   f02d                                                                                                               
001594   6ef5     MOVWF     0xf5,0x0                                                                                        
001596   0e09     MOVLW     0x9                                                                                             
001598   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00159a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00159c   d008     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			                                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'c':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00159e   0102     MOVLB     0x2            				if(debugMode)                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015a0   51ca     MOVF      0xca,0x0,0x1                                                                                    
0015a2   e002     BZ        0x15a8                                                                                          
0015a4   6bca     CLRF      0xca,0x1       					debugMode = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015a6   d002     BRA       0x15ac         				else                                                                         C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015a8   0e01     MOVLW     0x1            					debugMode = 1;                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015aa   6fca     MOVWF     0xca,0x1                                                                                        
0015ac   d000     BRA       0x15ae         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015ae   0e0d     MOVLW     0xd            		if(character != '\r\n' && character != 'c')                                    C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0015b2   e005     BZ        0x15be                                                                                          
0015b4   0e63     MOVLW     0x63                                                                                            
0015b6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0015b8   e002     BZ        0x15be                                                                                          
0015ba   cfdf     MOVFF     0xfdf,0x2cb    			debugChar = character;                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015bc   f2cb                                                                                                               
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015c0   0102     MOVLB     0x2            	if(debugMode)                                                                   C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015c2   51ca     MOVF      0xca,0x0,0x1                                                                                    
0015c4   e101     BNZ       0x15c8                                                                                          
0015c6   d12b     BRA       0x181e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015c8   51cb     MOVF      0xcb,0x0,0x1   		switch(debugChar)                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015ca   0a67     XORLW     0x67                                                                                            
0015cc   e101     BNZ       0x15d0                                                                                          
0015ce   d0e9     BRA       0x17a2                                                                                          
0015d0   0a10     XORLW     0x10                                                                                            
0015d2   e101     BNZ       0x15d6                                                                                          
0015d4   d0af     BRA       0x1734                                                                                          
0015d6   0a06     XORLW     0x6                                                                                             
0015d8   e101     BNZ       0x15dc                                                                                          
0015da   d081     BRA       0x16de                                                                                          
0015dc   0a1b     XORLW     0x1b                                                                                            
0015de   e05a     BZ        0x1694                                                                                          
0015e0   0a07     XORLW     0x7                                                                                             
0015e2   e013     BZ        0x160a                                                                                          
                                           		{	                                                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'm':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00160a   0102     MOVLB     0x2            				printf("Enc1:%ld Enc2:%ld LVSet:%d RVSet:%d LDr:%d RDr:%d\r\n", Get_Encoder_1_Count(), Get_Encoder_2_Count(), Left.Vsetpoint, Right.Vsetpoint, pwm15, pwm13); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00160c   5110     MOVF      0x10,0x0,0x1                                                                                    
00160e   6ee6     MOVWF     0xe6,0x0                                                                                        
001610   6ae6     CLRF      0xe6,0x0                                                                                        
001612   5112     MOVF      0x12,0x0,0x1                                                                                    
001614   6ee6     MOVWF     0xe6,0x0                                                                                        
001616   6ae6     CLRF      0xe6,0x0                                                                                        
001618   c1aa     MOVFF     0x1aa,0xfe6                                                                                     
00161a   ffe6                                                                                                               
00161c   c1ab     MOVFF     0x1ab,0xfe6                                                                                     
00161e   ffe6                                                                                                               
001620   c186     MOVFF     0x186,0xfe6                                                                                     
001622   ffe6                                                                                                               
001624   c187     MOVFF     0x187,0xfe6                                                                                     
001626   ffe6                                                                                                               
001628   ec68     CALL      0x5ad0,0x0                                                                                      
00162a   f02d                                                                                                               
00162c   c034     MOVFF     0x34,0x0                                                                                        
00162e   f000                                                                                                               
001630   c035     MOVFF     0x35,0x1                                                                                        
001632   f001                                                                                                               
001634   c036     MOVFF     0x36,0x2                                                                                        
001636   f002                                                                                                               
001638   c037     MOVFF     0x37,0x3                                                                                        
00163a   f003                                                                                                               
00163c   c000     MOVFF     0x0,0xfe6                                                                                       
00163e   ffe6                                                                                                               
001640   c001     MOVFF     0x1,0xfe6                                                                                       
001642   ffe6                                                                                                               
001644   c002     MOVFF     0x2,0xfe6                                                                                       
001646   ffe6                                                                                                               
001648   c003     MOVFF     0x3,0xfe6                                                                                       
00164a   ffe6                                                                                                               
00164c   ec2c     CALL      0x5a58,0x0                                                                                      
00164e   f02d                                                                                                               
001650   c034     MOVFF     0x34,0x4                                                                                        
001652   f004                                                                                                               
001654   c035     MOVFF     0x35,0x5                                                                                        
001656   f005                                                                                                               
001658   c036     MOVFF     0x36,0x6                                                                                        
00165a   f006                                                                                                               
00165c   c037     MOVFF     0x37,0x7                                                                                        
00165e   f007                                                                                                               
001660   c004     MOVFF     0x4,0xfe6                                                                                       
001662   ffe6                                                                                                               
001664   c005     MOVFF     0x5,0xfe6                                                                                       
001666   ffe6                                                                                                               
001668   c006     MOVFF     0x6,0xfe6                                                                                       
00166a   ffe6                                                                                                               
00166c   c007     MOVFF     0x7,0xfe6                                                                                       
00166e   ffe6                                                                                                               
001670   0e68     MOVLW     0x68                                                                                            
001672   6e08     MOVWF     0x8,0x0                                                                                         
001674   0e53     MOVLW     0x53                                                                                            
001676   6e09     MOVWF     0x9,0x0                                                                                         
001678   6a0a     CLRF      0xa,0x0                                                                                         
00167a   c008     MOVFF     0x8,0xfe6                                                                                       
00167c   ffe6                                                                                                               
00167e   c009     MOVFF     0x9,0xfe6                                                                                       
001680   ffe6                                                                                                               
001682   c00a     MOVFF     0xa,0xfe6                                                                                       
001684   ffe6                                                                                                               
001686   ecf3     CALL      0x5be6,0x0                                                                                      
001688   f02d                                                                                                               
00168a   6ef5     MOVWF     0xf5,0x0                                                                                        
00168c   0e13     MOVLW     0x13                                                                                            
00168e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001690   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001692   d0c5     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'j':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001694   0102     MOVLB     0x2            				printf("p1x:%d p1y:%d p2x:%d p2y:%d p3x%d p3y%d\r\n", p1_x, p1_y, p2_x, p2_y, p3_x, p3_y); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001696   5128     MOVF      0x28,0x0,0x1                                                                                    
001698   6ee6     MOVWF     0xe6,0x0                                                                                        
00169a   6ae6     CLRF      0xe6,0x0                                                                                        
00169c   512c     MOVF      0x2c,0x0,0x1                                                                                    
00169e   6ee6     MOVWF     0xe6,0x0                                                                                        
0016a0   6ae6     CLRF      0xe6,0x0                                                                                        
0016a2   5127     MOVF      0x27,0x0,0x1                                                                                    
0016a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0016a6   6ae6     CLRF      0xe6,0x0                                                                                        
0016a8   512b     MOVF      0x2b,0x0,0x1                                                                                    
0016aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0016ac   6ae6     CLRF      0xe6,0x0                                                                                        
0016ae   5126     MOVF      0x26,0x0,0x1                                                                                    
0016b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0016b2   6ae6     CLRF      0xe6,0x0                                                                                        
0016b4   512a     MOVF      0x2a,0x0,0x1                                                                                    
0016b6   6ee6     MOVWF     0xe6,0x0                                                                                        
0016b8   6ae6     CLRF      0xe6,0x0                                                                                        
0016ba   0e3e     MOVLW     0x3e                                                                                            
0016bc   6e00     MOVWF     0x0,0x0                                                                                         
0016be   0e53     MOVLW     0x53                                                                                            
0016c0   6e01     MOVWF     0x1,0x0                                                                                         
0016c2   6a02     CLRF      0x2,0x0                                                                                         
0016c4   c000     MOVFF     0x0,0xfe6                                                                                       
0016c6   ffe6                                                                                                               
0016c8   c001     MOVFF     0x1,0xfe6                                                                                       
0016ca   ffe6                                                                                                               
0016cc   c002     MOVFF     0x2,0xfe6                                                                                       
0016ce   ffe6                                                                                                               
0016d0   ecf3     CALL      0x5be6,0x0                                                                                      
0016d2   f02d                                                                                                               
0016d4   6ef5     MOVWF     0xf5,0x0                                                                                        
0016d6   0e0f     MOVLW     0xf                                                                                             
0016d8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0016da   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0016dc   d0a0     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'q':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0016de   0102     MOVLB     0x2            				printf("trig:%d top:%d aux1:%d aux2:%d\r\n", p3_sw_trig, p3_sw_top, p3_sw_aux1, p3_sw_aux2); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0016e0   5122     MOVF      0x22,0x0,0x1                                                                                    
0016e2   0b80     ANDLW     0x80                                                                                            
0016e4   e001     BZ        0x16e8                                                                                          
0016e6   0e01     MOVLW     0x1                                                                                             
0016e8   6ee6     MOVWF     0xe6,0x0                                                                                        
0016ea   6ae6     CLRF      0xe6,0x0                                                                                        
0016ec   5122     MOVF      0x22,0x0,0x1                                                                                    
0016ee   0b40     ANDLW     0x40                                                                                            
0016f0   e001     BZ        0x16f4                                                                                          
0016f2   0e01     MOVLW     0x1                                                                                             
0016f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0016f6   6ae6     CLRF      0xe6,0x0                                                                                        
0016f8   5122     MOVF      0x22,0x0,0x1                                                                                    
0016fa   0b20     ANDLW     0x20                                                                                            
0016fc   e001     BZ        0x1700                                                                                          
0016fe   0e01     MOVLW     0x1                                                                                             
001700   6ee6     MOVWF     0xe6,0x0                                                                                        
001702   6ae6     CLRF      0xe6,0x0                                                                                        
001704   5122     MOVF      0x22,0x0,0x1                                                                                    
001706   0b10     ANDLW     0x10                                                                                            
001708   e001     BZ        0x170c                                                                                          
00170a   0e01     MOVLW     0x1                                                                                             
00170c   6ee6     MOVWF     0xe6,0x0                                                                                        
00170e   6ae6     CLRF      0xe6,0x0                                                                                        
001710   0e1d     MOVLW     0x1d                                                                                            
001712   6e00     MOVWF     0x0,0x0                                                                                         
001714   0e53     MOVLW     0x53                                                                                            
001716   6e01     MOVWF     0x1,0x0                                                                                         
001718   6a02     CLRF      0x2,0x0                                                                                         
00171a   c000     MOVFF     0x0,0xfe6                                                                                       
00171c   ffe6                                                                                                               
00171e   c001     MOVFF     0x1,0xfe6                                                                                       
001720   ffe6                                                                                                               
001722   c002     MOVFF     0x2,0xfe6                                                                                       
001724   ffe6                                                                                                               
001726   ecf3     CALL      0x5be6,0x0                                                                                      
001728   f02d                                                                                                               
00172a   6ef5     MOVWF     0xf5,0x0                                                                                        
00172c   0e0b     MOVLW     0xb                                                                                             
00172e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001730   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001732   d075     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'w':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001734   0102     MOVLB     0x2            				printf("Relay2Fwd:%d Relay2Rev:%d Relay3Fwd:%d Relay3Rev:%d p3_sw_trig:%d p3_sw_top:%d\r\n", relay2_fwd, relay2_rev, relay3_fwd, relay3_rev, p3_sw_trig, p3_sw_top); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001736   5122     MOVF      0x22,0x0,0x1                                                                                    
001738   0b20     ANDLW     0x20                                                                                            
00173a   e001     BZ        0x173e                                                                                          
00173c   0e01     MOVLW     0x1                                                                                             
00173e   6ee6     MOVWF     0xe6,0x0                                                                                        
001740   6ae6     CLRF      0xe6,0x0                                                                                        
001742   5122     MOVF      0x22,0x0,0x1                                                                                    
001744   0b10     ANDLW     0x10                                                                                            
001746   e001     BZ        0x174a                                                                                          
001748   0e01     MOVLW     0x1                                                                                             
00174a   6ee6     MOVWF     0xe6,0x0                                                                                        
00174c   6ae6     CLRF      0xe6,0x0                                                                                        
00174e   508c     MOVF      0x8c,0x0,0x0                                                                                    
001750   0b04     ANDLW     0x4                                                                                             
001752   e001     BZ        0x1756                                                                                          
001754   0e01     MOVLW     0x1                                                                                             
001756   6ee6     MOVWF     0xe6,0x0                                                                                        
001758   6ae6     CLRF      0xe6,0x0                                                                                        
00175a   508d     MOVF      0x8d,0x0,0x0                                                                                    
00175c   0b04     ANDLW     0x4                                                                                             
00175e   e001     BZ        0x1762                                                                                          
001760   0e01     MOVLW     0x1                                                                                             
001762   6ee6     MOVWF     0xe6,0x0                                                                                        
001764   6ae6     CLRF      0xe6,0x0                                                                                        
001766   508c     MOVF      0x8c,0x0,0x0                                                                                    
001768   0b02     ANDLW     0x2                                                                                             
00176a   e001     BZ        0x176e                                                                                          
00176c   0e01     MOVLW     0x1                                                                                             
00176e   6ee6     MOVWF     0xe6,0x0                                                                                        
001770   6ae6     CLRF      0xe6,0x0                                                                                        
001772   508d     MOVF      0x8d,0x0,0x0                                                                                    
001774   0b02     ANDLW     0x2                                                                                             
001776   e001     BZ        0x177a                                                                                          
001778   0e01     MOVLW     0x1                                                                                             
00177a   6ee6     MOVWF     0xe6,0x0                                                                                        
00177c   6ae6     CLRF      0xe6,0x0                                                                                        
00177e   0ecc     MOVLW     0xcc                                                                                            
001780   6e00     MOVWF     0x0,0x0                                                                                         
001782   0e52     MOVLW     0x52                                                                                            
001784   6e01     MOVWF     0x1,0x0                                                                                         
001786   6a02     CLRF      0x2,0x0                                                                                         
001788   c000     MOVFF     0x0,0xfe6                                                                                       
00178a   ffe6                                                                                                               
00178c   c001     MOVFF     0x1,0xfe6                                                                                       
00178e   ffe6                                                                                                               
001790   c002     MOVFF     0x2,0xfe6                                                                                       
001792   ffe6                                                                                                               
001794   ecf3     CALL      0x5be6,0x0                                                                                      
001796   f02d                                                                                                               
001798   6ef5     MOVWF     0xf5,0x0                                                                                        
00179a   0e0f     MOVLW     0xf                                                                                             
00179c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00179e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0017a0   d03e     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			case 'g':                                                                     C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0017a2   2bcc     INCF      0xcc,0x1,0x1   				if(++delayCount == 10)                                                       C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0017a4   0e0a     MOVLW     0xa                                                                                             
0017a6   5dcc     SUBWF     0xcc,0x0,0x1                                                                                    
0017a8   e139     BNZ       0x181c                                                                                          
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0017aa   ec65     CALL      0x4cca,0x0     					printf("GBias:%d GRate:%d GAngle:%ld\r\n", Get_Gyro_Bias(), Get_Gyro_Rate(), Get_Gyro_Angle()); C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0017ac   f026                                                                                                               
0017ae   c034     MOVFF     0x34,0x0                                                                                        
0017b0   f000                                                                                                               
0017b2   c035     MOVFF     0x35,0x1                                                                                        
0017b4   f001                                                                                                               
0017b6   c036     MOVFF     0x36,0x2                                                                                        
0017b8   f002                                                                                                               
0017ba   c037     MOVFF     0x37,0x3                                                                                        
0017bc   f003                                                                                                               
0017be   c000     MOVFF     0x0,0xfe6                                                                                       
0017c0   ffe6                                                                                                               
0017c2   c001     MOVFF     0x1,0xfe6                                                                                       
0017c4   ffe6                                                                                                               
0017c6   c002     MOVFF     0x2,0xfe6                                                                                       
0017c8   ffe6                                                                                                               
0017ca   c003     MOVFF     0x3,0xfe6                                                                                       
0017cc   ffe6                                                                                                               
0017ce   ec0f     CALL      0x4c1e,0x0                                                                                      
0017d0   f026                                                                                                               
0017d2   cff3     MOVFF     0xff3,0x4                                                                                       
0017d4   f004                                                                                                               
0017d6   cff4     MOVFF     0xff4,0x5                                                                                       
0017d8   f005                                                                                                               
0017da   c004     MOVFF     0x4,0xfe6                                                                                       
0017dc   ffe6                                                                                                               
0017de   c005     MOVFF     0x5,0xfe6                                                                                       
0017e0   ffe6                                                                                                               
0017e2   ecfc     CALL      0x4df8,0x0                                                                                      
0017e4   f026                                                                                                               
0017e6   cff3     MOVFF     0xff3,0x6                                                                                       
0017e8   f006                                                                                                               
0017ea   cff4     MOVFF     0xff4,0x7                                                                                       
0017ec   f007                                                                                                               
0017ee   c006     MOVFF     0x6,0xfe6                                                                                       
0017f0   ffe6                                                                                                               
0017f2   c007     MOVFF     0x7,0xfe6                                                                                       
0017f4   ffe6                                                                                                               
0017f6   0ead     MOVLW     0xad                                                                                            
0017f8   6e08     MOVWF     0x8,0x0                                                                                         
0017fa   0e52     MOVLW     0x52                                                                                            
0017fc   6e09     MOVWF     0x9,0x0                                                                                         
0017fe   6a0a     CLRF      0xa,0x0                                                                                         
001800   c008     MOVFF     0x8,0xfe6                                                                                       
001802   ffe6                                                                                                               
001804   c009     MOVFF     0x9,0xfe6                                                                                       
001806   ffe6                                                                                                               
001808   c00a     MOVFF     0xa,0xfe6                                                                                       
00180a   ffe6                                                                                                               
00180c   ecf3     CALL      0x5be6,0x0                                                                                      
00180e   f02d                                                                                                               
001810   6ef5     MOVWF     0xf5,0x0                                                                                        
001812   0e0b     MOVLW     0xb                                                                                             
001814   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001816   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001818   0102     MOVLB     0x2            					delayCount = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00181a   6bcc     CLRF      0xcc,0x1                                                                                        
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00181c   d000     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           			default:                                                                      C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015e4   0e9a     MOVLW     0x9a           				printf("Nothing to print\r\n");                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
0015e6   6e00     MOVWF     0x0,0x0                                                                                         
0015e8   0e52     MOVLW     0x52                                                                                            
0015ea   6e01     MOVWF     0x1,0x0                                                                                         
0015ec   6a02     CLRF      0x2,0x0                                                                                         
0015ee   c000     MOVFF     0x0,0xfe6                                                                                       
0015f0   ffe6                                                                                                               
0015f2   c001     MOVFF     0x1,0xfe6                                                                                       
0015f4   ffe6                                                                                                               
0015f6   c002     MOVFF     0x2,0xfe6                                                                                       
0015f8   ffe6                                                                                                               
0015fa   ecf3     CALL      0x5be6,0x0                                                                                      
0015fc   f02d                                                                                                               
0015fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001600   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001602   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001604   0102     MOVLB     0x2            				debugMode = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001606   6bca     CLRF      0xca,0x1                                                                                        
001608   d10a     BRA       0x181e         			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
00181e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\trcCode\Repository\Summer\Oceanus\TRCfunctions.c
001820   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001822   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001824   ffd9                                                                                                               
001826   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * USAGE:                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "user_routines.h"                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "serial_ports.h"                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "pwm.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "camera.h"                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "tracking.h"                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "terminal.h"                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "adc.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "encoder.h"                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "gyro.h"                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #include "TRCfunctions.h"                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           extern unsigned char aBreakerWasTripped;                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           extern unsigned long timerTicks;                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           */                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //			    mode          velLim,velThresh tqLim Kpp,Kvpls,Kvphs, Ki, Kd, bEMF,  Ko	 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           VelServo Left  = {0,0,0,0,0,0,  70,    15,     40,    20,  510,  700,  0,  10,  55, 100}; //110 kd C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           VelServo Right = {0,0,0,0,0,0,  70,    15,     40,    20,  510,  700,  0,  10,  55, 100}; C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function. C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                You may modify and add to this function.                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           void User_Initialization (void)                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */ /*Dumped for adc.c support--read the instructions*/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003204   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003206   8893     BSF       0x93,0x4,0x0                                                                                    
003208   8693     BSF       0x93,0x3,0x0                                                                                    
00320a   8493     BSF       0x93,0x2,0x0                                                                                    
00320c   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00320e   8099     BSF       0x99,0x0,0x0                                                                                    
003210   8e93     BSF       0x93,0x7,0x0                                                                                    
003212   8c93     BSF       0x93,0x6,0x0                                                                                    
003214   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003216   829a     BSF       0x9a,0x1,0x0                                                                                    
003218   8699     BSF       0x99,0x3,0x0                                                                                    
00321a   8499     BSF       0x99,0x2,0x0                                                                                    
00321c   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00321e   889a     BSF       0x9a,0x4,0x0                                                                                    
003220   8094     BSF       0x94,0x0,0x0                                                                                    
003222   869a     BSF       0x9a,0x3,0x0                                                                                    
003224   8c9a     BSF       0x9a,0x6,0x0     digital_io_17 = INPUT;                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003226   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               /*                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      is the same as the following:                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      ...                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               */                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //rc_dig_out17 = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003228   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00322a   0e7f     MOVLW     0x7f                                                                                            
00322c   6f0b     MOVWF     0xb,0x1                                                                                         
00322e   c20b     MOVFF     0x20b,0x20a                                                                                     
003230   f20a                                                                                                               
003232   c20b     MOVFF     0x20b,0x209                                                                                     
003234   f209                                                                                                               
003236   c20b     MOVFF     0x20b,0x208                                                                                     
003238   f208                                                                                                               
00323a   c20b     MOVFF     0x20b,0x207                                                                                     
00323c   f207                                                                                                               
00323e   c20b     MOVFF     0x20b,0x206                                                                                     
003240   f206                                                                                                               
003242   c20b     MOVFF     0x20b,0x205                                                                                     
003244   f205                                                                                                               
003246   c20b     MOVFF     0x20b,0x204                                                                                     
003248   f204                                                                                                               
00324a   6f13     MOVWF     0x13,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00324c   c213     MOVFF     0x213,0x212                                                                                     
00324e   f212                                                                                                               
003250   c213     MOVFF     0x213,0x211                                                                                     
003252   f211                                                                                                               
003254   c213     MOVFF     0x213,0x210                                                                                     
003256   f210                                                                                                               
003258   c213     MOVFF     0x213,0x20f                                                                                     
00325a   f20f                                                                                                               
00325c   c213     MOVFF     0x213,0x20e                                                                                     
00325e   f20e                                                                                                               
003260   c213     MOVFF     0x213,0x20d                                                                                     
003262   f20d                                                                                                               
003264   c213     MOVFF     0x213,0x20c                                                                                     
003266   f20c                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //  Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             // changed so PWM() can control PWM outputs 13 through 16                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003268   0e01     MOVLW     0x1              Setup_PWM_Output_Type(USER_CCP,USER_CCP,USER_CCP,USER_CCP);                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00326a   6ee6     MOVWF     0xe6,0x0                                                                                        
00326c   6ae6     CLRF      0xe6,0x0                                                                                        
00326e   6ee6     MOVWF     0xe6,0x0                                                                                        
003270   6ae6     CLRF      0xe6,0x0                                                                                        
003272   6ee6     MOVWF     0xe6,0x0                                                                                        
003274   6ae6     CLRF      0xe6,0x0                                                                                        
003276   6ee6     MOVWF     0xe6,0x0                                                                                        
003278   6ae6     CLRF      0xe6,0x0                                                                                        
00327a   ec91     CALL      0x2722,0x0                                                                                      
00327c   f013                                                                                                               
00327e   6ef5     MOVWF     0xf5,0x0                                                                                        
003280   0e08     MOVLW     0x8                                                                                             
003282   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003284   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             /*                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    T2CON = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             */                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003286   ec73     CALL      0x40e6,0x0       Initialize_ADC();                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003288   f020                                                                                                               
00328a   ec21     CALL      0x5a42,0x0       Initialize_Encoders();                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00328c   f02d                                                                                                               
00328e   ec08     CALL      0x4c10,0x0       Initialize_Gyro();                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003290   f026                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             // initialize and start 26.2ms clock                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003292   0e30     MOVLW     0x30             T1CON = 0x30; /* 1:8 Prescale */                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003294   6ecd     MOVWF     0xcd,0x0                                                                                        
003296   0e7f     MOVLW     0x7f             TMR1H = 0x7F; /* Pre-load TMR1 to overflow after 26.2ms */                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003298   6ecf     MOVWF     0xcf,0x0                                                                                        
00329a   68ce     SETF      0xce,0x0         TMR1L = 0xFF;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00329c   80cd     BSF       0xcd,0x0,0x0     T1CONbits.TMR1ON = 1; /* Turn timer on */                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00329e   909f     BCF       0x9f,0x0,0x0     IPR1bits.TMR1IP = 0; /* Set Timer1 Interrupt to low priority */                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032a0   809d     BSF       0x9d,0x0,0x0     PIE1bits.TMR1IE = 1; /* Interrupt when Timer1 overflows */                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032a2   8cf2     BSF       0xf2,0x6,0x0     INTCONbits.GIEL = 1; /* Enable Global Low Priority Interrupts */               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             // initialize the CCP PWM hardware                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032a4   ec4b     CALL      0x5896,0x0       Initialize_PWM();                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032a6   f02c                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             // initialize the serial ports                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032a8   ec7c     CALL      0x4ef8,0x0       Init_Serial_Port_One();                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032aa   f027                                                                                                               
0032ac   ec95     CALL      0x4f2a,0x0       Init_Serial_Port_Two();                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032ae   f027                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032b0   0102     MOVLB     0x2              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032b2   0e01     MOVLW     0x1                                                                                             
0032b4   6f72     MOVWF     0x72,0x1                                                                                        
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032b6   0e00     MOVLW     0x0              Putdata(&txdata);            /* DO NOT CHANGE! */                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032b8   6ee6     MOVWF     0xe6,0x0                                                                                        
0032ba   0e02     MOVLW     0x2                                                                                             
0032bc   6ee6     MOVWF     0xe6,0x0                                                                                        
0032be   ec4f     CALL      0x269e,0x0                                                                                      
0032c0   f013                                                                                                               
0032c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //  Serial_Driver_Initialize();                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //  printf("IFI 2006 User Processor Initialized ...\r");  /* Optional - Print initialization message. */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032c6   ecd6     CALL      0x25ac,0x0       User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032c8   f012                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032ca   0e4c     MOVLW     0x4c             printf("--TRC Robot Code 2009 Ver. 0.1, Oceanus Initialized--\r\n");           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032cc   6e00     MOVWF     0x0,0x0                                                                                         
0032ce   0e54     MOVLW     0x54                                                                                            
0032d0   6e01     MOVWF     0x1,0x0                                                                                         
0032d2   6a02     CLRF      0x2,0x0                                                                                         
0032d4   c000     MOVFF     0x0,0xfe6                                                                                       
0032d6   ffe6                                                                                                               
0032d8   c001     MOVFF     0x1,0xfe6                                                                                       
0032da   ffe6                                                                                                               
0032dc   c002     MOVFF     0x2,0xfe6                                                                                       
0032de   ffe6                                                                                                               
0032e0   ecf3     CALL      0x5be6,0x0                                                                                      
0032e2   f02d                                                                                                               
0032e4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0032ea   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                microprocessor.                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032ec   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032ee   ffe6                                                                                                               
0032f0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0032f2   ffd9                                                                                                               
0032f4   0e14     MOVLW     0x14                                                                                            
0032f6   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned char count = 0;                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned char camera_menu_active = 0;                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned char tracking_menu_active = 0;                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	unsigned char terminal_char;                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	unsigned char returned_value;                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//Encoder Velocity Calculation; Oversampling                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static char samplesCount = 0;		//Samples out of 2                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static char emfSamples = 0;                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//Compressor Mode                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static char firstRunFlag = 1;                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static char compMode = 0;			//Enable Compressor Mode                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//Joystick Vars                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	int x, y, z;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032f8   0e08     MOVLW     0x8            	char kpupPrev = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032fa   6adb     CLRF      0xdb,0x0                                                                                        
0032fc   0e09     MOVLW     0x9            	char kpdnPrev = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0032fe   6adb     CLRF      0xdb,0x0                                                                                        
003300   0e0a     MOVLW     0xa            	char kdupPrev = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003302   6adb     CLRF      0xdb,0x0                                                                                        
003304   0e0b     MOVLW     0xb            	char kddnPrev = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003306   6adb     CLRF      0xdb,0x0                                                                                        
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//Some gyro bias stuff here...looks intesting                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned int i = 0;                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned int j = 0;                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	int temp_gyro_rate;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	long temp_gyro_angle;                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	int temp_gyro_bias;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	static unsigned int h = 0;                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//I moved it to match the gyro code                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003308   0e20     MOVLW     0x20           	Getdata(&rxdata);                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00330a   6ee6     MOVWF     0xe6,0x0                                                                                        
00330c   0e02     MOVLW     0x2                                                                                             
00330e   6ee6     MOVWF     0xe6,0x0                                                                                        
003310   ec36     CALL      0x266c,0x0                                                                                      
003312   f013                                                                                                               
003314   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003316   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //Set this to 1 to run the gyro bias calculation code. Otherwise, set it to 0  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #ifdef GYRO_CAL                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003318   0101     MOVLB     0x1            	i++;                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00331a   2bcf     INCF      0xcf,0x1,0x1                                                                                    
00331c   0e00     MOVLW     0x0                                                                                             
00331e   23d0     ADDWFC    0xd0,0x1,0x1                                                                                    
003320   2bd1     INCF      0xd1,0x1,0x1   	j++; // this will rollover every ~1000 seconds                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003322   23d2     ADDWFC    0xd2,0x1,0x1                                                                                    
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003324   0e0a     MOVLW     0xa            	if(j == 10)                                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003326   19d1     XORWF     0xd1,0x0,0x1                                                                                    
003328   e101     BNZ       0x332c                                                                                          
00332a   51d2     MOVF      0xd2,0x0,0x1                                                                                    
00332c   e110     BNZ       0x334e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00332e   0e32     MOVLW     0x32           		printf("\rCalculating Gyro Bias...");                                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003330   6e00     MOVWF     0x0,0x0                                                                                         
003332   0e54     MOVLW     0x54                                                                                            
003334   6e01     MOVWF     0x1,0x0                                                                                         
003336   6a02     CLRF      0x2,0x0                                                                                         
003338   c000     MOVFF     0x0,0xfe6                                                                                       
00333a   ffe6                                                                                                               
00333c   c001     MOVFF     0x1,0xfe6                                                                                       
00333e   ffe6                                                                                                               
003340   c002     MOVFF     0x2,0xfe6                                                                                       
003342   ffe6                                                                                                               
003344   ecf3     CALL      0x5be6,0x0                                                                                      
003346   f02d                                                                                                               
003348   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00334a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00334c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00334e   0101     MOVLB     0x1            	if(j == 60)                                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003350   0e3c     MOVLW     0x3c                                                                                            
003352   19d1     XORWF     0xd1,0x0,0x1                                                                                    
003354   e101     BNZ       0x3358                                                                                          
003356   51d2     MOVF      0xd2,0x0,0x1                                                                                    
003358   e102     BNZ       0x335e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		// start a gyro bias calculation                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00335a   ecce     CALL      0x4d9c,0x0     		Start_Gyro_Bias_Calc();                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00335c   f026                                                                                                               
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00335e   0e2c     MOVLW     0x2c           	if(j == 300)                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003360   0101     MOVLB     0x1                                                                                             
003362   19d1     XORWF     0xd1,0x0,0x1                                                                                    
003364   e102     BNZ       0x336a                                                                                          
003366   0e01     MOVLW     0x1                                                                                             
003368   19d2     XORWF     0xd2,0x0,0x1                                                                                    
00336a   e114     BNZ       0x3394                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		// terminate the gyro bias calculation                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00336c   ecda     CALL      0x4db4,0x0     		Stop_Gyro_Bias_Calc();                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00336e   f026                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		// reset the gyro heading angle                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003370   ec10     CALL      0x4e20,0x0     		Reset_Gyro_Angle();                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003372   f027                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003374   0e2c     MOVLW     0x2c           		printf("Done\r");                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003376   6e00     MOVWF     0x0,0x0                                                                                         
003378   0e54     MOVLW     0x54                                                                                            
00337a   6e01     MOVWF     0x1,0x0                                                                                         
00337c   6a02     CLRF      0x2,0x0                                                                                         
00337e   c000     MOVFF     0x0,0xfe6                                                                                       
003380   ffe6                                                                                                               
003382   c001     MOVFF     0x1,0xfe6                                                                                       
003384   ffe6                                                                                                               
003386   c002     MOVFF     0x2,0xfe6                                                                                       
003388   ffe6                                                                                                               
00338a   ecf3     CALL      0x5be6,0x0                                                                                      
00338c   f02d                                                                                                               
00338e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003390   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003392   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003394   0101     MOVLB     0x1            	if(i >= 30 && j >= 300)                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003396   0e1e     MOVLW     0x1e                                                                                            
003398   5dcf     SUBWF     0xcf,0x0,0x1                                                                                    
00339a   0e00     MOVLW     0x0                                                                                             
00339c   59d0     SUBWFB    0xd0,0x0,0x1                                                                                    
00339e   e326     BNC       0x33ec                                                                                          
0033a0   0e2c     MOVLW     0x2c                                                                                            
0033a2   5dd1     SUBWF     0xd1,0x0,0x1                                                                                    
0033a4   0e01     MOVLW     0x1                                                                                             
0033a6   59d2     SUBWFB    0xd2,0x0,0x1                                                                                    
0033a8   e321     BNC       0x33ec                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033aa   ecfc     CALL      0x4df8,0x0     		temp_gyro_bias = Get_Gyro_Bias();                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033ac   f026                                                                                                               
0033ae   0e12     MOVLW     0x12                                                                                            
0033b0   cff3     MOVFF     0xff3,0xfdb                                                                                     
0033b2   ffdb                                                                                                               
0033b4   0e13     MOVLW     0x13                                                                                            
0033b6   cff4     MOVFF     0xff4,0xfdb                                                                                     
0033b8   ffdb                                                                                                               
0033ba   ec0f     CALL      0x4c1e,0x0     		temp_gyro_rate = Get_Gyro_Rate();                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033bc   f026                                                                                                               
0033be   0e0c     MOVLW     0xc                                                                                             
0033c0   cff3     MOVFF     0xff3,0xfdb                                                                                     
0033c2   ffdb                                                                                                               
0033c4   0e0d     MOVLW     0xd                                                                                             
0033c6   cff4     MOVFF     0xff4,0xfdb                                                                                     
0033c8   ffdb                                                                                                               
0033ca   ec65     CALL      0x4cca,0x0     		temp_gyro_angle = Get_Gyro_Angle();                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033cc   f026                                                                                                               
0033ce   0e0e     MOVLW     0xe                                                                                             
0033d0   c034     MOVFF     0x34,0xfdb                                                                                      
0033d2   ffdb                                                                                                               
0033d4   0e0f     MOVLW     0xf                                                                                             
0033d6   c035     MOVFF     0x35,0xfdb                                                                                      
0033d8   ffdb                                                                                                               
0033da   0e10     MOVLW     0x10                                                                                            
0033dc   c036     MOVFF     0x36,0xfdb                                                                                      
0033de   ffdb                                                                                                               
0033e0   0e11     MOVLW     0x11                                                                                            
0033e2   c037     MOVFF     0x37,0xfdb                                                                                      
0033e4   ffdb                                                                                                               
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//	printf(" Factor:%d\r\n", GYRO_CAL_FACTOR);	                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//	printf(" Gyro Bias=%d\r\n", temp_gyro_bias);                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//	printf(" Gyro Rate=%d\r\n", temp_gyro_rate);                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//	printf("Gyro Angle=%d\r\n\r\n", (int)temp_gyro_angle);		                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033e6   0101     MOVLB     0x1            		i = 0;                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033e8   6bcf     CLRF      0xcf,0x1                                                                                        
0033ea   6bd0     CLRF      0xd0,0x1                                                                                        
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//Set_Gyro_Bias(GYRO_BIAS);                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #else                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	Set_Gyro_Bias(GYRO_BIAS);                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// send diagnostic information to the terminal                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		//comment me to stop spamming the serial port                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	//Tracking_Info_Terminal();                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// structure with the received tracking information.                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //	Camera_Handler();                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// This function reads data placed in the T_Packet_Data                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// structure by the Camera_Handler() function and if new                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// tracking data is available, attempts to keep the center                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// of the tracked object in the center of the camera's                          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// image using two servos that drive a pan/tilt platform.                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// If the camera doesn't have the object within it's field                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// of view, this function will execute a search algorithm                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// in an attempt to find the object.                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //	Servo_Track();                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// Turn on the "Switch 3" LED on the operator interface if                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// the camera is pointed at the green light target. The                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// Switch3_LED variable is also used by the Default_Routine()                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// function below, so disable it inside Default_Routine()                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// if you want to keep this functionality.                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /*	if(Get_Tracking_State() == CAMERA_ON_TARGET)                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		Switch3_LED = 1;                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	else                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		Switch3_LED = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}*/                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// IFI's default routine is commented out for safety reasons                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// and because it also tries to use PWM outputs one and two,                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// which conflicts with the default assignment for the pan                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// and tilt servos.                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //  Default_Routine();                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///----------------------------------Mappings------------------------------      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033ec   ec9a     CALL      0x1334,0x0       configTerminal(); //Interactive Terminal to update drive system configuration  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033ee   f009                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //This is some of my code, put here because Default_Routine() is commented out C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033f0   0e0a     MOVLW     0xa              x = deadBandInput(YAW + YAW_OFFSET, YAW_DB);			//Centered at 0                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0033f2   6ee6     MOVWF     0xe6,0x0                                                                                        
0033f4   6ae6     CLRF      0xe6,0x0                                                                                        
0033f6   0ef6     MOVLW     0xf6                                                                                            
0033f8   0102     MOVLB     0x2                                                                                             
0033fa   252b     ADDWF     0x2b,0x0,0x1                                                                                    
0033fc   6ee6     MOVWF     0xe6,0x0                                                                                        
0033fe   6ae6     CLRF      0xe6,0x0                                                                                        
003400   eca7     CALL      0xf4e,0x0                                                                                       
003402   f007                                                                                                               
003404   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003406   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003408   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00340a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00340c   0e02     MOVLW     0x2                                                                                             
00340e   cff3     MOVFF     0xff3,0xfdb                                                                                     
003410   ffdb                                                                                                               
003412   0e03     MOVLW     0x3                                                                                             
003414   cff4     MOVFF     0xff4,0xfdb                                                                                     
003416   ffdb                                                                                                               
003418   0e09     MOVLW     0x9              y = deadBandInput(SPEED + SPEED_OFFSET, SPEED_DB);	//Centered at 0             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00341a   6ee6     MOVWF     0xe6,0x0                                                                                        
00341c   6ae6     CLRF      0xe6,0x0                                                                                        
00341e   0efd     MOVLW     0xfd                                                                                            
003420   0102     MOVLB     0x2                                                                                             
003422   2526     ADDWF     0x26,0x0,0x1                                                                                    
003424   6ee6     MOVWF     0xe6,0x0                                                                                        
003426   6ae6     CLRF      0xe6,0x0                                                                                        
003428   eca7     CALL      0xf4e,0x0                                                                                       
00342a   f007                                                                                                               
00342c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00342e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003430   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003432   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003434   0e04     MOVLW     0x4                                                                                             
003436   cff3     MOVFF     0xff3,0xfdb                                                                                     
003438   ffdb                                                                                                               
00343a   0e05     MOVLW     0x5                                                                                             
00343c   cff4     MOVFF     0xff4,0xfdb                                                                                     
00343e   ffdb                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003440   0e02     MOVLW     0x2              x = (x*80)/100;										//Steering Potentcy                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003442   cfdb     MOVFF     0xfdb,0x0                                                                                       
003444   f000                                                                                                               
003446   0e03     MOVLW     0x3                                                                                             
003448   cfdb     MOVFF     0xfdb,0x1                                                                                       
00344a   f001                                                                                                               
00344c   0e50     MOVLW     0x50                                                                                            
00344e   0201     MULWF     0x1,0x0                                                                                         
003450   cff3     MOVFF     0xff3,0x1                                                                                       
003452   f001                                                                                                               
003454   0200     MULWF     0x0,0x0                                                                                         
003456   cff3     MOVFF     0xff3,0x0                                                                                       
003458   f000                                                                                                               
00345a   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00345c   2601     ADDWF     0x1,0x1,0x0                                                                                     
00345e   0e64     MOVLW     0x64                                                                                            
003460   6e3b     MOVWF     0x3b,0x0                                                                                        
003462   6a3c     CLRF      0x3c,0x0                                                                                        
003464   c000     MOVFF     0x0,0x36                                                                                        
003466   f036                                                                                                               
003468   c001     MOVFF     0x1,0x37                                                                                        
00346a   f037                                                                                                               
00346c   ec3f     CALL      0x3e7e,0x0                                                                                      
00346e   f01f                                                                                                               
003470   c036     MOVFF     0x36,0x0                                                                                        
003472   f000                                                                                                               
003474   c037     MOVFF     0x37,0x1                                                                                        
003476   f001                                                                                                               
003478   0e02     MOVLW     0x2                                                                                             
00347a   c000     MOVFF     0x0,0xfdb                                                                                       
00347c   ffdb                                                                                                               
00347e   0e03     MOVLW     0x3                                                                                             
003480   c001     MOVFF     0x1,0xfdb                                                                                       
003482   ffdb                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //Encoder Velocity Calculation; Oversampling                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003484   0101     MOVLB     0x1              if(++samplesCount == 2)										                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003486   2bcb     INCF      0xcb,0x1,0x1                                                                                    
003488   0e02     MOVLW     0x2                                                                                             
00348a   5dcb     SUBWF     0xcb,0x0,0x1                                                                                    
00348c   e176     BNZ       0x357a                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00348e   0e04     MOVLW     0x4            		Left.Vsetpoint  = (Left.velLim*(y - x))/127; 	//Velocity setting: percentage from inputs*velocity limit -> setpoint C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003490   cfdb     MOVFF     0xfdb,0x2                                                                                       
003492   f002                                                                                                               
003494   0e05     MOVLW     0x5                                                                                             
003496   cfdb     MOVFF     0xfdb,0x3                                                                                       
003498   f003                                                                                                               
00349a   0e02     MOVLW     0x2                                                                                             
00349c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00349e   5c02     SUBWF     0x2,0x0,0x0                                                                                     
0034a0   6e00     MOVWF     0x0,0x0                                                                                         
0034a2   0e03     MOVLW     0x3                                                                                             
0034a4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034a6   5803     SUBWFB    0x3,0x0,0x0                                                                                     
0034a8   6e01     MOVWF     0x1,0x0                                                                                         
0034aa   5000     MOVF      0x0,0x0,0x0                                                                                     
0034ac   0390     MULWF     0x90,0x1                                                                                        
0034ae   cff3     MOVFF     0xff3,0x186                                                                                     
0034b0   f186                                                                                                               
0034b2   cff4     MOVFF     0xff4,0x187                                                                                     
0034b4   f187                                                                                                               
0034b6   0391     MULWF     0x91,0x1                                                                                        
0034b8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0034ba   2787     ADDWF     0x87,0x1,0x1                                                                                    
0034bc   5001     MOVF      0x1,0x0,0x0                                                                                     
0034be   0390     MULWF     0x90,0x1                                                                                        
0034c0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0034c2   2787     ADDWF     0x87,0x1,0x1                                                                                    
0034c4   0e7f     MOVLW     0x7f                                                                                            
0034c6   6e3b     MOVWF     0x3b,0x0                                                                                        
0034c8   6a3c     CLRF      0x3c,0x0                                                                                        
0034ca   c186     MOVFF     0x186,0x36                                                                                      
0034cc   f036                                                                                                               
0034ce   c187     MOVFF     0x187,0x37                                                                                      
0034d0   f037                                                                                                               
0034d2   ec3f     CALL      0x3e7e,0x0                                                                                      
0034d4   f01f                                                                                                               
0034d6   c036     MOVFF     0x36,0x186                                                                                      
0034d8   f186                                                                                                               
0034da   c037     MOVFF     0x37,0x187                                                                                      
0034dc   f187                                                                                                               
0034de   0e02     MOVLW     0x2            		Right.Vsetpoint = (Right.velLim*(y + x))/127; 	                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0034e0   cfdb     MOVFF     0xfdb,0x2                                                                                       
0034e2   f002                                                                                                               
0034e4   0e03     MOVLW     0x3                                                                                             
0034e6   cfdb     MOVFF     0xfdb,0x3                                                                                       
0034e8   f003                                                                                                               
0034ea   0e04     MOVLW     0x4                                                                                             
0034ec   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034ee   2402     ADDWF     0x2,0x0,0x0                                                                                     
0034f0   6e00     MOVWF     0x0,0x0                                                                                         
0034f2   0e05     MOVLW     0x5                                                                                             
0034f4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0034f6   2003     ADDWFC    0x3,0x0,0x0                                                                                     
0034f8   6e01     MOVWF     0x1,0x0                                                                                         
0034fa   0101     MOVLB     0x1                                                                                             
0034fc   5000     MOVF      0x0,0x0,0x0                                                                                     
0034fe   03b4     MULWF     0xb4,0x1                                                                                        
003500   cff3     MOVFF     0xff3,0x1aa                                                                                     
003502   f1aa                                                                                                               
003504   cff4     MOVFF     0xff4,0x1ab                                                                                     
003506   f1ab                                                                                                               
003508   03b5     MULWF     0xb5,0x1                                                                                        
00350a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00350c   27ab     ADDWF     0xab,0x1,0x1                                                                                    
00350e   5001     MOVF      0x1,0x0,0x0                                                                                     
003510   03b4     MULWF     0xb4,0x1                                                                                        
003512   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003514   27ab     ADDWF     0xab,0x1,0x1                                                                                    
003516   0e7f     MOVLW     0x7f                                                                                            
003518   6e3b     MOVWF     0x3b,0x0                                                                                        
00351a   6a3c     CLRF      0x3c,0x0                                                                                        
00351c   c1aa     MOVFF     0x1aa,0x36                                                                                      
00351e   f036                                                                                                               
003520   c1ab     MOVFF     0x1ab,0x37                                                                                      
003522   f037                                                                                                               
003524   ec3f     CALL      0x3e7e,0x0                                                                                      
003526   f01f                                                                                                               
003528   c036     MOVFF     0x36,0x1aa                                                                                      
00352a   f1aa                                                                                                               
00352c   c037     MOVFF     0x37,0x1ab                                                                                      
00352e   f1ab                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003530   0e01     MOVLW     0x1            		L_CIM_1 = L_CIM_2 = doVelPid(&Left, L_ENC_COUNT, L_MOTOR_DIR);                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003532   6ee6     MOVWF     0xe6,0x0                                                                                        
003534   6ae6     CLRF      0xe6,0x0                                                                                        
003536   ec68     CALL      0x5ad0,0x0                                                                                      
003538   f02d                                                                                                               
00353a   c034     MOVFF     0x34,0x0                                                                                        
00353c   f000                                                                                                               
00353e   c035     MOVFF     0x35,0x1                                                                                        
003540   f001                                                                                                               
003542   c036     MOVFF     0x36,0x2                                                                                        
003544   f002                                                                                                               
003546   c037     MOVFF     0x37,0x3                                                                                        
003548   f003                                                                                                               
00354a   c000     MOVFF     0x0,0xfe6                                                                                       
00354c   ffe6                                                                                                               
00354e   c001     MOVFF     0x1,0xfe6                                                                                       
003550   ffe6                                                                                                               
003552   c002     MOVFF     0x2,0xfe6                                                                                       
003554   ffe6                                                                                                               
003556   c003     MOVFF     0x3,0xfe6                                                                                       
003558   ffe6                                                                                                               
00355a   0e80     MOVLW     0x80                                                                                            
00355c   6ee6     MOVWF     0xe6,0x0                                                                                        
00355e   0e01     MOVLW     0x1                                                                                             
003560   6ee6     MOVWF     0xe6,0x0                                                                                        
003562   ec52     CALL      0x8a4,0x0                                                                                       
003564   f004                                                                                                               
003566   6ef5     MOVWF     0xf5,0x0                                                                                        
003568   0e08     MOVLW     0x8                                                                                             
00356a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00356c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00356e   cff3     MOVFF     0xff3,0x213                                                                                     
003570   f213                                                                                                               
003572   cff3     MOVFF     0xff3,0x212                                                                                     
003574   f212                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #ifndef DRIVE_DEBUG                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                   R_CIM_1 = R_CIM_2 = doVelPid(&Right, R_ENC_COUNT, R_MOTOR_DIR);          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           #endif                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003576   0101     MOVLB     0x1            		samplesCount = 0;		                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003578   6bcb     CLRF      0xcb,0x1                                                                                        
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             ///Relays                                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00357a   5088     MOVF      0x88,0x0,0x0     relay1_fwd = !rc_dig_in18;  /* Power pump only if pressure switch is off. */   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00357c   0b80     ANDLW     0x80                                                                                            
00357e   e002     BZ        0x3584                                                                                          
003580   908d     BCF       0x8d,0x0,0x0                                                                                    
003582   d001     BRA       0x3586                                                                                          
003584   808d     BSF       0x8d,0x0,0x0                                                                                    
003586   908c     BCF       0x8c,0x0,0x0     relay1_rev = 0;                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /*                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             if(KPUP)                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             	if(!kpupPrev)                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		++Left.Kvp;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		++Right.Kvp;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		printf("Kvp:%d Kd:%d Ko:%d\r\n", Left.Kvp, Left.Kd, Left.Ko);                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		kpupPrev = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             } else {                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	kpupPrev = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             if(KPDN)                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             	if(!kpdnPrev)                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		--Left.Kvp;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		--Right.Kvp;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		printf("Kvp:%d Kd:%d Ko:%d\r\n", Left.Kvp, Left.Kd, Left.Ko);                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		kpdnPrev = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             } else {                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	kpdnPrev = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             if(KDUP)                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             	if(!kdupPrev)                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		++Left.Kd;                                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		++Right.Kd;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		printf("Kvp:%d Kd:%d Ko:%d\r\n", Left.Kvp, Left.Kd, Left.Ko);                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		kdupPrev = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             } else {                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	kdupPrev = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             if(KDDN)                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             	if(!kddnPrev)                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		--Left.Kd;                                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		--Right.Kd;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		printf("Kvp:%d Kd:%d Ko:%d\r\n", Left.Kvp, Left.Kd, Left.Ko);                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           		kddnPrev = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             } else {                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	kddnPrev = 0;                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             }*/                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             ///Pneumatic State Machines                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003588   51cd     MOVF      0xcd,0x0,0x1     if(firstRunFlag)                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00358a   e01a     BZ        0x35c0                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00358c   0102     MOVLB     0x2              	if(p3_sw_aux1)	//Compressor Mode: disables motors if aux1 switch on port 3 joystick is held on reset C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00358e   ad22     BTFSS     0x22,0x6,0x1                                                                                    
003590   d015     BRA       0x35bc                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003592   0101     MOVLB     0x1            		compMode = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003594   0e01     MOVLW     0x1                                                                                             
003596   6fce     MOVWF     0xce,0x1                                                                                        
003598   0ef9     MOVLW     0xf9           		printf("Compressor Mode -- Motors Disabled, Charging Tanks");                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00359a   6e00     MOVWF     0x0,0x0                                                                                         
00359c   0e53     MOVLW     0x53                                                                                            
00359e   6e01     MOVWF     0x1,0x0                                                                                         
0035a0   6a02     CLRF      0x2,0x0                                                                                         
0035a2   c000     MOVFF     0x0,0xfe6                                                                                       
0035a4   ffe6                                                                                                               
0035a6   c001     MOVFF     0x1,0xfe6                                                                                       
0035a8   ffe6                                                                                                               
0035aa   c002     MOVFF     0x2,0xfe6                                                                                       
0035ac   ffe6                                                                                                               
0035ae   ecf3     CALL      0x5be6,0x0                                                                                      
0035b0   f02d                                                                                                               
0035b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035b8   0102     MOVLB     0x2            		Pwm1_red = 1;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035ba   8300     BSF       0x0,0x1,0x1                                                                                     
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035bc   0101     MOVLB     0x1            	firstRunFlag = 0;                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035be   6bcd     CLRF      0xcd,0x1                                                                                        
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             //Compressor Mode: disable motors                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035c0   51ce     MOVF      0xce,0x0,0x1     if(compMode)                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035c2   e00f     BZ        0x35e2                                                                                          
0035c4   0102     MOVLB     0x2              	pwm01 = pwm10 = pwm11 = pwm13 = pwm14 = pwm15 = pwm16 = 127;                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035c6   0e7f     MOVLW     0x7f                                                                                            
0035c8   6f13     MOVWF     0x13,0x1                                                                                        
0035ca   c213     MOVFF     0x213,0x212                                                                                     
0035cc   f212                                                                                                               
0035ce   c213     MOVFF     0x213,0x211                                                                                     
0035d0   f211                                                                                                               
0035d2   c213     MOVFF     0x213,0x210                                                                                     
0035d4   f210                                                                                                               
0035d6   c213     MOVFF     0x213,0x20e                                                                                     
0035d8   f20e                                                                                                               
0035da   c213     MOVFF     0x213,0x20d                                                                                     
0035dc   f20d                                                                                                               
0035de   c213     MOVFF     0x213,0x204                                                                                     
0035e0   f204                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///------------------------------------End Mappings-----------------------       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           ///	                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// IFI's software based PWM pulse generator for PMW ouputs                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// 13 through 16. This has been replaced with a hardware-                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// based solution, PWM(), below.                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           //	Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// see pwm_readme.txt for information about PWM();                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035e2   c213     MOVFF     0x213,0xfe6    	PWM(pwm13,pwm14,pwm15,pwm16);                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035e4   ffe6                                                                                                               
0035e6   c212     MOVFF     0x212,0xfe6                                                                                     
0035e8   ffe6                                                                                                               
0035ea   c211     MOVFF     0x211,0xfe6                                                                                     
0035ec   ffe6                                                                                                               
0035ee   c210     MOVFF     0x210,0xfe6                                                                                     
0035f0   ffe6                                                                                                               
0035f2   ec57     CALL      0x58ae,0x0                                                                                      
0035f4   f02c                                                                                                               
0035f6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0035fe   0e00     MOVLW     0x0            	Putdata(&txdata);                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003600   6ee6     MOVWF     0xe6,0x0                                                                                        
003602   0e02     MOVLW     0x2                                                                                             
003604   6ee6     MOVWF     0xe6,0x0                                                                                        
003606   ec4f     CALL      0x269e,0x0                                                                                      
003608   f013                                                                                                               
00360a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00360c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00360e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003610   ffe1                                                                                                               
003612   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003614   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003616   ffd9                                                                                                               
003618   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * FUNCTION NAME: Default_Routine                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * PURPOSE:       Performs the default mappings of inputs to outputs for the      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *                Robot Controller.                                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * CALLED FROM:   this file, Process_Data_From_Master_uP routine                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           void Default_Routine(void)                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           // <---Lots of stuff removed here (it's unused); only the useful stuff is left --> C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                            /*---------- ROBOT FEEDBACK LEDs------------------------------------------------ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *------------------------------------------------------------------------------ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *   This section drives the "ROBOT FEEDBACK" lights on the Operator Interface. C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *   The lights are green for joystick forward and red for joystick reverse.    C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *   Both red and green are on when the joystick is centered.  Use the          C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *   trim tabs on the joystick to adjust the center.                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             *   These may be changed for any use that the user desires.                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             */	                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00361a   0102     MOVLB     0x2              if (user_display_mode == 0) /* User Mode is Off */                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00361c   bb21     BTFSC     0x21,0x5,0x1                                                                                    
00361e   d0a9     BRA       0x3772                                                                                          
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             { /* Check position of Port 1 Joystick */                                      C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003620   0e00     MOVLW     0x0                if (p1_y >= 0 && p1_y <= 56)                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003622   5d26     SUBWF     0x26,0x0,0x1                                                                                    
003624   e307     BNC       0x3634                                                                                          
003626   5126     MOVF      0x26,0x0,0x1                                                                                    
003628   0838     SUBLW     0x38                                                                                            
00362a   e304     BNC       0x3634                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00362c   0102     MOVLB     0x2                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00362e   9100     BCF       0x0,0x0,0x1                                                                                     
003630   8300     BSF       0x0,0x1,0x1          Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON  */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003632   d02d     BRA       0x368e             else if (p1_y >= 125 && p1_y <= 129)                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003634   0e7d     MOVLW     0x7d                                                                                            
003636   5d26     SUBWF     0x26,0x0,0x1                                                                                    
003638   e30e     BNC       0x3656                                                                                          
00363a   5126     MOVF      0x26,0x0,0x1                                                                                    
00363c   6e00     MOVWF     0x0,0x0                                                                                         
00363e   6a01     CLRF      0x1,0x0                                                                                         
003640   3401     RLCF      0x1,0x0,0x0                                                                                     
003642   e204     BC        0x364c                                                                                          
003644   5000     MOVF      0x0,0x0,0x0                                                                                     
003646   0881     SUBLW     0x81                                                                                            
003648   0e00     MOVLW     0x0                                                                                             
00364a   5401     SUBFWB    0x1,0x0,0x0                                                                                     
00364c   e304     BNC       0x3656                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00364e   0102     MOVLB     0x2                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON */                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003650   8100     BSF       0x0,0x0,0x1                                                                                     
003652   8300     BSF       0x0,0x1,0x1          Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON */                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003654   d01c     BRA       0x368e             else if (p1_y >= 216 && p1_y <= 255)                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003656   5126     MOVF      0x26,0x0,0x1                                                                                    
003658   6e00     MOVWF     0x0,0x0                                                                                         
00365a   6a01     CLRF      0x1,0x0                                                                                         
00365c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00365e   5001     MOVF      0x1,0x0,0x0                                                                                     
003660   e604     BN        0x366a                                                                                          
003662   0ed8     MOVLW     0xd8                                                                                            
003664   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003666   0e00     MOVLW     0x0                                                                                             
003668   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00366a   e30e     BNC       0x3688                                                                                          
00366c   5126     MOVF      0x26,0x0,0x1                                                                                    
00366e   6e02     MOVWF     0x2,0x0                                                                                         
003670   6a03     CLRF      0x3,0x0                                                                                         
003672   3403     RLCF      0x3,0x0,0x0                                                                                     
003674   e204     BC        0x367e                                                                                          
003676   5002     MOVF      0x2,0x0,0x0                                                                                     
003678   08ff     SUBLW     0xff                                                                                            
00367a   0e00     MOVLW     0x0                                                                                             
00367c   5403     SUBFWB    0x3,0x0,0x0                                                                                     
00367e   e304     BNC       0x3688                                                                                          
                                               {                     /* Joystick is in full forward position*/              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003680   0102     MOVLB     0x2                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON  */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003682   8100     BSF       0x0,0x0,0x1                                                                                     
003684   9300     BCF       0x0,0x1,0x1          Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003686   d003     BRA       0x368e             else                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003688   0102     MOVLB     0x2                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00368a   9100     BCF       0x0,0x0,0x1                                                                                     
00368c   9300     BCF       0x0,0x1,0x1          Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }  /*END Check position of Port 1 Joystick                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               /* Check position of Port 2 Y Joystick                                       C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                      (or Port 1 X in Single Joystick Drive Mode) */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00368e   0e00     MOVLW     0x0                if (p2_y >= 0 && p2_y <= 56)                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003690   0102     MOVLB     0x2                                                                                             
003692   5d27     SUBWF     0x27,0x0,0x1                                                                                    
003694   e307     BNC       0x36a4                                                                                          
003696   5127     MOVF      0x27,0x0,0x1                                                                                    
003698   0838     SUBLW     0x38                                                                                            
00369a   e304     BNC       0x36a4                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00369c   0102     MOVLB     0x2                  Pwm2_green  = 0;    /* Turn pwm2 green LED - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00369e   9500     BCF       0x0,0x2,0x1                                                                                     
0036a0   8700     BSF       0x0,0x3,0x1          Pwm2_red  = 1;      /* Turn pwm2 red LED   - ON  */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036a2   d02d     BRA       0x36fe             else if (p2_y >= 125 && p2_y <= 129)                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036a4   0e7d     MOVLW     0x7d                                                                                            
0036a6   5d27     SUBWF     0x27,0x0,0x1                                                                                    
0036a8   e30e     BNC       0x36c6                                                                                          
0036aa   5127     MOVF      0x27,0x0,0x1                                                                                    
0036ac   6e00     MOVWF     0x0,0x0                                                                                         
0036ae   6a01     CLRF      0x1,0x0                                                                                         
0036b0   3401     RLCF      0x1,0x0,0x0                                                                                     
0036b2   e204     BC        0x36bc                                                                                          
0036b4   5000     MOVF      0x0,0x0,0x0                                                                                     
0036b6   0881     SUBLW     0x81                                                                                            
0036b8   0e00     MOVLW     0x0                                                                                             
0036ba   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0036bc   e304     BNC       0x36c6                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036be   0102     MOVLB     0x2                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON */                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036c0   8500     BSF       0x0,0x2,0x1                                                                                     
0036c2   8700     BSF       0x0,0x3,0x1          Pwm2_red  = 1;      /* Turn PWM2 red LED   - ON */                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036c4   d01c     BRA       0x36fe             else if (p2_y >= 216 && p2_y <= 255)                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036c6   5127     MOVF      0x27,0x0,0x1                                                                                    
0036c8   6e00     MOVWF     0x0,0x0                                                                                         
0036ca   6a01     CLRF      0x1,0x0                                                                                         
0036cc   90d8     BCF       0xd8,0x0,0x0                                                                                    
0036ce   5001     MOVF      0x1,0x0,0x0                                                                                     
0036d0   e604     BN        0x36da                                                                                          
0036d2   0ed8     MOVLW     0xd8                                                                                            
0036d4   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0036d6   0e00     MOVLW     0x0                                                                                             
0036d8   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0036da   e30e     BNC       0x36f8                                                                                          
0036dc   5127     MOVF      0x27,0x0,0x1                                                                                    
0036de   6e02     MOVWF     0x2,0x0                                                                                         
0036e0   6a03     CLRF      0x3,0x0                                                                                         
0036e2   3403     RLCF      0x3,0x0,0x0                                                                                     
0036e4   e204     BC        0x36ee                                                                                          
0036e6   5002     MOVF      0x2,0x0,0x0                                                                                     
0036e8   08ff     SUBLW     0xff                                                                                            
0036ea   0e00     MOVLW     0x0                                                                                             
0036ec   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0036ee   e304     BNC       0x36f8                                                                                          
                                               {                     /* Joystick is in full forward position */             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036f0   0102     MOVLB     0x2                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON  */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036f2   8500     BSF       0x0,0x2,0x1                                                                                     
0036f4   9700     BCF       0x0,0x3,0x1          Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036f6   d003     BRA       0x36fe             else                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036f8   0102     MOVLB     0x2                  Pwm2_green  = 0;    /* Turn PWM2 green LED - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036fa   9500     BCF       0x0,0x2,0x1                                                                                     
0036fc   9700     BCF       0x0,0x3,0x1          Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               }  /* END Check position of Port 2 Joystick */                               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                               /* This drives the Relay 1 and Relay 2 "Robot Feedback" lights on the OI. */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
0036fe   9b00     BCF       0x0,0x5,0x1        Relay1_green = relay1_fwd;    /* LED is ON when Relay 1 is FWD */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003700   508d     MOVF      0x8d,0x0,0x0                                                                                    
003702   0b01     ANDLW     0x1                                                                                             
003704   e001     BZ        0x3708                                                                                          
003706   8b00     BSF       0x0,0x5,0x1                                                                                     
003708   9900     BCF       0x0,0x4,0x1        Relay1_red = relay1_rev;      /* LED is ON when Relay 1 is REV */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00370a   508c     MOVF      0x8c,0x0,0x0                                                                                    
00370c   0b01     ANDLW     0x1                                                                                             
00370e   e001     BZ        0x3712                                                                                          
003710   8900     BSF       0x0,0x4,0x1                                                                                     
003712   9f00     BCF       0x0,0x7,0x1        Relay2_green = relay2_fwd;    /* LED is ON when Relay 2 is FWD */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003714   508d     MOVF      0x8d,0x0,0x0                                                                                    
003716   0b02     ANDLW     0x2                                                                                             
003718   e001     BZ        0x371c                                                                                          
00371a   8f00     BSF       0x0,0x7,0x1                                                                                     
00371c   9d00     BCF       0x0,0x6,0x1        Relay2_red = relay2_rev;      /* LED is ON when Relay 2 is REV */            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00371e   508c     MOVF      0x8c,0x0,0x0                                                                                    
003720   0b02     ANDLW     0x2                                                                                             
003722   e001     BZ        0x3726                                                                                          
003724   8d00     BSF       0x0,0x6,0x1                                                                                     
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003726   5081     MOVF      0x81,0x0,0x0       Switch1_LED = !(int)rc_dig_in01;                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003728   0b04     ANDLW     0x4                                                                                             
00372a   e001     BZ        0x372e                                                                                          
00372c   0e01     MOVLW     0x1                                                                                             
00372e   6e00     MOVWF     0x0,0x0                                                                                         
003730   6a01     CLRF      0x1,0x0                                                                                         
003732   5000     MOVF      0x0,0x0,0x0                                                                                     
003734   1001     IORWF     0x1,0x0,0x0                                                                                     
003736   e002     BZ        0x373c                                                                                          
003738   0e00     MOVLW     0x0                                                                                             
00373a   d001     BRA       0x373e                                                                                          
00373c   0e01     MOVLW     0x1                                                                                             
00373e   0b01     ANDLW     0x1                                                                                             
003740   6ef3     MOVWF     0xf3,0x0                                                                                        
003742   0efe     MOVLW     0xfe                                                                                            
003744   1501     ANDWF     0x1,0x0,0x1                                                                                     
003746   10f3     IORWF     0xf3,0x0,0x0                                                                                    
003748   6f01     MOVWF     0x1,0x1                                                                                         
00374a   5081     MOVF      0x81,0x0,0x0       Switch2_LED = !(int)rc_dig_in02;                                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
00374c   0b08     ANDLW     0x8                                                                                             
00374e   e001     BZ        0x3752                                                                                          
003750   0e01     MOVLW     0x1                                                                                             
003752   6e00     MOVWF     0x0,0x0                                                                                         
003754   6a01     CLRF      0x1,0x0                                                                                         
003756   5000     MOVF      0x0,0x0,0x0                                                                                     
003758   1001     IORWF     0x1,0x0,0x0                                                                                     
00375a   e002     BZ        0x3760                                                                                          
00375c   0e00     MOVLW     0x0                                                                                             
00375e   d001     BRA       0x3762                                                                                          
003760   0e01     MOVLW     0x1                                                                                             
003762   0b01     ANDLW     0x1                                                                                             
003764   6ef3     MOVWF     0xf3,0x0                                                                                        
003766   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
003768   0efd     MOVLW     0xfd                                                                                            
00376a   1501     ANDWF     0x1,0x0,0x1                                                                                     
00376c   10f3     IORWF     0xf3,0x0,0x0                                                                                    
00376e   6f01     MOVWF     0x1,0x1                                                                                         
                                               //Switch3_LED = !(int)rc_dig_in03;                                           C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             } /* (user_display_mode = 0) (User Mode is Off) */                             C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003770   d052     BRA       0x3816           else  /* User Mode is On - displays data in OI 4-digit display*/               C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003772   c237     MOVFF     0x237,0x37         User_Mode_byte = backup_voltage*10; /* so that decimal doesn't get truncated. */ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003774   f037                                                                                                               
003776   ec6e     CALL      0x3cdc,0x0                                                                                      
003778   f01e                                                                                                               
00377a   c035     MOVFF     0x35,0x8                                                                                        
00377c   f008                                                                                                               
00377e   c036     MOVFF     0x36,0x9                                                                                        
003780   f009                                                                                                               
003782   c037     MOVFF     0x37,0xa                                                                                        
003784   f00a                                                                                                               
003786   c038     MOVFF     0x38,0xb                                                                                        
003788   f00b                                                                                                               
00378a   0e71     MOVLW     0x71                                                                                            
00378c   6e3a     MOVWF     0x3a,0x0                                                                                        
00378e   0e3d     MOVLW     0x3d                                                                                            
003790   6e3b     MOVWF     0x3b,0x0                                                                                        
003792   0e7a     MOVLW     0x7a                                                                                            
003794   6e3c     MOVWF     0x3c,0x0                                                                                        
003796   0e41     MOVLW     0x41                                                                                            
003798   6e3d     MOVWF     0x3d,0x0                                                                                        
00379a   c008     MOVFF     0x8,0x35                                                                                        
00379c   f035                                                                                                               
00379e   c009     MOVFF     0x9,0x36                                                                                        
0037a0   f036                                                                                                               
0037a2   c00a     MOVFF     0xa,0x37                                                                                        
0037a4   f037                                                                                                               
0037a6   c00b     MOVFF     0xb,0x38                                                                                        
0037a8   f038                                                                                                               
0037aa   ecd2     CALL      0x3da4,0x0                                                                                      
0037ac   f01e                                                                                                               
0037ae   c035     MOVFF     0x35,0x4                                                                                        
0037b0   f004                                                                                                               
0037b2   c036     MOVFF     0x36,0x5                                                                                        
0037b4   f005                                                                                                               
0037b6   c037     MOVFF     0x37,0x6                                                                                        
0037b8   f006                                                                                                               
0037ba   c038     MOVFF     0x38,0x7                                                                                        
0037bc   f007                                                                                                               
0037be   6a3a     CLRF      0x3a,0x0                                                                                        
0037c0   6a3b     CLRF      0x3b,0x0                                                                                        
0037c2   0e80     MOVLW     0x80                                                                                            
0037c4   6e3c     MOVWF     0x3c,0x0                                                                                        
0037c6   0e43     MOVLW     0x43                                                                                            
0037c8   6e3d     MOVWF     0x3d,0x0                                                                                        
0037ca   c004     MOVFF     0x4,0x35                                                                                        
0037cc   f035                                                                                                               
0037ce   c005     MOVFF     0x5,0x36                                                                                        
0037d0   f036                                                                                                               
0037d2   c006     MOVFF     0x6,0x37                                                                                        
0037d4   f037                                                                                                               
0037d6   c007     MOVFF     0x7,0x38                                                                                        
0037d8   f038                                                                                                               
0037da   ec7f     CALL      0x3cfe,0x0                                                                                      
0037dc   f01e                                                                                                               
0037de   c035     MOVFF     0x35,0x0                                                                                        
0037e0   f000                                                                                                               
0037e2   c036     MOVFF     0x36,0x1                                                                                        
0037e4   f001                                                                                                               
0037e6   c037     MOVFF     0x37,0x2                                                                                        
0037e8   f002                                                                                                               
0037ea   c038     MOVFF     0x38,0x3                                                                                        
0037ec   f003                                                                                                               
0037ee   6a3a     CLRF      0x3a,0x0                                                                                        
0037f0   6a3b     CLRF      0x3b,0x0                                                                                        
0037f2   0e20     MOVLW     0x20                                                                                            
0037f4   6e3c     MOVWF     0x3c,0x0                                                                                        
0037f6   0e41     MOVLW     0x41                                                                                            
0037f8   6e3d     MOVWF     0x3d,0x0                                                                                        
0037fa   c000     MOVFF     0x0,0x35                                                                                        
0037fc   f035                                                                                                               
0037fe   c001     MOVFF     0x1,0x36                                                                                        
003800   f036                                                                                                               
003802   c002     MOVFF     0x2,0x37                                                                                        
003804   f037                                                                                                               
003806   c003     MOVFF     0x3,0x38                                                                                        
003808   f038                                                                                                               
00380a   ecd2     CALL      0x3da4,0x0                                                                                      
00380c   f01e                                                                                                               
00380e   ecc6     CALL      0x3f8c,0x0                                                                                      
003810   f01f                                                                                                               
003812   c037     MOVFF     0x37,0x200                                                                                      
003814   f200                                                                                                               
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
003816   0012     RETURN    0x0            } /* END Default_Routine(); */                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *  of the routines below.                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * USAGE:                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "pwm.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           // #include "user_Serialdrv.h"                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "encoder.h"                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "gyro.h"                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #include "TRCfunctions.h"                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           extern VelServo Left, Right;                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           unsigned long timerTicks = 0;                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           int encoder1Vel = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           int encoder2Vel = 0;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             _asm                                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
000818   ef71     GOTO      0x44e2             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00081a   f022                                                                                                               
                                             _endasm                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #pragma code                                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata")           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0044e2   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0044e4   ffe4                                                                                                               
0044e6   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
0044e8   ffe4                                                                                                               
0044ea   6ee4     MOVWF     0xe4,0x0                                                                                        
0044ec   cfda     MOVFF     0xfda,0xfe4                                                                                     
0044ee   ffe4                                                                                                               
0044f0   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0044f2   ffda                                                                                                               
0044f4   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
0044f6   ffe4                                                                                                               
0044f8   cfea     MOVFF     0xfea,0xfe4                                                                                     
0044fa   ffe4                                                                                                               
0044fc   cff3     MOVFF     0xff3,0xfe4                                                                                     
0044fe   ffe4                                                                                                               
004500   cff4     MOVFF     0xff4,0xfe4                                                                                     
004502   ffe4                                                                                                               
004504   ee00     LFSR      0x0,0x0                                                                                         
004506   f000                                                                                                               
004508   0e19     MOVLW     0x19                                                                                            
00450a   04e8     DECF      0xe8,0x0,0x0                                                                                    
00450c   e303     BNC       0x4514                                                                                          
00450e   cfee     MOVFF     0xfee,0xfe4                                                                                     
004510   ffe4                                                                                                               
004512   d7fb     BRA       0x450a                                                                                          
004514   52e6     MOVF      0xe6,0x1,0x0                                                                                    
004516   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
004518   ffe6                                                                                                               
00451a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00451c   ffd9                                                                                                               
00451e   0e02     MOVLW     0x2                                                                                             
004520   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	unsigned char Port_B;                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	unsigned char Port_B_Delta;                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	static long prevEnc1 = 0;                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	static long prevEnc2 = 0;                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004522   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004524   0b20     ANDLW     0x20                                                                                            
004526   e006     BZ        0x4534                                                                                          
004528   509d     MOVF      0x9d,0x0,0x0                                                                                    
00452a   0b20     ANDLW     0x20                                                                                            
00452c   e003     BZ        0x4534                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00452e   ec5c     CALL      0x50b8,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004530   f028                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004532   d0b5     BRA       0x469e         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004534   50a4     MOVF      0xa4,0x0,0x0                                                                                    
004536   0b20     ANDLW     0x20                                                                                            
004538   e006     BZ        0x4546                                                                                          
00453a   50a3     MOVF      0xa3,0x0,0x0                                                                                    
00453c   0b20     ANDLW     0x20                                                                                            
00453e   e003     BZ        0x4546                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004540   ec7b     CALL      0x50f6,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004542   f028                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004544   d0ac     BRA       0x469e         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004546   509e     MOVF      0x9e,0x0,0x0                                                                                    
004548   0b10     ANDLW     0x10                                                                                            
00454a   e006     BZ        0x4558                                                                                          
00454c   509d     MOVF      0x9d,0x0,0x0                                                                                    
00454e   0b10     ANDLW     0x10                                                                                            
004550   e003     BZ        0x4558                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004552   ec9a     CALL      0x5134,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004554   f028                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004556   d0a3     BRA       0x469e         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004558   50a4     MOVF      0xa4,0x0,0x0                                                                                    
00455a   0b10     ANDLW     0x10                                                                                            
00455c   e006     BZ        0x456a                                                                                          
00455e   50a3     MOVF      0xa3,0x0,0x0                                                                                    
004560   0b10     ANDLW     0x10                                                                                            
004562   e003     BZ        0x456a                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004564   ecb2     CALL      0x5164,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004566   f028                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004568   d09a     BRA       0x469e         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00456a   509e     MOVF      0x9e,0x0,0x0                                                                                    
00456c   0b02     ANDLW     0x2                                                                                             
00456e   e007     BZ        0x457e                                                                                          
004570   509d     MOVF      0x9d,0x0,0x0                                                                                    
004572   0b02     ANDLW     0x2                                                                                             
004574   e004     BZ        0x457e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004576   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004578   eca0     CALL      0x4340,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00457a   f021                                                                                                               
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00457c   d090     BRA       0x469e         	else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00457e   509e     MOVF      0x9e,0x0,0x0                                                                                    
004580   0b40     ANDLW     0x40                                                                                            
004582   e007     BZ        0x4592                                                                                          
004584   509d     MOVF      0x9d,0x0,0x0                                                                                    
004586   0b40     ANDLW     0x40                                                                                            
004588   e004     BZ        0x4592                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00458a   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00458c   eca2     CALL      0x4344,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00458e   f021                                                                                                               
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004590   d086     BRA       0x469e         	else if (INTCON3bits.INT2IF && INTCON3bits.INT2IE) // encoder 1 interrupt?      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004592   50f0     MOVF      0xf0,0x0,0x0                                                                                    
004594   0b02     ANDLW     0x2                                                                                             
004596   e007     BZ        0x45a6                                                                                          
004598   50f0     MOVF      0xf0,0x0,0x0                                                                                    
00459a   0b10     ANDLW     0x10                                                                                            
00459c   e004     BZ        0x45a6                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00459e   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0; // clear the interrupt flag                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_1                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045a0   ec58     CALL      0x5ab0,0x0     		Encoder_1_Int_Handler(); // call the left encoder interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045a2   f02d                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045a4   d07c     BRA       0x469e         	else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE) // encoder 2 interrupt?      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045a6   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0045a8   0b04     ANDLW     0x4                                                                                             
0045aa   e007     BZ        0x45ba                                                                                          
0045ac   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0045ae   0b20     ANDLW     0x20                                                                                            
0045b0   e004     BZ        0x45ba                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045b2   94f0     BCF       0xf0,0x2,0x0   		INTCON3bits.INT3IF = 0; // clear the interrupt flag                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_2                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045b4   ec94     CALL      0x5b28,0x0     		Encoder_2_Int_Handler(); // call right encoder interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045b6   f02d                                                                                                               
                                           		#endif                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045b8   d072     BRA       0x469e         	else if (INTCONbits.RBIF && INTCONbits.RBIE) // encoder 3-6 interrupt?          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045ba   50f2     MOVF      0xf2,0x0,0x0                                                                                    
0045bc   0b01     ANDLW     0x1                                                                                             
0045be   e018     BZ        0x45f0                                                                                          
0045c0   50f2     MOVF      0xf2,0x0,0x0                                                                                    
0045c2   0b08     ANDLW     0x8                                                                                             
0045c4   e015     BZ        0x45f0                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045c6   5081     MOVF      0x81,0x0,0x0   		Port_B = PORTB; // remove the "mismatch condition" by reading port b             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045c8   6edf     MOVWF     0xdf,0x0                                                                                        
0045ca   90f2     BCF       0xf2,0x0,0x0   		INTCONbits.RBIF = 0; // clear the interrupt flag                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045cc   50df     MOVF      0xdf,0x0,0x0   		Port_B_Delta = Port_B ^ Old_Port_B; // determine which bits have changed       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045ce   0102     MOVLB     0x2                                                                                             
0045d0   19c9     XORWF     0xc9,0x0,0x1                                                                                    
0045d2   6ee7     MOVWF     0xe7,0x0                                                                                        
0045d4   0e01     MOVLW     0x1                                                                                             
0045d6   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0045d8   ffdb                                                                                                               
0045da   cfdf     MOVFF     0xfdf,0x2c9    		Old_Port_B = Port_B; // save a copy of port b for next time around             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045dc   f2c9                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045de   a8db     BTFSS     0xdb,0x4,0x0   		if(Port_B_Delta & 0x10) // did external interrupt 3 change state?              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045e0   d000     BRA       0x45e2                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_3                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			Encoder_3_Int_Handler(Port_B & 0x10 ? 1 : 0); // call the encoder 3 interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#endif                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045e2   aadb     BTFSS     0xdb,0x5,0x0   		if(Port_B_Delta & 0x20) // did external interrupt 4 change state?              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045e4   d000     BRA       0x45e6                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_4                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			Encoder_4_Int_Handler(Port_B & 0x20 ? 1 : 0); // call the encoder 4 interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#endif                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045e6   acdb     BTFSS     0xdb,0x6,0x0   		if(Port_B_Delta & 0x40) // did external interrupt 5 change state?              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045e8   d000     BRA       0x45ea                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_5                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			Encoder_5_Int_Handler(Port_B & 0x40 ? 1 : 0); // call the encoder 5 interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#endif                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045ea   aedb     BTFSS     0xdb,0x7,0x0   		if(Port_B_Delta & 0x80) // did external interrupt 6 change state?              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045ec   d000     BRA       0x45ee                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_6                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			Encoder_6_Int_Handler(Port_B & 0x80 ? 1 : 0); // call the encoder 6 interrupt handler (in encoder.c) C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			#endif                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045ee   d057     BRA       0x469e         	} else if (PIR1bits.TMR1IF)                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045f0   a09e     BTFSS     0x9e,0x0,0x0                                                                                    
0045f2   d055     BRA       0x469e                                                                                          
                                           	{                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045f4   909e     BCF       0x9e,0x0,0x0   		PIR1bits.TMR1IF = 0; // Clear the Timer1 Interrupt Flag                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045f6   0e7f     MOVLW     0x7f           		TMR1H = 0x7F; 		 // Reset Timer 1                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045f8   6ecf     MOVWF     0xcf,0x0                                                                                        
0045fa   68ce     SETF      0xce,0x0       		TMR1L = 0xFF;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045fc   0101     MOVLB     0x1            		timerTicks++;                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0045fe   2bd5     INCF      0xd5,0x1,0x1                                                                                    
004600   0e00     MOVLW     0x0                                                                                             
004602   23d6     ADDWFC    0xd6,0x1,0x1                                                                                    
004604   23d7     ADDWFC    0xd7,0x1,0x1                                                                                    
004606   23d8     ADDWFC    0xd8,0x1,0x1                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004608   c1d5     MOVFF     0x1d5,0x44     		if(timerTicks & 1 == 0)	//May need fixing?                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00460a   f044                                                                                                               
00460c   c1d6     MOVFF     0x1d6,0x45                                                                                      
00460e   f045                                                                                                               
004610   c1d7     MOVFF     0x1d7,0x46                                                                                      
004612   f046                                                                                                               
004614   c1d8     MOVFF     0x1d8,0x47                                                                                      
004616   f047                                                                                                               
004618   6a44     CLRF      0x44,0x0                                                                                        
00461a   6a45     CLRF      0x45,0x0                                                                                        
00461c   6a46     CLRF      0x46,0x0                                                                                        
00461e   6a47     CLRF      0x47,0x0                                                                                        
004620   5044     MOVF      0x44,0x0,0x0                                                                                    
004622   1045     IORWF     0x45,0x0,0x0                                                                                    
004624   1046     IORWF     0x46,0x0,0x0                                                                                    
004626   1047     IORWF     0x47,0x0,0x0                                                                                    
004628   e03a     BZ        0x469e                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00462a   ec2c     CALL      0x5a58,0x0     			encoder1Vel = Get_Encoder_1_Count() - prevEnc1;                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00462c   f02d                                                                                                               
00462e   0101     MOVLB     0x1                                                                                             
004630   51dd     MOVF      0xdd,0x0,0x1                                                                                    
004632   5c34     SUBWF     0x34,0x0,0x0                                                                                    
004634   6e44     MOVWF     0x44,0x0                                                                                        
004636   51de     MOVF      0xde,0x0,0x1                                                                                    
004638   5835     SUBWFB    0x35,0x0,0x0                                                                                    
00463a   6e45     MOVWF     0x45,0x0                                                                                        
00463c   51df     MOVF      0xdf,0x0,0x1                                                                                    
00463e   5836     SUBWFB    0x36,0x0,0x0                                                                                    
004640   6e46     MOVWF     0x46,0x0                                                                                        
004642   51e0     MOVF      0xe0,0x0,0x1                                                                                    
004644   5837     SUBWFB    0x37,0x0,0x0                                                                                    
004646   6e47     MOVWF     0x47,0x0                                                                                        
004648   c044     MOVFF     0x44,0x1d9                                                                                      
00464a   f1d9                                                                                                               
00464c   c045     MOVFF     0x45,0x1da                                                                                      
00464e   f1da                                                                                                               
004650   ec68     CALL      0x5ad0,0x0     			encoder2Vel = Get_Encoder_2_Count() - prevEnc2;                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004652   f02d                                                                                                               
004654   0101     MOVLB     0x1                                                                                             
004656   51e1     MOVF      0xe1,0x0,0x1                                                                                    
004658   5c34     SUBWF     0x34,0x0,0x0                                                                                    
00465a   6e44     MOVWF     0x44,0x0                                                                                        
00465c   51e2     MOVF      0xe2,0x0,0x1                                                                                    
00465e   5835     SUBWFB    0x35,0x0,0x0                                                                                    
004660   6e45     MOVWF     0x45,0x0                                                                                        
004662   51e3     MOVF      0xe3,0x0,0x1                                                                                    
004664   5836     SUBWFB    0x36,0x0,0x0                                                                                    
004666   6e46     MOVWF     0x46,0x0                                                                                        
004668   51e4     MOVF      0xe4,0x0,0x1                                                                                    
00466a   5837     SUBWFB    0x37,0x0,0x0                                                                                    
00466c   6e47     MOVWF     0x47,0x0                                                                                        
00466e   c044     MOVFF     0x44,0x1db                                                                                      
004670   f1db                                                                                                               
004672   c045     MOVFF     0x45,0x1dc                                                                                      
004674   f1dc                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004676   ec2c     CALL      0x5a58,0x0     			prevEnc1 = Get_Encoder_1_Count();                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004678   f02d                                                                                                               
00467a   c034     MOVFF     0x34,0x1dd                                                                                      
00467c   f1dd                                                                                                               
00467e   c035     MOVFF     0x35,0x1de                                                                                      
004680   f1de                                                                                                               
004682   c036     MOVFF     0x36,0x1df                                                                                      
004684   f1df                                                                                                               
004686   c037     MOVFF     0x37,0x1e0                                                                                      
004688   f1e0                                                                                                               
00468a   ec68     CALL      0x5ad0,0x0     			prevEnc2 = Get_Encoder_2_Count();                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00468c   f02d                                                                                                               
00468e   c034     MOVFF     0x34,0x1e1                                                                                      
004690   f1e1                                                                                                               
004692   c035     MOVFF     0x35,0x1e2                                                                                      
004694   f1e2                                                                                                               
004696   c036     MOVFF     0x36,0x1e3                                                                                      
004698   f1e3                                                                                                               
00469a   c037     MOVFF     0x37,0x1e4                                                                                      
00469c   f1e4                                                                                                               
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	}                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  {                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  {                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  {                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  else                                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  {                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           //  }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00469e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0046a0   ffe1                                                                                                               
0046a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046a4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046a6   ffd9                                                                                                               
0046a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046aa   ee00     LFSR      0x0,0x18                                                                                        
0046ac   f018                                                                                                               
0046ae   0e19     MOVLW     0x19                                                                                            
0046b0   04e8     DECF      0xe8,0x0,0x0                                                                                    
0046b2   e303     BNC       0x46ba                                                                                          
0046b4   cfe5     MOVFF     0xfe5,0xfed                                                                                     
0046b6   ffed                                                                                                               
0046b8   d7fb     BRA       0x46b0                                                                                          
0046ba   cfe5     MOVFF     0xfe5,0xff4                                                                                     
0046bc   fff4                                                                                                               
0046be   cfe5     MOVFF     0xfe5,0xff3                                                                                     
0046c0   fff3                                                                                                               
0046c2   cfe5     MOVFF     0xfe5,0xfea                                                                                     
0046c4   ffea                                                                                                               
0046c6   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
0046c8   ffe9                                                                                                               
0046ca   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0046cc   ffda                                                                                                               
0046ce   50e5     MOVF      0xe5,0x0,0x0                                                                                    
0046d0   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
0046d2   ffe0                                                                                                               
0046d4   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
0046d6   ffd8                                                                                                               
0046d8   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             static char state = 0;	                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             static unsigned long prevTmr = 0;                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             static long ticks = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0046da   0101     MOVLB     0x1              timerTicks = 0;                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0046dc   6bd5     CLRF      0xd5,0x1                                                                                        
0046de   6bd6     CLRF      0xd6,0x1                                                                                        
0046e0   6bd7     CLRF      0xd7,0x1                                                                                        
0046e2   6bd8     CLRF      0xd8,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             */                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0046e4   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0046e6   0e7f     MOVLW     0x7f                                                                                            
0046e8   6f0b     MOVWF     0xb,0x1                                                                                         
0046ea   c20b     MOVFF     0x20b,0x20a                                                                                     
0046ec   f20a                                                                                                               
0046ee   c20b     MOVFF     0x20b,0x209                                                                                     
0046f0   f209                                                                                                               
0046f2   c20b     MOVFF     0x20b,0x208                                                                                     
0046f4   f208                                                                                                               
0046f6   c20b     MOVFF     0x20b,0x207                                                                                     
0046f8   f207                                                                                                               
0046fa   c20b     MOVFF     0x20b,0x206                                                                                     
0046fc   f206                                                                                                               
0046fe   c20b     MOVFF     0x20b,0x205                                                                                     
004700   f205                                                                                                               
004702   c20b     MOVFF     0x20b,0x204                                                                                     
004704   f204                                                                                                               
004706   6f13     MOVWF     0x13,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004708   c213     MOVFF     0x213,0x212                                                                                     
00470a   f212                                                                                                               
00470c   c213     MOVFF     0x213,0x211                                                                                     
00470e   f211                                                                                                               
004710   c213     MOVFF     0x213,0x210                                                                                     
004712   f210                                                                                                               
004714   c213     MOVFF     0x213,0x20f                                                                                     
004716   f20f                                                                                                               
004718   c213     MOVFF     0x213,0x20e                                                                                     
00471a   f20e                                                                                                               
00471c   c213     MOVFF     0x213,0x20d                                                                                     
00471e   f20d                                                                                                               
004720   c213     MOVFF     0x213,0x20c                                                                                     
004722   f20c                                                                                                               
004724   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004726   928d     BCF       0x8d,0x1,0x0                                                                                    
004728   908c     BCF       0x8c,0x0,0x0                                                                                    
00472a   908d     BCF       0x8d,0x0,0x0                                                                                    
00472c   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00472e   968d     BCF       0x8d,0x3,0x0                                                                                    
004730   948c     BCF       0x8c,0x2,0x0                                                                                    
004732   948d     BCF       0x8d,0x2,0x0                                                                                    
004734   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004736   9a8d     BCF       0x8d,0x5,0x0                                                                                    
004738   988c     BCF       0x8c,0x4,0x0                                                                                    
00473a   988d     BCF       0x8d,0x4,0x0                                                                                    
00473c   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00473e   9091     BCF       0x91,0x0,0x0                                                                                    
004740   9c8c     BCF       0x8c,0x6,0x0                                                                                    
004742   9c8d     BCF       0x8d,0x6,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004744   0101     MOVLB     0x1              Left.Vsetpoint = 0;                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004746   6b86     CLRF      0x86,0x1                                                                                        
004748   6b87     CLRF      0x87,0x1                                                                                        
00474a   0101     MOVLB     0x1              Right.Vsetpoint = 0;                                                           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00474c   6baa     CLRF      0xaa,0x1                                                                                        
00474e   6bab     CLRF      0xab,0x1                                                                                        
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004750   0e14     MOVLW     0x14             Right.velLim = 20;                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004752   6fb4     MOVWF     0xb4,0x1                                                                                        
004754   6bb5     CLRF      0xb5,0x1                                                                                        
004756   0101     MOVLB     0x1              Left.velLim = 20;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004758   6f90     MOVWF     0x90,0x1                                                                                        
00475a   6b91     CLRF      0x91,0x1                                                                                        
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00475c   0102     MOVLB     0x2              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00475e   ad21     BTFSS     0x21,0x6,0x1                                                                                    
004760   d082     BRA       0x4866                                                                                          
004864   d77b     BRA       0x475c                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004762   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004764   a140     BTFSS     0x40,0x0,0x1                                                                                    
004766   d07e     BRA       0x4864                                                                                          
                                               {                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004768   0e20     MOVLW     0x20           		Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00476a   6ee6     MOVWF     0xe6,0x0                                                                                        
00476c   0e02     MOVLW     0x2                                                                                             
00476e   6ee6     MOVWF     0xe6,0x0                                                                                        
004770   ec36     CALL      0x266c,0x0                                                                                      
004772   f013                                                                                                               
004774   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004776   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004778   d877     RCALL     0x4868         		Process_Data_From_Local_IO(); //Updates Gyro, ADC                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00477a   5088     MOVF      0x88,0x0,0x0   		relay1_fwd = !rc_dig_in18;  /* Power pump only if pressure switch is off. */   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00477c   0b80     ANDLW     0x80                                                                                            
00477e   e002     BZ        0x4784                                                                                          
004780   908d     BCF       0x8d,0x0,0x0                                                                                    
004782   d001     BRA       0x4786                                                                                          
004784   808d     BSF       0x8d,0x0,0x0                                                                                    
004786   908c     BCF       0x8c,0x0,0x0     		relay1_rev = 0;                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004788   0101     MOVLB     0x1            		switch(state)                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00478a   51e5     MOVF      0xe5,0x0,0x1                                                                                    
00478c   e001     BZ        0x4790                                                                                          
00478e   d00e     BRA       0x47ac                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			case 0:                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				//Left.mode = Right.mode = 1; //Set motors to position mode                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004790   0101     MOVLB     0x1            				Left.Psetpoint = Right.Psetpoint = INCHESTOCLICKS(48);                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004792   6ba6     CLRF      0xa6,0x1                                                                                        
004794   6ba7     CLRF      0xa7,0x1                                                                                        
004796   6ba8     CLRF      0xa8,0x1                                                                                        
004798   6ba9     CLRF      0xa9,0x1                                                                                        
00479a   c1a6     MOVFF     0x1a6,0x182                                                                                     
00479c   f182                                                                                                               
00479e   c1a7     MOVFF     0x1a7,0x183                                                                                     
0047a0   f183                                                                                                               
0047a2   c1a8     MOVFF     0x1a8,0x184                                                                                     
0047a4   f184                                                                                                               
0047a6   c1a9     MOVFF     0x1a9,0x185                                                                                     
0047a8   f185                                                                                                               
0047aa   d000     BRA       0x47ac         			break;	                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		                                                                               C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		/* How to turn:                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		switch(state)                                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			case 0:                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				if(timerTicks > 38)                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           					state++;                                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           					printf("State1\n");				                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			case 1:                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				if(turn(450, 0))                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				{                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           					state++;						                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				}                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			case 2:                                                                       C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				Left.Vsetpoint = 0;                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           				Right.Vsetpoint = 0;                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			break;                                                                        C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		}*/                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047ac   0ee6     MOVLW     0xe6           		if(timerTicks - prevTmr > 1)			//52.4ms Timer aea                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047ae   6ee9     MOVWF     0xe9,0x0                                                                                        
0047b0   0e01     MOVLW     0x1                                                                                             
0047b2   6eea     MOVWF     0xea,0x0                                                                                        
0047b4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0047b6   0101     MOVLB     0x1                                                                                             
0047b8   5dd5     SUBWF     0xd5,0x0,0x1                                                                                    
0047ba   6e00     MOVWF     0x0,0x0                                                                                         
0047bc   50ee     MOVF      0xee,0x0,0x0                                                                                    
0047be   59d6     SUBWFB    0xd6,0x0,0x1                                                                                    
0047c0   6e01     MOVWF     0x1,0x0                                                                                         
0047c2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0047c4   59d7     SUBWFB    0xd7,0x0,0x1                                                                                    
0047c6   6e02     MOVWF     0x2,0x0                                                                                         
0047c8   50ee     MOVF      0xee,0x0,0x0                                                                                    
0047ca   59d8     SUBWFB    0xd8,0x0,0x1                                                                                    
0047cc   6e03     MOVWF     0x3,0x0                                                                                         
0047ce   0e01     MOVLW     0x1                                                                                             
0047d0   80d8     BSF       0xd8,0x0,0x0                                                                                    
0047d2   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0047d4   0e00     MOVLW     0x0                                                                                             
0047d6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0047d8   0e00     MOVLW     0x0                                                                                             
0047da   5402     SUBFWB    0x2,0x0,0x0                                                                                     
0047dc   0e00     MOVLW     0x0                                                                                             
0047de   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0047e0   e22b     BC        0x4838                                                                                          
                                           		{                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047e2   c1d5     MOVFF     0x1d5,0x1e6    			prevTmr = timerTicks;			                                                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047e4   f1e6                                                                                                               
0047e6   c1d6     MOVFF     0x1d6,0x1e7                                                                                     
0047e8   f1e7                                                                                                               
0047ea   c1d7     MOVFF     0x1d7,0x1e8                                                                                     
0047ec   f1e8                                                                                                               
0047ee   c1d8     MOVFF     0x1d8,0x1e9                                                                                     
0047f0   f1e9                                                                                                               
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	#ifndef DRIVE_DEBUG                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           			pwm15 = pwm16 = doVelPid(&Left,  Get_Encoder_1_Count(), L_MOTOR_DIR);         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           	#endif                                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047f2   0e01     MOVLW     0x1            			pwm13 = pwm14 = doVelPid(&Right, Get_Encoder_2_Count(), R_MOTOR_DIR);         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
0047f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0047f6   6ae6     CLRF      0xe6,0x0                                                                                        
0047f8   ec68     CALL      0x5ad0,0x0                                                                                      
0047fa   f02d                                                                                                               
0047fc   c034     MOVFF     0x34,0x0                                                                                        
0047fe   f000                                                                                                               
004800   c035     MOVFF     0x35,0x1                                                                                        
004802   f001                                                                                                               
004804   c036     MOVFF     0x36,0x2                                                                                        
004806   f002                                                                                                               
004808   c037     MOVFF     0x37,0x3                                                                                        
00480a   f003                                                                                                               
00480c   c000     MOVFF     0x0,0xfe6                                                                                       
00480e   ffe6                                                                                                               
004810   c001     MOVFF     0x1,0xfe6                                                                                       
004812   ffe6                                                                                                               
004814   c002     MOVFF     0x2,0xfe6                                                                                       
004816   ffe6                                                                                                               
004818   c003     MOVFF     0x3,0xfe6                                                                                       
00481a   ffe6                                                                                                               
00481c   0ea4     MOVLW     0xa4                                                                                            
00481e   6ee6     MOVWF     0xe6,0x0                                                                                        
004820   0e01     MOVLW     0x1                                                                                             
004822   6ee6     MOVWF     0xe6,0x0                                                                                        
004824   ec52     CALL      0x8a4,0x0                                                                                       
004826   f004                                                                                                               
004828   6ef5     MOVWF     0xf5,0x0                                                                                        
00482a   0e08     MOVLW     0x8                                                                                             
00482c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00482e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004830   cff3     MOVFF     0xff3,0x211                                                                                     
004832   f211                                                                                                               
004834   cff3     MOVFF     0xff3,0x210                                                                                     
004836   f210                                                                                                               
                                           	     }                                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           		//Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004838   c213     MOVFF     0x213,0xfe6    		PWM(pwm13,pwm14,pwm15,pwm16);                                                  C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00483a   ffe6                                                                                                               
00483c   c212     MOVFF     0x212,0xfe6                                                                                     
00483e   ffe6                                                                                                               
004840   c211     MOVFF     0x211,0xfe6                                                                                     
004842   ffe6                                                                                                               
004844   c210     MOVFF     0x210,0xfe6                                                                                     
004846   ffe6                                                                                                               
004848   ec57     CALL      0x58ae,0x0                                                                                      
00484a   f02c                                                                                                               
00484c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00484e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004850   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004852   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004854   0e00     MOVLW     0x0                    Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004856   6ee6     MOVWF     0xe6,0x0                                                                                        
004858   0e02     MOVLW     0x2                                                                                             
00485a   6ee6     MOVWF     0xe6,0x0                                                                                        
00485c   ec4f     CALL      0x269e,0x0                                                                                      
00485e   f013                                                                                                               
004860   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004862   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             }                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004866   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************* C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           *******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           {                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                             // new ADC data available?                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004868   ec8b     CALL      0x4316,0x0       if(Get_ADC_Result_Count())                                                     C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
00486a   f021                                                                                                               
00486c   0900     IORLW     0x0                                                                                             
00486e   e004     BZ        0x4878                                                                                          
                                             {                                                                              C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004870   ec16     CALL      0x4e2c,0x0         Process_Gyro_Data();                                                         C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004872   f027                                                                                                               
                                           	                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004874   ec9b     CALL      0x4336,0x0         Reset_ADC_Result_Count();                                                    C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004876   f021                                                                                                               
                                             }	                                                                             C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
004878   0012     RETURN    0x0            }                                                                                C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                                                                                                            C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           /******************************************************************************/ C:\trcCode\Repository\Summer\Oceanus\user_routines_fast.c
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
006088   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
00608a   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
00608c   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
00608e   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
006090   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006060   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006062   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006064   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006066   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006068   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00606a   d000     BRA       0x606c             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00606c   d000     BRA       0x606e             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
00606e   d000     BRA       0x6070             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006070   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006072   d7fa     BRA       0x6068             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
006074   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006024   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006026   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006028   6e48     MOVWF     0x48,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00602a   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00602c   d001     BRA       0x6030             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00602e   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006030   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006032   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006034   d7fe     BRA       0x6032             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006036   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006038   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00603a   d7fe     BRA       0x6038             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00603c   2e48     DECFSZ    0x48,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00603e   d7f7     BRA       0x602e             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006040   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006042   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003ce2   ae37     BTFSS     0x37,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003ce4   d002     BRA       0x3cea                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         One byte integer to Float conversion                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832U: One byte unsigned integer in iA0                             C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832S: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cdc   9e3f     BCF       0x3f,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cde   d005     BRA       0x3cea                   bra       jI2F08Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce0   9e3f     BCF       0x3f,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     braClr    iA0,7,jI2F08Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce6   6c37     NEGF      0x37,0x0                 negf      iA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce8   8e3f     BSF       0x3f,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           jI2F08Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cea   c037     MOVFF     0x37,0x31                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cec   f031                                                                                                               
003cee   6a30     CLRF      0x30,0x0                 clrf      fW1                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf0   6a43     CLRF      0x43,0x0                 clrf      fW2                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf2   6a42     CLRF      0x42,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf4   0e86     MOVLW     0x86                     movlw     0x86                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf6   6e32     MOVWF     0x32,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf8   6a33     CLRF      0x33,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cfa   ef09     GOTO      0x4012                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cfc   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d50   6a42     CLRF      0x42,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d52   6a43     CLRF      0x43,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d54   6a30     CLRF      0x30,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d56   6a31     CLRF      0x31,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d7e   90d8     BCF       0xd8,0x0,0x0           bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d88   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d80   3635     RLCF      0x35,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d8a   3642     RLCF      0x42,0x1,0x0                                                                                    
003d82   3636     RLCF      0x36,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d8c   3643     RLCF      0x43,0x1,0x0                                                                                    
003d84   3637     RLCF      0x37,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d8e   3630     RLCF      0x30,0x1,0x0                                                                                    
003d86   3638     RLCF      0x38,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d90   3631     RLCF      0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6a   503a     MOVF      0x3a,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6c   2635     ADDWF     0x35,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6e   503b     MOVF      0x3b,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d70   2236     ADDWFC    0x36,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d72   503c     MOVF      0x3c,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d74   2237     ADDWFC    0x37,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d76   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d78   2238     ADDWFC    0x38,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d58   503a     MOVF      0x3a,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5a   5e35     SUBWF     0x35,0x1,0x0           subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5c   503b     MOVF      0x3b,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5e   5a36     SUBWFB    0x36,0x1,0x0           subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d60   503c     MOVF      0x3c,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d62   5a37     SUBWFB    0x37,0x1,0x0           subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d64   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d66   5a38     SUBWFB    0x38,0x1,0x0           subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d0e   a23f     BTFSS     0x3f,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d22   a03f     BTFSS     0x3f,0x0,0x0                                                                                    
003d10   d005     BRA       0x3d1c                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d24   d005     BRA       0x3d30                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d08   b63f     BTFSC     0x3f,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d12   ba3f     BTFSC     0x3f,0x5,0x0                                                                                    
003d1c   ba3f     BTFSC     0x3f,0x5,0x0                                                                                    
003d26   b83f     BTFSC     0x3f,0x4,0x0                                                                                    
003d30   b83f     BTFSC     0x3f,0x4,0x0                                                                                    
003d0a   efed     GOTO      0x3fda                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d0c   f01f                                                                                                               
003d14   efed     GOTO      0x3fda                                                                                          
003d16   f01f                                                                                                               
003d1e   ef00     GOTO      0x4000                                                                                          
003d20   f020                                                                                                               
003d28   efed     GOTO      0x3fda                                                                                          
003d2a   f01f                                                                                                               
003d32   eff4     GOTO      0x3fe8                                                                                          
003d34   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; FPD32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         Division  fA/fB for floats fA and fB                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format float fA = fA/fB                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     GLOBAL FPD32                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           FPD32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003cfe   6a3f     CLRF      0x3f,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d00   ec45     CALL      0x408a,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d02   f020                                                                                                               
003d04   ec5d     CALL      0x40ba,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d06   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Is b also infinite?                                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnNaN                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d18   eff4     GOTO      0x3fe8                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d1a   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotInf                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B infinite, A finite => return Zero                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnSignZero                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jANotZero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jSignedZero:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; A == 0                                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN     ; B == 0 => 0/0            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d2c   ef00     GOTO      0x4000                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d2e   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotZero                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnSignInf ; B == 0 => Finite/0       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; ExpW = (ExpA+127) - (ExpB+127) + 127                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d36   6a33     CLRF      0x33,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d38   0e7f     MOVLW     0x7f                     movlw     FLT_BIAS                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3a   2438     ADDWF     0x38,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3c   6e32     MOVWF     0x32,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3e   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d40   2233     ADDWFC    0x33,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d42   503d     MOVF      0x3d,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d44   5e32     SUBWF     0x32,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d46   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d48   5a33     SUBWFB    0x33,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Form the quotient and remainder                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d4a   0e1a     MOVLW     0x1a                     movlw     26                  ; quotient width                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d4c   6e40     MOVWF     0x40,0x0                 movwf     fT1                 ; loop counter                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d4e   6a38     CLRF      0x38,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Init quotient                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig -= fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Sub43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d68   e709     BNN       0x3d7c                   bnn       jNoAdjust           ; fAsig >= 0                             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig += fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Add43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d7a   d001     BRA       0x3d7e                   bra       jNext            ; Next quotient bit is zero ...             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNoAdjust:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Insert quotient bit. Location picked so quotient will be            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; left-justified in fW0                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d7c   8a42     BSF       0x42,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNext:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fA2,fA1,fA0,fAexp                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d92   2e40     DECFSZ    0x40,0x1,0x0             decfsz    fT1,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d94   d7e1     BRA       0x3d58                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;------- Sticky bits                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Quotient consists of 26 bits left-justified in fW0->fW3                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Add sticky bit in position bit 5 of fW3 which is just to right of the         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Round bit.                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d96   5037     MOVF      0x37,0x0,0x0             movf      fA0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d98   1036     IORWF     0x36,0x0,0x0             iorwf     fA1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d9a   1035     IORWF     0x35,0x0,0x0             iorwf     fA2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d9c   a4d8     BTFSS     0xd8,0x2,0x0             btfss     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d9e   8a42     BSF       0x42,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003da0   ef09     GOTO      0x4012                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003da2   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df0   6a42     CLRF      0x42,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df2   6a43     CLRF      0x43,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df4   6a30     CLRF      0x30,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df6   6a31     CLRF      0x31,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e08   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e18   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e0a   2643     ADDWF     0x43,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e1a   2643     ADDWF     0x43,0x1,0x0                                                                                    
003e0c   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e1c   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e0e   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e1e   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003e10   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e20   0e00     MOVLW     0x0                                                                                             
003e12   2231     ADDWFC    0x31,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e22   2231     ADDWFC    0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e5e   50f4     MOVF      0xf4,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e6e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e60   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e70   2642     ADDWF     0x42,0x1,0x0                                                                                    
003e62   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e72   0e00     MOVLW     0x0                                                                                             
003e64   2243     ADDWFC    0x43,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e74   2243     ADDWFC    0x43,0x1,0x0                                                                                    
003e66   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e76   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003e68   2231     ADDWFC    0x31,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e78   2231     ADDWFC    0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e28   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e4c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e2a   2642     ADDWF     0x42,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3c   2642     ADDWF     0x42,0x1,0x0                                                                                    
003e4e   2642     ADDWF     0x42,0x1,0x0                                                                                    
003e2c   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3e   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e50   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e2e   2243     ADDWFC    0x43,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e40   2243     ADDWFC    0x43,0x1,0x0                                                                                    
003e52   2243     ADDWFC    0x43,0x1,0x0                                                                                    
003e30   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e42   0e00     MOVLW     0x0                                                                                             
003e54   0e00     MOVLW     0x0                                                                                             
003e32   2230     ADDWFC    0x30,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e44   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003e56   2230     ADDWFC    0x30,0x1,0x0                                                                                    
003e34   2231     ADDWFC    0x31,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e46   2231     ADDWFC    0x31,0x1,0x0                                                                                    
003e58   2231     ADDWFC    0x31,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df8   503c     MOVF      0x3c,0x0,0x0           movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e04   503b     MOVF      0x3b,0x0,0x0                                                                                    
003e14   503c     MOVF      0x3c,0x0,0x0                                                                                    
003e24   503a     MOVF      0x3a,0x0,0x0                                                                                    
003e36   503b     MOVF      0x3b,0x0,0x0                                                                                    
003e48   503c     MOVF      0x3c,0x0,0x0                                                                                    
003e5a   503a     MOVF      0x3a,0x0,0x0                                                                                    
003e6a   503b     MOVF      0x3b,0x0,0x0                                                                                    
003dfa   0237     MULWF     0x37,0x0               mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e06   0237     MULWF     0x37,0x0                                                                                        
003e16   0236     MULWF     0x36,0x0                                                                                        
003e26   0237     MULWF     0x37,0x0                                                                                        
003e38   0236     MULWF     0x36,0x0                                                                                        
003e4a   0235     MULWF     0x35,0x0                                                                                        
003e5c   0236     MULWF     0x36,0x0                                                                                        
003e6c   0235     MULWF     0x35,0x0                                                                                        
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dd0   b03f     BTFSC     0x3f,0x0,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dd2   d002     BRA       0x3dd8                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003db4   a23f     BTFSS     0x3f,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dc2   aa3f     BTFSS     0x3f,0x5,0x0                                                                                    
003dd4   a83f     BTFSS     0x3f,0x4,0x0                                                                                    
003db6   d005     BRA       0x3dc2                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dc4   d005     BRA       0x3dd0                                                                                          
003dd6   d002     BRA       0x3ddc                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dae   b63f     BTFSC     0x3f,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003db8   b83f     BTFSC     0x3f,0x4,0x0                                                                                    
003dc6   b03f     BTFSC     0x3f,0x0,0x0                                                                                    
003db0   efed     GOTO      0x3fda                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003db2   f01f                                                                                                               
003dba   efed     GOTO      0x3fda                                                                                          
003dbc   f01f                                                                                                               
003dc8   efed     GOTO      0x3fda                                                                                          
003dca   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; FPM32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         Mutiplication  fA*fB for floats fA and fB                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format float fA = fA*fB                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------------------------------------------------------------------------------  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     GLOBAL FPM32                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           FPM32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da4   6a3f     CLRF      0x3f,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da6   ec45     CALL      0x408a,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da8   f020                                                                                                               
003daa   ec5d     CALL      0x40ba,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dac   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Is b zero                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN  ; Inf * Zero => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dbe   eff4     GOTO      0x3fe8                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dc0   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A not infinite                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBothFinite                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A finite, B infinite                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnNaN  ; Zero * Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dcc   eff4     GOTO      0x3fe8                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dce   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothFinite:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braSet    fFlg,FLG_ZERO_A,jHaveZero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jHaveZero:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A or B is zero                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Return zero with sign of product                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dd8   ef00     GOTO      0x4000                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dda   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothNotZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; ExpW = (ExpA+127) + (ExpB+127) - 127 + 1                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003ddc   6a33     CLRF      0x33,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dde   503d     MOVF      0x3d,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de0   2438     ADDWF     0x38,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de2   6e32     MOVWF     0x32,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de4   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de6   2233     ADDWFC    0x33,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de8   0e7e     MOVLW     0x7e                     movlw     FLT_BIAS-1                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dea   5e32     SUBWF     0x32,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dec   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dee   5a33     SUBWFB    0x33,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Not all products are calculated and not all products are included             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; This will have a slight effect on the rounding and could cause                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a round toward zero when a round up is required by IEEE754                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round to nearest mode.  Effectively the round up threshold is changed         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; from 0.5 to about 0.5001                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a0b0    a0b0                    not     not                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a1b0    a1b0            added   added                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a0b1    a0b1             |       |                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a2b0    a2b0     V       V                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a1b1    a1b1                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a0b2    a0b2                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a1b2    a1b2                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a2b1    a2b1                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                 a2b2    a2b2                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; added to get                                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW0      fW1     fW2     fW3    NA      NA                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; If msb of fW0   is 0 then the results will have to be left shifted            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; which will move the msb of fA3 into fA2. After this is done then              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; the msb of fW3 becomes the Round bit and the rest of the less significant     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; bits combine to form the Sticky bit.  Since the full product is not           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; calculated fW3 could be a maximum of 2 too small. Since bits 0 -> 6 of        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW3 are used only for rounding the effect is a very small failure to          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round up.                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dfc   cff4     MOVFF     0xff4,0x31               movff     PRODH,fW0                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dfe   f031                                                                                                               
003e00   cff3     MOVFF     0xff3,0x30               movff     PRODL,fW1                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003e02   f030                                                                                                               
                                                     Mul2      fA0,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Start with form 0.f * 0.f                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Results can be fW0 = 11xxxxxx -> 01xxxxxx                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Round and partial Sticky bits in fW3.                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; One bit of signficant in fW3 in the 01xxxxxx case                             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003e7a   ef09     GOTO      0x4012                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003e7c   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e7e   6a3e     CLRF      0x3e,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e80   ae3c     BTFSS     0x3c,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e82   ef48     GOTO      0x3e90                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e84   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e86   6c3b     NEGF      0x3b,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e88   1e3c     COMF      0x3c,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8a   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8c   223c     ADDWFC    0x3c,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8e   1e3e     COMF      0x3e,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e90   ae37     BTFSS     0x37,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e92   ef50     GOTO      0x3ea0                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e94   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e96   6c36     NEGF      0x36,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e98   1e37     COMF      0x37,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9a   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9c   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9e   1e3e     COMF      0x3e,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea0   ecc6     CALL      0x5f8c,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea2   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea4   be37     BTFSC     0x37,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea6   ef60     GOTO      0x3ec0         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea8   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eaa   ae3e     BTFSS     0x3e,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eac   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eae   6c36     NEGF      0x36,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb0   1e37     COMF      0x37,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb2   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb4   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb6   6c32     NEGF      0x32,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb8   1e33     COMF      0x33,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eba   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ebc   2233     ADDWFC    0x33,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ebe   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ec0   be3e     BTFSC     0x3e,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ec2   ef57     GOTO      0x3eae         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ec4   f01f                                                                                                               
003ec6   883f     BSF       0x3f,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ec8   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f8c   6a33     CLRF      0x33,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f8e   6a32     CLRF      0x32,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f90   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f92   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f94   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f96   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f98   3637     RLCF      0x37,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f9a   3632     RLCF      0x32,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f9c   3633     RLCF      0x33,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005f9e   503b     MOVF      0x3b,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fa0   5c32     SUBWF     0x32,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fa2   503c     MOVF      0x3c,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fa4   5833     SUBWFB    0x33,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fa6   e305     BNC       0x5fb2         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fa8   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005faa   5e32     SUBWF     0x32,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fac   503c     MOVF      0x3c,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fae   5a33     SUBWFB    0x33,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fb0   2a36     INCF      0x36,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fb2   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fb4   d7f0     BRA       0x5f96             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005fb6   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eca   6a3e     CLRF      0x3e,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ecc   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ece   ae3c     BTFSS     0x3c,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed0   ef72     GOTO      0x3ee4         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed2   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed4   6c39     NEGF      0x39,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed6   1e3a     COMF      0x3a,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed8   1e3b     COMF      0x3b,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eda   1e3c     COMF      0x3c,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003edc   223a     ADDWFC    0x3a,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ede   223b     ADDWFC    0x3b,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee0   223c     ADDWFC    0x3c,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee2   1e3e     COMF      0x3e,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee4   ae37     BTFSS     0x37,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee6   ef7d     GOTO      0x3efa         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee8   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eea   6c34     NEGF      0x34,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eec   1e35     COMF      0x35,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eee   1e36     COMF      0x36,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef0   1e37     COMF      0x37,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef2   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef4   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef6   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef8   1e3e     COMF      0x3e,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efa   ec83     CALL      0x5f06,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efc   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efe   be37     BTFSC     0x37,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f00   ef94     GOTO      0x3f28         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f02   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f04   ae3e     BTFSS     0x3e,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f06   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f08   6c34     NEGF      0x34,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0a   1e35     COMF      0x35,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0c   1e36     COMF      0x36,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0e   1e37     COMF      0x37,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f10   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f12   2235     ADDWFC    0x35,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f14   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f16   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f18   6c30     NEGF      0x30,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1a   1e31     COMF      0x31,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1c   1e32     COMF      0x32,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1e   1e33     COMF      0x33,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f20   2231     ADDWFC    0x31,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f22   2232     ADDWFC    0x32,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f24   2233     ADDWFC    0x33,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f26   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f28   be3e     BTFSC     0x3e,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f2a   ef84     GOTO      0x3f08         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f2c   f01f                                                                                                               
003f2e   883f     BSF       0x3f,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f30   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f06   6a33     CLRF      0x33,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f08   6a32     CLRF      0x32,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f0a   6a31     CLRF      0x31,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f0c   6a30     CLRF      0x30,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f0e   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f10   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f12   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f14   3634     RLCF      0x34,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f16   3635     RLCF      0x35,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f18   3636     RLCF      0x36,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f1a   3637     RLCF      0x37,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f1c   3630     RLCF      0x30,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f1e   3631     RLCF      0x31,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f20   3632     RLCF      0x32,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f22   3633     RLCF      0x33,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f24   5039     MOVF      0x39,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f26   5c30     SUBWF     0x30,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f28   503a     MOVF      0x3a,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f2a   5831     SUBWFB    0x31,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f2c   503b     MOVF      0x3b,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f2e   5832     SUBWFB    0x32,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f30   503c     MOVF      0x3c,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f32   5833     SUBWFB    0x33,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f34   e309     BNC       0x5f48         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f36   5039     MOVF      0x39,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f38   5e30     SUBWF     0x30,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f3a   503a     MOVF      0x3a,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f3c   5a31     SUBWFB    0x31,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f3e   503b     MOVF      0x3b,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f40   5a32     SUBWFB    0x32,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f42   503c     MOVF      0x3c,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f44   5a33     SUBWFB    0x33,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f46   2a34     INCF      0x34,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f48   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f4a   d7e4     BRA       0x5f14             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005f4c   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f32   c037     MOVFF     0x37,0x43      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f34   f043                                                                                                               
003f36   c036     MOVFF     0x36,0x42      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f38   f042                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f3a   5036     MOVF      0x36,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f3c   023b     MULWF     0x3b,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f3e   cff4     MOVFF     0xff4,0x35     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f40   f035                                                                                                               
003f42   cff3     MOVFF     0xff3,0x34     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f44   f034                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f46   5037     MOVF      0x37,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f48   023c     MULWF     0x3c,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f4a   cff4     MOVFF     0xff4,0x37     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f4c   f037                                                                                                               
003f4e   cff3     MOVFF     0xff3,0x36     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f50   f036                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f52   023b     MULWF     0x3b,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f54   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f56   2635     ADDWF     0x35,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f58   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5a   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5e   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f60   5042     MOVF      0x42,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f62   023c     MULWF     0x3c,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f64   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f66   2635     ADDWF     0x35,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f68   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6a   2236     ADDWFC    0x36,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6e   2237     ADDWFC    0x37,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f70   ae3c     BTFSS     0x3c,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f72   efbf     GOTO      0x3f7e         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f74   f01f                                                                                                               
003f76   5042     MOVF      0x42,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f78   5e36     SUBWF     0x36,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7a   5043     MOVF      0x43,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7c   5a37     SUBWFB    0x37,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7e   ae43     BTFSS     0x43,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f80   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f82   503b     MOVF      0x3b,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f84   5e36     SUBWF     0x36,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f86   503c     MOVF      0x3c,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f88   5a37     SUBWFB    0x37,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f8a   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005cfe   5034     MOVF      0x34,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d00   0239     MULWF     0x39,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d02   cff3     MOVFF     0xff3,0x30         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d04   f030                                                                                                               
005d06   cff4     MOVFF     0xff4,0x31         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d08   f031                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d0a   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d0c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d0e   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d10   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d12   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d14   6e32     MOVWF     0x32,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d16   5034     MOVF      0x34,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d18   023b     MULWF     0x3b,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d1a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d1c   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d1e   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d20   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d22   6e33     MOVWF     0x33,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d24   5034     MOVF      0x34,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d26   023c     MULWF     0x3c,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d28   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d2a   2633     ADDWF     0x33,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d2c   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d2e   0239     MULWF     0x39,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d30   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d32   2631     ADDWF     0x31,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d34   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d36   2232     ADDWFC    0x32,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d38   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d3a   2233     ADDWFC    0x33,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d3c   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d3e   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d40   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d42   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d44   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d46   2233     ADDWFC    0x33,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d48   5035     MOVF      0x35,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d4a   023b     MULWF     0x3b,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d4c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d4e   2633     ADDWF     0x33,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d50   5036     MOVF      0x36,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d52   0239     MULWF     0x39,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d54   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d56   2632     ADDWF     0x32,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d58   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d5a   2233     ADDWFC    0x33,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d5c   5036     MOVF      0x36,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d5e   023a     MULWF     0x3a,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d60   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d62   2633     ADDWF     0x33,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d64   5037     MOVF      0x37,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d66   0239     MULWF     0x39,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d68   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d6a   2633     ADDWF     0x33,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
005d6c   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f9c   b43f     BTFSC     0x3f,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb0   b03f     BTFSC     0x3f,0x0,0x0                                                                                    
003f9e   d003     BRA       0x3fa6                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb2   d7fc     BRA       0x3fac                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f98   a23f     BTFSS     0x3f,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fce   a43f     BTFSS     0x3f,0x2,0x0                                                                                    
003fd4   ae37     BTFSS     0x37,0x7,0x0                                                                                    
003f9a   d00a     BRA       0x3fb0                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fd0   d003     BRA       0x3fd8                                                                                          
003fd6   d7ea     BRA       0x3fac                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fc0   0e86     MOVLW     0x86                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fc2   5c38     SUBWF     0x38,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fc4   e004     BZ        0x3fce                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fba   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fbc   6438     CPFSGT    0x38,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fbe   d7f6     BRA       0x3fac                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb4   0e87     MOVLW     0x87                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb6   6038     CPFSLT    0x38,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb8   d7f1     BRA       0x3f9c                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f92   b63f     BTFSC     0x3f,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f94   efd0     GOTO      0x3fa0                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f96   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; INT3208:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Float to one byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         NaN                 0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         +Infinity           0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         -Infinity           0x80                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         255->128            0xFF=>0x80                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         <-128               0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         INT3208U: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     GLOBAL INT3208                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           INT3208:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f8c   6a3f     CLRF      0x3f,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f8e   ec45     CALL      0x408a,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f90   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa0   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa2   6e37     MOVWF     0x37,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa4   d019     BRA       0x3fd8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa6   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa8   6e37     MOVWF     0x37,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003faa   d016     BRA       0x3fd8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fac   6a37     CLRF      0x37,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fae   d014     BRA       0x3fd8                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFgeL   fAexp,0x87,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFeqL   fAexp,0x86,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc6   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc8   3237     RRCF      0x37,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fca   2a38     INCF      0x38,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fcc   d7f9     BRA       0x3fc0                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fd2   6c37     NEGF      0x37,0x0                 negf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fA0,7,jZero             ;; too large                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fd8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ea2   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ea4   ffe6                                                                                                               
005ea6   cfda     MOVFF     0xfda,0xfe6                                                                                     
005ea8   ffe6                                                                                                               
005eaa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005eac   ffd9                                                                                                               
005eae   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005eb0   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eb2   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eb4   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eb6   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eb8   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
005eba   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ebc   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ebe   d002     BRA       0x5ec4                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ec0   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ec2   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ec4   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ec6   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ec8   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eca   d002     BRA       0x5ed0                                                                                          
005ecc   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ece   d001     BRA       0x5ed2           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ed0   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ed2   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ed4   d002     BRA       0x5eda                                                                                          
005ed6   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ed8   d001     BRA       0x5edc           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eda   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005edc   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ede   d002     BRA       0x5ee4                                                                                          
005ee0   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ee2   d001     BRA       0x5ee6           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ee4   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ee6   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ee8   d002     BRA       0x5eee                                                                                          
005eea   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eec   d001     BRA       0x5ef0           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005eee   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ef0   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ef2   50db     MOVF      0xdb,0x0,0x0                                                                                    
005ef4   6eaf     MOVWF     0xaf,0x0                                                                                        
005ef6   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005ef8   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005efa   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005efc   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005efe   ffda                                                                                                               
005f00   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005f02   ffd9                                                                                                               
005f04   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d6e   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d70   ffe6                                                                                                               
005d72   cfda     MOVFF     0xfda,0xfe6                                                                                     
005d74   ffe6                                                                                                               
005d76   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005d78   ffd9                                                                                                               
005d7a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005d7c   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d7e   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d80   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d82   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d84   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d86   40db     RRNCF     0xdb,0x0,0x0                                                                                    
005d88   0b7f     ANDLW     0x7f                                                                                            
005d8a   0b3c     ANDLW     0x3c                                                                                            
005d8c   6ec2     MOVWF     0xc2,0x0                                                                                        
005d8e   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d90   50db     MOVF      0xdb,0x0,0x0                                                                                    
005d92   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d94   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d96   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005d98   0bf0     ANDLW     0xf0                                                                                            
005d9a   0b30     ANDLW     0x30                                                                                            
005d9c   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005d9e   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005da0   50db     MOVF      0xdb,0x0,0x0                                                                                    
005da2   0b80     ANDLW     0x80                                                                                            
005da4   6ec0     MOVWF     0xc0,0x0                                                                                        
005da6   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005da8   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005daa   0b0f     ANDLW     0xf                                                                                             
005dac   0b07     ANDLW     0x7                                                                                             
005dae   12c0     IORWF     0xc0,0x1,0x0                                                                                    
005db0   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005db2   50db     MOVF      0xdb,0x0,0x0                                                                                    
005db4   0d04     MULLW     0x4                                                                                             
005db6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
005db8   0b38     ANDLW     0x38                                                                                            
005dba   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dbc   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dbe   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
005dc0   d003     BRA       0x5dc8                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dc2   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dc4   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dc6   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dc8   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dca   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005dcc   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005dce   ffda                                                                                                               
005dd0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005dd2   ffd9                                                                                                               
005dd4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e3c   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e3e   ffe6                                                                                                               
005e40   cfda     MOVFF     0xfda,0xfe6                                                                                     
005e42   ffe6                                                                                                               
005e44   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005e46   ffd9                                                                                                               
005e48   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005e4a   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e4c   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e4e   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
005e50   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e52   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e54   50db     MOVF      0xdb,0x0,0x0                                                                                    
005e56   12c6     IORWF     0xc6,0x1,0x0                                                                                    
005e58   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e5a   50db     MOVF      0xdb,0x0,0x0                                                                                    
005e5c   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e5e   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e60   50db     MOVF      0xdb,0x0,0x0                                                                                    
005e62   0a03     XORLW     0x3                                                                                             
005e64   e009     BZ        0x5e78                                                                                          
005e66   0a01     XORLW     0x1                                                                                             
005e68   e004     BZ        0x5e72                                                                                          
005e6a   0a02     XORLW     0x2                                                                                             
005e6c   e106     BNZ       0x5e7a                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e6e   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e70   d004     BRA       0x5e7a               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e72   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e74   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e76   d001     BRA       0x5e7a               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e78   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e7a   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e7c   50db     MOVF      0xdb,0x0,0x0                                                                                    
005e7e   0a05     XORLW     0x5                                                                                             
005e80   e003     BZ        0x5e88                                                                                          
005e82   0a01     XORLW     0x1                                                                                             
005e84   e104     BNZ       0x5e8e                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e86   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e88   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e8a   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e8c   d001     BRA       0x5e90               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e8e   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e90   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e92   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e94   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e96   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005e98   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005e9a   ffda                                                                                                               
005e9c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005e9e   ffd9                                                                                                               
005ea0   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f4e   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f50   ffe6                                                                                                               
005f52   cfda     MOVFF     0xfda,0xfe6                                                                                     
005f54   ffe6                                                                                                               
005f56   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005f58   ffd9                                                                                                               
005f5a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005f5c   ffda                                                                                                               
005f5e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005f60   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f62   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f64   6edf     MOVWF     0xdf,0x0                                                                                        
005f66   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f68   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
005f6a   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f6c   cfde     MOVFF     0xfde,0x0        return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f6e   f000                                                                                                               
005f70   cfdd     MOVFF     0xfdd,0x1                                                                                       
005f72   f001                                                                                                               
005f74   c000     MOVFF     0x0,0xff3                                                                                       
005f76   fff3                                                                                                               
005f78   c001     MOVFF     0x1,0xff4                                                                                       
005f7a   fff4                                                                                                               
005f7c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005f7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f82   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005f84   ffda                                                                                                               
005f86   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005f88   ffd9                                                                                                               
005f8a   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00402c   3642     RLCF      0x42,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00402e   3643     RLCF      0x43,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004030   3630     RLCF      0x30,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004032   3631     RLCF      0x31,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00405e   3231     RRCF      0x31,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004060   3230     RRCF      0x30,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004062   3243     RRCF      0x43,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004052   2a43     INCF      0x43,0x1,0x0           incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004054   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004056   2230     ADDWFC    0x30,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004058   2231     ADDWFC    0x31,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004034   0632     DECF      0x32,0x1,0x0           decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004036   a0d8     BTFSS     0xd8,0x0,0x0           btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004038   0633     DECF      0x33,0x1,0x0           decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00401c   be33     BTFSC     0x33,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004020   be31     BTFSC     0x31,0x7,0x0                                                                                    
00401e   d7f0     BRA       0x4000                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004022   d00c     BRA       0x403c                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004000   ae3f     BTFSS     0x3f,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004044   ae42     BTFSS     0x42,0x7,0x0                                                                                    
00404e   a043     BTFSS     0x43,0x0,0x0                                                                                    
004002   d004     BRA       0x400c                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004046   d011     BRA       0x406a                                                                                          
004050   d00c     BRA       0x406a                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;************ C O M M O M    E N T R I E S *****************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNaN:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return NaN                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fda   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fdc   6e38     MOVWF     0x38,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fde   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe0   6e37     MOVWF     0x37,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe2   6e36     MOVWF     0x36,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe4   6e35     MOVWF     0x35,0x0                 movwf     fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpExit:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe6   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignInf:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return infinite with sign in FLG_SIGN_ABW                           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe8   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fea   be3f     BTFSC     0x3f,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegInf:            ;; return negative infinite                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fec   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fee   6e38     MOVWF     0x38,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff0   d002     BRA       0x3ff6                   bra       jReturnPosInf0                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosInf:                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return positive infinite                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff2   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff4   6e38     MOVWF     0x38,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jReturnPosInf0:                                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff6   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff8   6e37     MOVWF     0x37,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jZero1and2:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ffa   6a36     CLRF      0x36,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ffc   6a35     CLRF      0x35,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ffe   d7f3     BRA       0x3fe6                   bra       __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignZero:                                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return Zero with sign in FLG_SIGN_ABW                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,__FpReturnPosZero                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004004   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004006   6e38     MOVWF     0x38,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004008   6a37     CLRF      0x37,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400a   d7f7     BRA       0x3ffa                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return zero                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400c   6a38     CLRF      0x38,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400e   6a37     CLRF      0x37,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004010   d7f4     BRA       0x3ffa                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; __Fppack:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Rounds and packs a float                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Assumes significant, round bit and sticky bits in fW0 -> fW3.            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Biased exponent in fWexp,fWexpHi.                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Exponent must be adjusted for significant left-justified in fW0.         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Sign in FLAG_SIGN_ABW.                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Packed, signed float in fAexp...fA2                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpPack                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004012   5031     MOVF      0x31,0x0,0x0             movf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004014   1030     IORWF     0x30,0x0,0x0             iorwf     fW1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004016   1043     IORWF     0x43,0x0,0x0             iorwf     fW2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004018   1042     IORWF     0x42,0x0,0x0             iorwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00401a   e0f8     BZ        0x400c                   bz        __FpReturnPosZero             ;; Pure zero                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fWexpHi,7,__FpReturnSignZero  ;; Subnormal. Treat as signed zero C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkLoop:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fW0,7,jPkShiftDone            ;; Significant left-justified  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0 && fWexpHi == 0 )goto __FpReturnZero;                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004024   5032     MOVF      0x32,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004026   1033     IORWF     0x33,0x0,0x0             iorwf     fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004028   e0eb     BZ        0x4000                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00402a   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftL4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Dec2      fWexp,fWexpHi                 ;; corrected exponent          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00403a   d7f2     BRA       0x4020                   bra       jPkLoop                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkShiftDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexpHi ) goto __FpReturnSignInf                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00403c   5033     MOVF      0x33,0x0,0x0             movf      fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00403e   e1d4     BNZ       0x3fe8                   bnz       __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004040   2832     INCF      0x32,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004042   e0d2     BZ        0x3fe8                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;;------ Round up if (round && (sticky || (significand & 1)))          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW3 & 0x80)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW3,7,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if(  fW3 & 0x7F)   goto jPkRoundIt;                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004048   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00404a   1442     ANDWF     0x42,0x0,0x0             andwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00404c   e102     BNZ       0x4052                   bnz       jPkRoundIt          ;; Rounding required ...                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW2 & 0x01)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW2,0,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundIt:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; ---------- Do Rounding ----------------                             C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Inc3      fW2,fW1,fW0         ;; Significand++                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00405a   e307     BNC       0x406a                   bnc       jPkRoundDone        ;; No need to adjust exponent            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; Renormalize                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00405c   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftR3C  fW2,fW1,fW0                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004064   2a32     INCF      0x32,0x1,0x0             incf      fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004066   2832     INCF      0x32,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004068   e0bf     BZ        0x3fe8                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnW:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00406a   5032     MOVF      0x32,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00406c   e0c9     BZ        0x4000                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00406e   c043     MOVFF     0x43,0x35                movff     fW2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004070   f035                                                                                                               
004072   c030     MOVFF     0x30,0x36                movff     fW1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004074   f036                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004076   3431     RLCF      0x31,0x0,0x0             rlcf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004078   6e37     MOVWF     0x37,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407a   3032     RRCF      0x32,0x0,0x0             rrcf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407c   6e38     MOVWF     0x38,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407e   3237     RRCF      0x37,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004080   9e38     BCF       0x38,0x7,0x0             bcf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004082   be3f     BTFSC     0x3f,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004084   8e38     BSF       0x38,0x7,0x0             bsf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004086   eff3     GOTO      0x3fe6                   goto      __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004088   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackA                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackB                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpack floats fA and fB                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Requires flags to be zero on entry.                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpacks exponent into fAexp and Significant into fA0,fA1,fA2.          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets .0f => .1f, i.e. makes msb of Significant explict                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets Zero, Infinite and NaN flags.                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On entry: IEEE 754 format                   Address increasing down            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     E0  D22 D21 D20 D19 D18 D17 D16             |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   Sn  E7  E6  E5  E4  E3  E2  E1              V                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On exit                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     1   D22 D21 D20 D19 D18 D17 D16                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   E7  E6  E5  E4  E3  E2  E1  E0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     GLOBAL __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackA:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408a   3637     RLCF      0x37,0x1,0x0             rlcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408c   3638     RLCF      0x38,0x1,0x0             rlcf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408e   e302     BNC       0x4094                   bnc       jUnpkA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004090   843f     BSF       0x3f,0x2,0x0             bsf       fFlg,FLG_SIGN_A    ; Signal negative                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004092   7e3f     BTG       0x3f,0x7,0x0             btg       fFlg,FLG_SIGN_ABW  ; Toggle combined sign                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004094   e106     BNZ       0x40a2                   bnz       jUnpkANZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004096   803f     BSF       0x3f,0x0,0x0             bsf       fFlg,FLG_ZERO_A    ; Signal Zero                             C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004098   6a38     CLRF      0x38,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409a   6a37     CLRF      0x37,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409c   6a36     CLRF      0x36,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409e   6a35     CLRF      0x35,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkANZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a2   2838     INCF      0x38,0x0,0x0             incf      fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a4   e003     BZ        0x40ac                   bz        jUnpkA2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a6   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a8   3237     RRCF      0x37,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040aa   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ac   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ae   3237     RRCF      0x37,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b0   e102     BNZ       0x40b6                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b2   823f     BSF       0x3f,0x1,0x0             bsf       fFlg,FLG_INF_A      ; A: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b4   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkNaN:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either A or B is a NaN                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b6   863f     BSF       0x3f,0x3,0x0             bsf       fFlg,FLG_NaN_AorB   ; Signal NaN for A or B                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b8   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackB                                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ba   363c     RLCF      0x3c,0x1,0x0             rlcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040bc   363d     RLCF      0x3d,0x1,0x0             rlcf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040be   e302     BNC       0x40c4                   bnc       jUnpkB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c0   8c3f     BSF       0x3f,0x6,0x0             bsf       fFlg,FLG_SIGN_B       ; Signal negative                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c2   7e3f     BTG       0x3f,0x7,0x0             btg       fFlg,FLG_SIGN_ABW     ; Toggle combined sign                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c4   e106     BNZ       0x40d2                   bnz       jUnpkBNZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c6   883f     BSF       0x3f,0x4,0x0             bsf       fFlg,FLG_ZERO_B       ; Signal Zero                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c8   6a3d     CLRF      0x3d,0x0                 clrf      fBexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ca   6a3c     CLRF      0x3c,0x0                 clrf      fB0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040cc   6a3b     CLRF      0x3b,0x0                 clrf      fB1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ce   6a3a     CLRF      0x3a,0x0                 clrf      fB2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkBNZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d2   283d     INCF      0x3d,0x0,0x0             incf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d4   e003     BZ        0x40dc                   bz        jUnpkB2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d6   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d8   323c     RRCF      0x3c,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040da   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040dc   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040de   323c     RRCF      0x3c,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040e0   e1ea     BNZ       0x40b6                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040e2   8a3f     BSF       0x3f,0x5,0x0             bsf       fFlg,FLG_INF_B      ; B: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040e4   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
005be6   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005be8   ffe6                                                                                                               
005bea   cfda     MOVFF     0xfda,0xfe6                                                                                     
005bec   ffe6                                                                                                               
005bee   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005bf0   ffd9                                                                                                               
005bf2   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005bf4   ffda                                                                                                               
005bf6   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005bf8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005bfa   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005bfc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
005bfe   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
005c00   0ffb     ADDLW     0xfb                                                                                            
005c02   6e00     MOVWF     0x0,0x0                                                                                         
005c04   0eff     MOVLW     0xff                                                                                            
005c06   20da     ADDWFC    0xda,0x0,0x0                                                                                    
005c08   6e01     MOVWF     0x1,0x0                                                                                         
005c0a   c000     MOVFF     0x0,0xfde                                                                                       
005c0c   ffde                                                                                                               
005c0e   6edd     MOVWF     0xdd,0x0                                                                                        
005c10   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005c12   ffe6                                                                                                               
005c14   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
005c16   ffe6                                                                                                               
005c18   0efb     MOVLW     0xfb                                                                                            
005c1a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005c1c   ffe6                                                                                                               
005c1e   0efc     MOVLW     0xfc                                                                                            
005c20   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005c22   ffe6                                                                                                               
005c24   0efd     MOVLW     0xfd                                                                                            
005c26   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005c28   ffe6                                                                                                               
005c2a   c2e4     MOVFF     0x2e4,0xfe6                                                                                     
005c2c   ffe6                                                                                                               
005c2e   c2e5     MOVFF     0x2e5,0xfe6                                                                                     
005c30   ffe6                                                                                                               
005c32   ec2a     CALL      0x1854,0x0                                                                                      
005c34   f00c                                                                                                               
005c36   6ef5     MOVWF     0xf5,0x0                                                                                        
005c38   0e07     MOVLW     0x7                                                                                             
005c3a   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
005c3c   e202     BC        0x5c42                                                                                          
005c3e   6ae1     CLRF      0xe1,0x0                                                                                        
005c40   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c42   6ee1     MOVWF     0xe1,0x0                                                                                        
005c44   50f5     MOVF      0xf5,0x0,0x0                                                                                    
005c46   0e02     MOVLW     0x2                                                                                             
005c48   cff3     MOVFF     0xff3,0xfdb                                                                                     
005c4a   ffdb                                                                                                               
005c4c   0e03     MOVLW     0x3                                                                                             
005c4e   cff4     MOVFF     0xff4,0xfdb                                                                                     
005c50   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
005c52   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
005c54   cfdb     MOVFF     0xfdb,0x0                                                                                       
005c56   f000                                                                                                               
005c58   0e03     MOVLW     0x3                                                                                             
005c5a   cfdb     MOVFF     0xfdb,0x1                                                                                       
005c5c   f001                                                                                                               
005c5e   c000     MOVFF     0x0,0xff3                                                                                       
005c60   fff3                                                                                                               
005c62   c001     MOVFF     0x1,0xff4                                                                                       
005c64   fff4                                                                                                               
005c66   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005c68   ffe1                                                                                                               
005c6a   cfda     MOVFF     0xfda,0xfe2                                                                                     
005c6c   ffe2                                                                                                               
005c6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c70   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005c72   ffda                                                                                                               
005c74   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005c76   ffd9                                                                                                               
005c78   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001828   ec50     CALL      0x22a0,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182a   f011                                                                                                               
0022a0   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
0022a2   ffe6                                                                                                               
0022a4   cfda     MOVFF     0xfda,0xfe6                                                                                     
0022a6   ffe6                                                                                                               
0022a8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0022aa   ffd9                                                                                                               
0022ac   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0022ae   ffda                                                                                                               
0022b0   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182c   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182e   cfdb     MOVFF     0xfdb,0xff3                                                                                     
001830   fff3                                                                                                               
001832   06db     DECF      0xdb,0x1,0x0                                                                                    
001834   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001836   0900     IORLW     0x0                                                                                             
001838   e00a     BZ        0x184e                                                                                          
00183a   ec9e     CALL      0x233c,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00183c   f011                                                                                                               
00183e   0efa     MOVLW     0xfa                                                                                            
001840   ec09     CALL      0x2412,0x0                                                                                      
001842   f012                                                                                                               
001844   e1f3     BNZ       0x182c                                                                                          
001846   1c01     COMF      0x1,0x0,0x0                                                                                     
001848   e1f1     BNZ       0x182c                                                                                          
00184a   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00184c   d001     BRA       0x1850                                                                                          
00184e   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001850   ef7f     GOTO      0x22fe         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001852   f011                                                                                                               
0022fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002300   cfe5     MOVFF     0xfe5,0xfda                                                                                     
002302   ffda                                                                                                               
002304   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002306   ffd9                                                                                                               
002308   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001854   ec50     CALL      0x22a0,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001856   f011                                                                                                               
001858   0e3b     MOVLW     0x3b                                                                                            
00185a   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
00185c   e302     BNC       0x1862                                                                                          
00185e   68e1     SETF      0xe1,0x0                                                                                        
001860   52e6     MOVF      0xe6,0x1,0x0                                                                                    
001862   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001864   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001866   6adb     CLRF      0xdb,0x0                                                                                        
001868   0e02     MOVLW     0x2                                                                                             
00186a   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186c   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186e   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001870   fff6                                                                                                               
001872   0efa     MOVLW     0xfa                                                                                            
001874   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001876   fff7                                                                                                               
001878   0efb     MOVLW     0xfb                                                                                            
00187a   cfdb     MOVFF     0xfdb,0xff8                                                                                     
00187c   fff8                                                                                                               
00187e   0008     TBLRD                                                                                                     
001880   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001882   6edf     MOVWF     0xdf,0x0                                                                                        
001884   50df     MOVF      0xdf,0x0,0x0                                                                                    
001886   e102     BNZ       0x188c                                                                                          
001888   efa5     GOTO      0x214a                                                                                          
00188a   f010                                                                                                               
002144   d977     RCALL     0x2434                                                                                          
002146   ef3f     GOTO      0x187e                                                                                          
002148   f00c                                                                                                               
002434   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002436   0ff9     ADDLW     0xf9                                                                                            
002438   6ee9     MOVWF     0xe9,0x0                                                                                        
00243a   0eff     MOVLW     0xff                                                                                            
00243c   efb3     GOTO      0x2366                                                                                          
00243e   f011                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00188c   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00188e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001890   e002     BZ        0x1896                                                                                          
001892   ef98     GOTO      0x2130                                                                                          
001894   f010                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001896   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001898   6adb     CLRF      0xdb,0x0                                                                                        
00189a   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00189c   6adb     CLRF      0xdb,0x0                                                                                        
00189e   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018a0   6adb     CLRF      0xdb,0x0                                                                                        
0018a2   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018a4   6adb     CLRF      0xdb,0x0                                                                                        
0018a6   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018a8   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018aa   ecb8     CALL      0x2170,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ac   f010                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ae   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018b2   e00c     BZ        0x18cc                                                                                          
0018b4   0e2b     MOVLW     0x2b                                                                                            
0018b6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018b8   e009     BZ        0x18cc                                                                                          
0018ba   0e20     MOVLW     0x20                                                                                            
0018bc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018be   e006     BZ        0x18cc                                                                                          
0018c0   0e23     MOVLW     0x23                                                                                            
0018fe   d7d5     BRA       0x18aa                                                                                          
0018c2   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018c4   e003     BZ        0x18cc                                                                                          
0018c6   0e30     MOVLW     0x30                                                                                            
0018c8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018ca   e11a     BNZ       0x1900                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018cc   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ce   0a30     XORLW     0x30                                                                                            
0018d0   e014     BZ        0x18fa                                                                                          
0018d2   0a13     XORLW     0x13                                                                                            
0018d4   e00f     BZ        0x18f4                                                                                          
0018d6   0a03     XORLW     0x3                                                                                             
0018d8   e00a     BZ        0x18ee                                                                                          
0018da   0a0b     XORLW     0xb                                                                                             
0018dc   e005     BZ        0x18e8                                                                                          
0018de   0a06     XORLW     0x6                                                                                             
0018e0   e1e4     BNZ       0x18aa                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e2   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e4   80db     BSF       0xdb,0x0,0x0                                                                                    
0018e6   d7e1     BRA       0x18aa                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018e8   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ea   82db     BSF       0xdb,0x1,0x0                                                                                    
0018ec   d7de     BRA       0x18aa                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ee   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f0   84db     BSF       0xdb,0x2,0x0                                                                                    
0018f2   d7db     BRA       0x18aa                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f4   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018f6   86db     BSF       0xdb,0x3,0x0                                                                                    
0018f8   d7d8     BRA       0x18aa                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fa   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018fc   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001900   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001902   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001904   e11b     BNZ       0x193c                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001906   ecb4     CALL      0x2168,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001908   f010                                                                                                               
00190a   ec02     CALL      0x2204,0x0                                                                                      
00190c   f011                                                                                                               
002204   0e13     MOVLW     0x13                                                                                            
002206   cfee     MOVFF     0xfee,0xfdb                                                                                     
002208   ffdb                                                                                                               
00220a   0e14     MOVLW     0x14                                                                                            
00220c   cfed     MOVFF     0xfed,0xfdb                                                                                     
00220e   ffdb                                                                                                               
00190e   e010     BZ        0x1930                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002210   0e13     MOVLW     0x13                                                                                            
002212   cfdb     MOVFF     0xfdb,0x0                                                                                       
002214   f000                                                                                                               
002216   0e14     MOVLW     0x14                                                                                            
002218   cfdb     MOVFF     0xfdb,0x1                                                                                       
00221a   f001                                                                                                               
00221c   0100     MOVLB     0x0                                                                                             
00221e   0e80     MOVLW     0x80                                                                                            
002220   1401     ANDWF     0x1,0x0,0x0                                                                                     
002222   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001910   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001912   80db     BSF       0xdb,0x0,0x0                                                                                    
001914   6836     SETF      0x36,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001916   6837     SETF      0x37,0x0                                                                                        
001918   0e13     MOVLW     0x13                                                                                            
00191a   cfdb     MOVFF     0xfdb,0x3b                                                                                      
00191c   f03b                                                                                                               
00191e   0e14     MOVLW     0x14                                                                                            
001920   cfdb     MOVFF     0xfdb,0x3c                                                                                      
001922   f03c                                                                                                               
001924   ec99     CALL      0x3f32,0x0                                                                                      
001926   f01f                                                                                                               
001928   0e04     MOVLW     0x4                                                                                             
00192a   c034     MOVFF     0x34,0xfdb                                                                                      
00192c   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00192e   d003     BRA       0x1936                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001930   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001932   eceb     CALL      0x21d6,0x0                                                                                      
001934   f010                                                                                                               
001936   ecb8     CALL      0x2170,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001938   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193a   d00b     BRA       0x1952                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193c   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00193e   6adb     CLRF      0xdb,0x0                                                                                        
001940   ec59     CALL      0x22b2,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001942   f011                                                                                                               
001944   e003     BZ        0x194c                                                                                          
00194a   d7fa     BRA       0x1940                                                                                          
0022b2   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0022b4   ffe6                                                                                                               
0022b6   6ae6     CLRF      0xe6,0x0                                                                                        
0022b8   ecf0     CALL      0x5fe0,0x0                                                                                      
0022ba   f02f                                                                                                               
0022bc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022c0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0022c2   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001946   eccd     CALL      0x239a,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001948   f011                                                                                                               
00239a   0e09     MOVLW     0x9                                                                                             
00239c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00239e   0d0a     MULLW     0xa                                                                                             
0023a0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0023a2   24df     ADDWF     0xdf,0x0,0x0                                                                                    
0023a4   0fd0     ADDLW     0xd0                                                                                            
0023a6   6ee7     MOVWF     0xe7,0x0                                                                                        
0023a8   0e09     MOVLW     0x9                                                                                             
0023aa   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0023ac   ffdb                                                                                                               
0023ae   efb8     GOTO      0x2170                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0023b0   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194c   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00194e   eceb     CALL      0x21d6,0x0                                                                                      
001950   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001952   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001954   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001956   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001958   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00195a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00195c   e11b     BNZ       0x1994                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00195e   ecb8     CALL      0x2170,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001960   f010                                                                                                               
001962   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001964   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001966   e10b     BNZ       0x197e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001968   ecb4     CALL      0x2168,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00196a   f010                                                                                                               
00196c   ec02     CALL      0x2204,0x0                                                                                      
00196e   f011                                                                                                               
002168   d929     RCALL     0x23bc                                                                                          
00216a   0e02     MOVLW     0x2                                                                                             
00216c   efa5     GOTO      0x234a                                                                                          
00216e   f011                                                                                                               
00234a   5e00     SUBWF     0x0,0x1,0x0                                                                                     
00234c   0e00     MOVLW     0x0                                                                                             
00234e   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002350   0ef7     MOVLW     0xf7                                                                                            
002352   c000     MOVFF     0x0,0xfdb                                                                                       
002354   ffdb                                                                                                               
002356   0ef8     MOVLW     0xf8                                                                                            
002358   c001     MOVFF     0x1,0xfdb                                                                                       
00235a   ffdb                                                                                                               
00235c   c000     MOVFF     0x0,0xfe9                                                                                       
00235e   ffe9                                                                                                               
002360   c001     MOVFF     0x1,0xfea                                                                                       
002362   ffea                                                                                                               
002364   0012     RETURN    0x0                                                                                             
0023bc   0ef7     MOVLW     0xf7                                                                                            
0023be   cfdb     MOVFF     0xfdb,0x0                                                                                       
0023c0   f000                                                                                                               
0023c2   0ef8     MOVLW     0xf8                                                                                            
0023c4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0023c6   f001                                                                                                               
0023c8   0012     RETURN    0x0                                                                                             
001970   e103     BNZ       0x1978                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001972   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001974   ec3d     CALL      0x227a,0x0                                                                                      
001976   f011                                                                                                               
00227a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00227c   d8ce     RCALL     0x241a                                                                                          
00241a   6ee7     MOVWF     0xe7,0x0                                                                                        
00241c   0e05     MOVLW     0x5                                                                                             
00241e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002420   ffdb                                                                                                               
002422   0012     RETURN    0x0                                                                                             
00227e   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002280   6ef3     MOVWF     0xf3,0x0                                                                                        
002282   0e06     MOVLW     0x6                                                                                             
002284   cff3     MOVFF     0xff3,0xfdb                                                                                     
002286   ffdb                                                                                                               
002288   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001978   ecb8     CALL      0x2170,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197a   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197c   d00b     BRA       0x1994                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197e   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001980   6adb     CLRF      0xdb,0x0                                                                                        
001982   ec59     CALL      0x22b2,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001984   f011                                                                                                               
001986   e003     BZ        0x198e                                                                                          
00198c   d7fa     BRA       0x1982                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001988   eccd     CALL      0x239a,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00198a   f011                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00198e   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001990   ec3d     CALL      0x227a,0x0                                                                                      
001992   f011                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001994   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001996   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001998   e107     BNZ       0x19a8                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00199a   ecb8     CALL      0x2170,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00199c   f010                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00199e   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019a2   e11d     BNZ       0x19de                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a4   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a6   d018     BRA       0x19d8                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a8   0e74     MOVLW     0x74                                                                                            
0019aa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019ac   e017     BZ        0x19dc                                                                                          
0019ae   0e7a     MOVLW     0x7a                                                                                            
0019b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019b2   e014     BZ        0x19dc                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b4   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019b8   e006     BZ        0x19c6                                                                                          
0019ba   0e54     MOVLW     0x54                                                                                            
0019bc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019be   e003     BZ        0x19c6                                                                                          
0019c0   0e5a     MOVLW     0x5a                                                                                            
0019c2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019c4   e102     BNZ       0x19ca                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c6   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019c8   d007     BRA       0x19d8                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ca   0e6c     MOVLW     0x6c                                                                                            
0019cc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019ce   e003     BZ        0x19d6                                                                                          
0019d0   0e6a     MOVLW     0x6a                                                                                            
0019d2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0019d4   e104     BNZ       0x19de                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d6   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019d8   ec90     CALL      0x2320,0x0                                                                                      
0019da   f011                                                                                                               
0019dc   dbc9     RCALL     0x2170                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002170   d961     RCALL     0x2434                                                                                          
002172   0008     TBLRD                                                                                                     
002174   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002176   6edf     MOVWF     0xdf,0x0                                                                                        
002178   0012     RETURN    0x0                                                                                             
002366   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002368   6eea     MOVWF     0xea,0x0                                                                                        
00236a   2aef     INCF      0xef,0x1,0x0                                                                                    
00236c   cfee     MOVFF     0xfee,0xff6                                                                                     
00236e   fff6                                                                                                               
002370   0e00     MOVLW     0x0                                                                                             
002372   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002374   cfee     MOVFF     0xfee,0xff7                                                                                     
002376   fff7                                                                                                               
002378   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00237a   cfee     MOVFF     0xfee,0xff8                                                                                     
00237c   fff8                                                                                                               
00237e   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019de   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019e0   0a6e     XORLW     0x6e                                                                                            
0019e2   e101     BNZ       0x19e6                                                                                          
0019e4   d381     BRA       0x20e8                                                                                          
0019e6   0a1e     XORLW     0x1e                                                                                            
0019e8   e101     BNZ       0x19ec                                                                                          
0019ea   d192     BRA       0x1d10                                                                                          
0019ec   0a20     XORLW     0x20                                                                                            
0019ee   e101     BNZ       0x19f2                                                                                          
0019f0   d18f     BRA       0x1d10                                                                                          
0019f2   0a3f     XORLW     0x3f                                                                                            
0019f4   e101     BNZ       0x19f8                                                                                          
0019f6   d149     BRA       0x1c8a                                                                                          
0019f8   0a1a     XORLW     0x1a                                                                                            
0019fa   e101     BNZ       0x19fe                                                                                          
0019fc   d146     BRA       0x1c8a                                                                                          
0019fe   0a0d     XORLW     0xd                                                                                             
001a00   e101     BNZ       0x1a04                                                                                          
001a02   d143     BRA       0x1c8a                                                                                          
001a04   0a20     XORLW     0x20                                                                                            
001a06   e101     BNZ       0x1a0a                                                                                          
001a08   d140     BRA       0x1c8a                                                                                          
001a0a   0a3a     XORLW     0x3a                                                                                            
001a0c   e101     BNZ       0x1a10                                                                                          
001a0e   d13d     BRA       0x1c8a                                                                                          
001a10   0a20     XORLW     0x20                                                                                            
001a12   e101     BNZ       0x1a16                                                                                          
001a14   d13a     BRA       0x1c8a                                                                                          
001a16   0a26     XORLW     0x26                                                                                            
001a18   e101     BNZ       0x1a1c                                                                                          
001a1a   d135     BRA       0x1c86                                                                                          
001a1c   0a0d     XORLW     0xd                                                                                             
001a1e   e101     BNZ       0x1a22                                                                                          
001a20   d132     BRA       0x1c86                                                                                          
001a22   0a1a     XORLW     0x1a                                                                                            
001a24   e101     BNZ       0x1a28                                                                                          
001a26   d0d9     BRA       0x1bda                                                                                          
001a28   0a20     XORLW     0x20                                                                                            
001a2a   e04a     BZ        0x1ac0                                                                                          
001a2c   0a30     XORLW     0x30                                                                                            
001a2e   e01f     BZ        0x1a6e                                                                                          
001a30   0a46     XORLW     0x46                                                                                            
001a32   e00e     BZ        0x1a50                                                                                          
001a34   0a25     XORLW     0x25                                                                                            
001a36   e001     BZ        0x1a3a                                                                                          
001a38   d385     BRA       0x2144                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a3a   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a3c   0ff9     ADDLW     0xf9                                                                                            
001a3e   6ee9     MOVWF     0xe9,0x0                                                                                        
001a40   0eff     MOVLW     0xff                                                                                            
001a42   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001a44   6eea     MOVWF     0xea,0x0                                                                                        
001a46   0e01     MOVLW     0x1                                                                                             
001a48   5eee     SUBWF     0xee,0x1,0x0                                                                                    
001a4a   0e00     MOVLW     0x0                                                                                             
001a4c   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
001a4e   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a50   ec9e     CALL      0x233c,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a52   f011                                                                                                               
001a54   0e25     MOVLW     0x25                                                                                            
001a56   6ee6     MOVWF     0xe6,0x0                                                                                        
001a58   db95     RCALL     0x2184                                                                                          
001a5a   e103     BNZ       0x1a62                                                                                          
001a5c   1c01     COMF      0x1,0x0,0x0                                                                                     
001a5e   e101     BNZ       0x1a62                                                                                          
001a60   d36b     BRA       0x2138                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a62   ec9a     CALL      0x2334,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a64   f011                                                                                                               
001a66   e201     BC        0x1a6a                                                                                          
001a68   d36d     BRA       0x2144                                                                                          
001a6a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001a6c   d36b     BRA       0x2144                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6e   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a70   6adb     CLRF      0xdb,0x0                                                                                        
001a72   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a74   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a76   0801     SUBLW     0x1                                                                                             
001a78   e206     BC        0x1a86                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7a   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7c   04db     DECF      0xdb,0x0,0x0                                                                                    
001a7e   ec62     CALL      0x22c4,0x0                                                                                      
001a80   f011                                                                                                               
001a82   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a84   db8b     RCALL     0x219c                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a86   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a88   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a8a   e009     BZ        0x1a9e                                                                                          
001a8c   0e03     MOVLW     0x3                                                                                             
001a8e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a90   0b01     ANDLW     0x1                                                                                             
001a92   e105     BNZ       0x1a9e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a94   db72     RCALL     0x217a                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a96   e001     BZ        0x1a9a                                                                                          
001a98   d34f     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a9a   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a9c   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a9e   db64     RCALL     0x2168                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa0   cfef     MOVFF     0xfef,0xfdf                                                                                     
001aa2   ffdf                                                                                                               
001aa4   ec12     CALL      0x2424,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa6   f012                                                                                                               
001aa8   e103     BNZ       0x1ab0                                                                                          
001aaa   1c01     COMF      0x1,0x0,0x0                                                                                     
001aac   e101     BNZ       0x1ab0                                                                                          
001aae   d344     BRA       0x2138                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab0   ec9a     CALL      0x2334,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab2   f011                                                                                                               
001ab4   e301     BNC       0x1ab8                                                                                          
001ab6   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ab8   db60     RCALL     0x217a                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aba   e101     BNZ       0x1abe                                                                                          
001abc   d343     BRA       0x2144                                                                                          
001abe   d33c     BRA       0x2138                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac0   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ac4   0802     SUBLW     0x2                                                                                             
001ac6   e10f     BNZ       0x1ae6                                                                                          
001ac8   ecde     CALL      0x23bc,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aca   f011                                                                                                               
001acc   0e03     MOVLW     0x3                                                                                             
001ace   eca5     CALL      0x234a,0x0                                                                                      
001ad0   f011                                                                                                               
001ad2   0e0e     MOVLW     0xe                                                                                             
001ad4   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ad6   ffdb                                                                                                               
001ad8   0e0f     MOVLW     0xf                                                                                             
001ada   cfee     MOVFF     0xfee,0xfdb                                                                                     
001adc   ffdb                                                                                                               
001ade   0e10     MOVLW     0x10                                                                                            
001ae0   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ae2   ffdb                                                                                                               
001ae4   d020     BRA       0x1b26                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ae6   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ae8   cfdb     MOVFF     0xfdb,0x3                                                                                       
001aea   f003                                                                                                               
001aec   0ef8     MOVLW     0xf8                                                                                            
001aee   cfdb     MOVFF     0xfdb,0x4                                                                                       
001af0   f004                                                                                                               
001af2   0e02     MOVLW     0x2                                                                                             
001af4   5e03     SUBWF     0x3,0x1,0x0                                                                                     
001af6   0e00     MOVLW     0x0                                                                                             
001af8   5a04     SUBWFB    0x4,0x1,0x0                                                                                     
001afa   0ef7     MOVLW     0xf7                                                                                            
001afc   c003     MOVFF     0x3,0xfdb                                                                                       
001afe   ffdb                                                                                                               
001b00   0ef8     MOVLW     0xf8                                                                                            
001b02   c004     MOVFF     0x4,0xfdb                                                                                       
001b04   ffdb                                                                                                               
001b06   c003     MOVFF     0x3,0xfe9                                                                                       
001b08   ffe9                                                                                                               
001b0a   c004     MOVFF     0x4,0xfea                                                                                       
001b0c   ffea                                                                                                               
001b0e   ec95     CALL      0x232a,0x0                                                                                      
001b10   f011                                                                                                               
001b12   6a02     CLRF      0x2,0x0                                                                                         
001b14   0e0e     MOVLW     0xe                                                                                             
001b16   c000     MOVFF     0x0,0xfdb                                                                                       
001b18   ffdb                                                                                                               
001b1a   0e0f     MOVLW     0xf                                                                                             
001b1c   c001     MOVFF     0x1,0xfdb                                                                                       
001b1e   ffdb                                                                                                               
001b20   0e10     MOVLW     0x10                                                                                            
001b22   c002     MOVFF     0x2,0xfdb                                                                                       
001b24   ffdb                                                                                                               
001b26   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b28   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001b2a   ffe6                                                                                                               
001b2c   0e0f     MOVLW     0xf                                                                                             
001b2e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001b30   ffe6                                                                                                               
001b32   0e10     MOVLW     0x10                                                                                            
001b34   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001b36   ffe6                                                                                                               
001b38   ecf9     CALL      0x5df2,0x0                                                                                      
001b3a   f02e                                                                                                               
001b3c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b3e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b40   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b42   0e13     MOVLW     0x13                                                                                            
001b44   c035     MOVFF     0x35,0xfdb                                                                                      
001b46   ffdb                                                                                                               
001b48   0e14     MOVLW     0x14                                                                                            
001b4a   c036     MOVFF     0x36,0xfdb                                                                                      
001b4c   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4e   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b50   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b52   e005     BZ        0x1b5e                                                                                          
001b54   0e13     MOVLW     0x13                                                                                            
001b56   ecd9     CALL      0x23b2,0x0                                                                                      
001b58   f011                                                                                                               
001b5a   e201     BC        0x1b5e                                                                                          
001b5c   db6a     RCALL     0x2232                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002232   0e05     MOVLW     0x5                                                                                             
002234   50db     MOVF      0xdb,0x0,0x0                                                                                    
002236   6ee6     MOVWF     0xe6,0x0                                                                                        
002238   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00223a   0f13     ADDLW     0x13                                                                                            
00223c   d901     RCALL     0x2440                                                                                          
00223e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002240   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002242   6eee     MOVWF     0xee,0x0                                                                                        
002244   6aed     CLRF      0xed,0x0                                                                                        
002246   0012     RETURN    0x0                                                                                             
001b5e   ecfd     CALL      0x23fa,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b60   f011                                                                                                               
001b62   e202     BC        0x1b68                                                                                          
0023fa   0e13     MOVLW     0x13                                                                                            
0023fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0023fe   6ef3     MOVWF     0xf3,0x0                                                                                        
002400   0e04     MOVLW     0x4                                                                                             
002402   efe6     GOTO      0x21cc                                                                                          
002404   f010                                                                                                               
001b64   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b66   db37     RCALL     0x21d6                                                                                          
001b68   ecc0     CALL      0x2380,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b6a   f011                                                                                                               
002380   0e04     MOVLW     0x4                                                                                             
002382   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002384   ffe6                                                                                                               
002386   0e13     MOVLW     0x13                                                                                            
002388   50db     MOVF      0xdb,0x0,0x0                                                                                    
00238a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00238c   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
00238e   df9a     RCALL     0x22c4                                                                                          
002390   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002392   df04     RCALL     0x219c                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b6c   e006     BZ        0x1b7a                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b6e   0e04     MOVLW     0x4                                                                                             
001b70   ecd9     CALL      0x23b2,0x0                                                                                      
001b72   f011                                                                                                               
001b74   e202     BC        0x1b7a                                                                                          
002394   0e06     MOVLW     0x6                                                                                             
002396   50db     MOVF      0xdb,0x0,0x0                                                                                    
002398   0012     RETURN    0x0                                                                                             
001b76   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b78   db2e     RCALL     0x21d6                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7a   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7c   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001b7e   d005     BRA       0x1b8a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b80   dafc     RCALL     0x217a                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b82   e001     BZ        0x1b86                                                                                          
001b84   d2d9     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b86   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b88   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b8a   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b8c   6adb     CLRF      0xdb,0x0                                                                                        
001b8e   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b90   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001b92   fff6                                                                                                               
001b94   0e0f     MOVLW     0xf                                                                                             
001b96   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001b98   fff7                                                                                                               
001b9a   0e10     MOVLW     0x10                                                                                            
001b9c   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001b9e   fff8                                                                                                               
001ba0   0008     TBLRD                                                                                                     
001ba2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001ba4   6edf     MOVWF     0xdf,0x0                                                                                        
001ba6   50df     MOVF      0xdf,0x0,0x0                                                                                    
001ba8   e014     BZ        0x1bd2                                                                                          
001baa   ec03     CALL      0x2406,0x0                                                                                      
001bac   f012                                                                                                               
001bae   e211     BC        0x1bd2                                                                                          
001bc6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001bc8   0f0e     ADDLW     0xe                                                                                             
001bca   6ee9     MOVWF     0xe9,0x0                                                                                        
001bcc   0e00     MOVLW     0x0                                                                                             
001bce   dbcb     RCALL     0x2366                                                                                          
001bd0   d7e7     BRA       0x1ba0                                                                                          
002406   0e04     MOVLW     0x4                                                                                             
002408   50db     MOVF      0xdb,0x0,0x0                                                                                    
00240a   6ef3     MOVWF     0xf3,0x0                                                                                        
00240c   0e09     MOVLW     0x9                                                                                             
00240e   efe6     GOTO      0x21cc                                                                                          
002410   f010                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb0   ec12     CALL      0x2424,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb2   f012                                                                                                               
001bb4   e103     BNZ       0x1bbc                                                                                          
001bb6   1c01     COMF      0x1,0x0,0x0                                                                                     
001bb8   e101     BNZ       0x1bbc                                                                                          
001bba   d2be     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bbc   dbbb     RCALL     0x2334                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bbe   e301     BNC       0x1bc2                                                                                          
001bc0   2adb     INCF      0xdb,0x1,0x0                                                                                    
001bc2   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bc4   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd2   dad3     RCALL     0x217a                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bd4   e101     BNZ       0x1bd8                                                                                          
001bd6   d2b6     BRA       0x2144                                                                                          
001bd8   d2af     BRA       0x2138                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bda   dac6     RCALL     0x2168                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bdc   0e11     MOVLW     0x11                                                                                            
001bde   cfee     MOVFF     0xfee,0xfdb                                                                                     
001be0   ffdb                                                                                                               
001be2   0e12     MOVLW     0x12                                                                                            
001be4   cfed     MOVFF     0xfed,0xfdb                                                                                     
001be6   ffdb                                                                                                               
001be8   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bea   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001bec   ffe6                                                                                                               
001bee   0e12     MOVLW     0x12                                                                                            
001bf0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001bf2   ffe6                                                                                                               
001bf4   eceb     CALL      0x5dd6,0x0                                                                                      
001bf6   f02e                                                                                                               
001bf8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bfa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001bfc   0e13     MOVLW     0x13                                                                                            
001bfe   cff3     MOVFF     0xff3,0xfdb                                                                                     
001c00   ffdb                                                                                                               
001c02   0e14     MOVLW     0x14                                                                                            
001c04   cff4     MOVFF     0xff4,0xfdb                                                                                     
001c06   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c08   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c0c   e004     BZ        0x1c16                                                                                          
001c0e   0e13     MOVLW     0x13                                                                                            
001c10   dbd0     RCALL     0x23b2                                                                                          
001c12   e201     BC        0x1c16                                                                                          
001c14   db0e     RCALL     0x2232                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c16   ecfd     CALL      0x23fa,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c18   f011                                                                                                               
001c1a   e202     BC        0x1c20                                                                                          
001c1c   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c1e   dadb     RCALL     0x21d6                                                                                          
001c20   dbaf     RCALL     0x2380                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022c4   6ee7     MOVWF     0xe7,0x0                                                                                        
0022c6   0e08     MOVLW     0x8                                                                                             
0022c8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0022ca   ffdb                                                                                                               
0022cc   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c22   e005     BZ        0x1c2e                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c24   0e04     MOVLW     0x4                                                                                             
001c26   dbc5     RCALL     0x23b2                                                                                          
001c28   e202     BC        0x1c2e                                                                                          
0023b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0023b4   6ef3     MOVWF     0xf3,0x0                                                                                        
0023b6   0e05     MOVLW     0x5                                                                                             
0023b8   efe6     GOTO      0x21cc                                                                                          
0023ba   f010                                                                                                               
001c2a   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c2c   dad4     RCALL     0x21d6                                                                                          
0021d6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021d8   6ee7     MOVWF     0xe7,0x0                                                                                        
0021da   0e04     MOVLW     0x4                                                                                             
0021dc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0021de   ffdb                                                                                                               
0021e0   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c2e   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c30   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001c32   d005     BRA       0x1c3e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c34   daa2     RCALL     0x217a                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c36   e001     BZ        0x1c3a                                                                                          
001c38   d27f     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3a   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3c   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c3e   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c40   6adb     CLRF      0xdb,0x0                                                                                        
001c42   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c44   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001c46   ffe9                                                                                                               
001c48   0e12     MOVLW     0x12                                                                                            
001c4a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001c4c   ffea                                                                                                               
001c4e   cfef     MOVFF     0xfef,0xfdf                                                                                     
001c50   ffdf                                                                                                               
001c52   50df     MOVF      0xdf,0x0,0x0                                                                                    
001c54   e014     BZ        0x1c7e                                                                                          
001c56   dbd7     RCALL     0x2406                                                                                          
001c58   e212     BC        0x1c7e                                                                                          
001c6e   0e11     MOVLW     0x11                                                                                            
001c70   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c72   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001c74   ffe9                                                                                                               
001c76   0e12     MOVLW     0x12                                                                                            
001c78   e3e8     BNC       0x1c4a                                                                                          
001c7a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c7c   d7e6     BRA       0x1c4a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c5a   dbe4     RCALL     0x2424                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c5c   e103     BNZ       0x1c64                                                                                          
001c5e   1c01     COMF      0x1,0x0,0x0                                                                                     
001c60   e101     BNZ       0x1c64                                                                                          
001c62   d26a     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c64   db67     RCALL     0x2334                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c66   e301     BNC       0x1c6a                                                                                          
001c68   2adb     INCF      0xdb,0x1,0x0                                                                                    
001c6a   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c6c   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c7e   da7d     RCALL     0x217a                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c80   e101     BNZ       0x1c84                                                                                          
001c82   d260     BRA       0x2144                                                                                          
001c84   d259     BRA       0x2138                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c86   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c88   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c8a   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c8c   04db     DECF      0xdb,0x0,0x0                                                                                    
001c8e   e110     BNZ       0x1cb0                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c90   db95     RCALL     0x23bc                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c92   0e04     MOVLW     0x4                                                                                             
001c94   db5a     RCALL     0x234a                                                                                          
001c96   0e0a     MOVLW     0xa                                                                                             
001c98   cfee     MOVFF     0xfee,0xfdb                                                                                     
001c9a   ffdb                                                                                                               
001c9c   0e0b     MOVLW     0xb                                                                                             
001c9e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ca0   ffdb                                                                                                               
001ca2   0e0c     MOVLW     0xc                                                                                             
001ca4   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ca6   ffdb                                                                                                               
001ca8   0e0d     MOVLW     0xd                                                                                             
001caa   cfee     MOVFF     0xfee,0xfdb                                                                                     
001cac   ffdb                                                                                                               
001cae   d06c     BRA       0x1d88                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb0   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001cb4   0803     SUBLW     0x3                                                                                             
001cb6   e12c     BNZ       0x1d10                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb8   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cba   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001cbc   d00d     BRA       0x1cd8                                                                                          
001cbe   dab2     RCALL     0x2224                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cc0   0e02     MOVLW     0x2                                                                                             
001cc2   da76     RCALL     0x21b0                                                                                          
001cc4   cfef     MOVFF     0xfef,0x0                                                                                       
001cc6   f000                                                                                                               
001cc8   6a01     CLRF      0x1,0x0                                                                                         
001cca   6a02     CLRF      0x2,0x0                                                                                         
001ccc   6a03     CLRF      0x3,0x0                                                                                         
001cce   ae00     BTFSS     0x0,0x7,0x0                                                                                     
001cd0   d039     BRA       0x1d44                                                                                          
001cd2   6801     SETF      0x1,0x0                                                                                         
001cd4   6802     SETF      0x2,0x0                                                                                         
001cd6   d035     BRA       0x1d42                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cd8   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cda   cfdb     MOVFF     0xfdb,0x1                                                                                       
001cdc   f001                                                                                                               
001cde   0ef8     MOVLW     0xf8                                                                                            
001ce0   cfdb     MOVFF     0xfdb,0x2                                                                                       
001ce2   f002                                                                                                               
001ce4   0e02     MOVLW     0x2                                                                                             
001ce6   5e01     SUBWF     0x1,0x1,0x0                                                                                     
001ce8   0e00     MOVLW     0x0                                                                                             
001cea   5a02     SUBWFB    0x2,0x1,0x0                                                                                     
001cec   0ef7     MOVLW     0xf7                                                                                            
001cee   c001     MOVFF     0x1,0xfdb                                                                                       
001cf0   ffdb                                                                                                               
001cf2   0ef8     MOVLW     0xf8                                                                                            
001cf4   c002     MOVFF     0x2,0xfdb                                                                                       
001cf6   ffdb                                                                                                               
001cf8   c001     MOVFF     0x1,0xfe9                                                                                       
001cfa   ffe9                                                                                                               
001cfc   c002     MOVFF     0x2,0xfea                                                                                       
001cfe   ffea                                                                                                               
001d00   cfef     MOVFF     0xfef,0x0                                                                                       
001d02   f000                                                                                                               
001d04   0e0a     MOVLW     0xa                                                                                             
001d06   c000     MOVFF     0x0,0xfdb                                                                                       
001d08   ffdb                                                                                                               
001d0a   0e0b     MOVLW     0xb                                                                                             
001d0c   6adb     CLRF      0xdb,0x0                                                                                        
001d0e   d038     BRA       0x1d80                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d10   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d12   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d14   0802     SUBLW     0x2                                                                                             
001d16   e109     BNZ       0x1d2a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d18   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1a   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001d1c   d004     BRA       0x1d26                                                                                          
001d1e   db59     RCALL     0x23d2                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d20   ae02     BTFSS     0x2,0x7,0x0                                                                                     
001d22   d010     BRA       0x1d44                                                                                          
0022ce   cfee     MOVFF     0xfee,0x0                                                                                       
0022d0   f000                                                                                                               
0022d2   cfee     MOVFF     0xfee,0x1                                                                                       
0022d4   f001                                                                                                               
0022d6   cfef     MOVFF     0xfef,0x2                                                                                       
0022d8   f002                                                                                                               
0022da   6a03     CLRF      0x3,0x0                                                                                         
0022dc   0012     RETURN    0x0                                                                                             
0023d2   df28     RCALL     0x2224                                                                                          
0023d4   0e03     MOVLW     0x3                                                                                             
0023d6   deec     RCALL     0x21b0                                                                                          
0023d8   ef67     GOTO      0x22ce                                                                                          
0023da   f011                                                                                                               
001d24   d00e     BRA       0x1d42                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d26   db55     RCALL     0x23d2                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d28   d00d     BRA       0x1d44                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d2a   0e03     MOVLW     0x3                                                                                             
001d2c   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001d2e   d012     BRA       0x1d54                                                                                          
001d30   da79     RCALL     0x2224                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d32   0e02     MOVLW     0x2                                                                                             
001d34   da3d     RCALL     0x21b0                                                                                          
001d36   daf9     RCALL     0x232a                                                                                          
001d38   6a02     CLRF      0x2,0x0                                                                                         
001d3a   6a03     CLRF      0x3,0x0                                                                                         
001d3c   ae01     BTFSS     0x1,0x7,0x0                                                                                     
001d3e   d002     BRA       0x1d44                                                                                          
001d40   6802     SETF      0x2,0x0                                                                                         
001d42   6803     SETF      0x3,0x0                                                                                         
001d44   dae2     RCALL     0x230a                                                                                          
001d46   0e0c     MOVLW     0xc                                                                                             
001d48   c002     MOVFF     0x2,0xfdb                                                                                       
001d4a   ffdb                                                                                                               
001d4c   0e0d     MOVLW     0xd                                                                                             
001d4e   c003     MOVFF     0x3,0xfdb                                                                                       
001d50   ffdb                                                                                                               
0021b0   5e04     SUBWF     0x4,0x1,0x0                                                                                     
0021b2   0e00     MOVLW     0x0                                                                                             
0021b4   5a05     SUBWFB    0x5,0x1,0x0                                                                                     
0021b6   0ef7     MOVLW     0xf7                                                                                            
0021b8   c004     MOVFF     0x4,0xfdb                                                                                       
0021ba   ffdb                                                                                                               
0021bc   0ef8     MOVLW     0xf8                                                                                            
0021be   c005     MOVFF     0x5,0xfdb                                                                                       
0021c0   ffdb                                                                                                               
0021c2   c004     MOVFF     0x4,0xfe9                                                                                       
0021c4   ffe9                                                                                                               
0021c6   c005     MOVFF     0x5,0xfea                                                                                       
0021c8   ffea                                                                                                               
0021ca   0012     RETURN    0x0                                                                                             
002224   0ef7     MOVLW     0xf7                                                                                            
002226   cfdb     MOVFF     0xfdb,0x4                                                                                       
002228   f004                                                                                                               
00222a   0ef8     MOVLW     0xf8                                                                                            
00222c   cfdb     MOVFF     0xfdb,0x5                                                                                       
00222e   f005                                                                                                               
002230   0012     RETURN    0x0                                                                                             
00230a   0e0a     MOVLW     0xa                                                                                             
00230c   c000     MOVFF     0x0,0xfdb                                                                                       
00230e   ffdb                                                                                                               
002310   0e0b     MOVLW     0xb                                                                                             
002312   c001     MOVFF     0x1,0xfdb                                                                                       
002314   ffdb                                                                                                               
002316   0012     RETURN    0x0                                                                                             
00232a   cfee     MOVFF     0xfee,0x0                                                                                       
00232c   f000                                                                                                               
00232e   cfef     MOVFF     0xfef,0x1                                                                                       
002330   f001                                                                                                               
002332   0012     RETURN    0x0                                                                                             
001d52   d01a     BRA       0x1d88                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d54   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d56   cfdb     MOVFF     0xfdb,0x2                                                                                       
001d58   f002                                                                                                               
001d5a   0ef8     MOVLW     0xf8                                                                                            
001d5c   cfdb     MOVFF     0xfdb,0x3                                                                                       
001d5e   f003                                                                                                               
001d60   0e02     MOVLW     0x2                                                                                             
001d62   5e02     SUBWF     0x2,0x1,0x0                                                                                     
001d64   0e00     MOVLW     0x0                                                                                             
001d66   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001d68   0ef7     MOVLW     0xf7                                                                                            
001d6a   c002     MOVFF     0x2,0xfdb                                                                                       
001d6c   ffdb                                                                                                               
001d6e   0ef8     MOVLW     0xf8                                                                                            
001d70   c003     MOVFF     0x3,0xfdb                                                                                       
001d72   ffdb                                                                                                               
001d74   c002     MOVFF     0x2,0xfe9                                                                                       
001d76   ffe9                                                                                                               
001d78   c003     MOVFF     0x3,0xfea                                                                                       
001d7a   ffea                                                                                                               
001d7c   dad6     RCALL     0x232a                                                                                          
001d7e   dac5     RCALL     0x230a                                                                                          
001d80   0e0c     MOVLW     0xc                                                                                             
001d82   6adb     CLRF      0xdb,0x0                                                                                        
001d84   0e0d     MOVLW     0xd                                                                                             
001d86   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d88   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d8a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d8c   e105     BNZ       0x1d98                                                                                          
001d8e   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d90   6ef3     MOVWF     0xf3,0x0                                                                                        
001d92   0e05     MOVLW     0x5                                                                                             
001d94   cff3     MOVFF     0xff3,0xfdb                                                                                     
001d96   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d98   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9a   6adb     CLRF      0xdb,0x0                                                                                        
001d9c   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da0   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da2   0f37     ADDLW     0x37                                                                                            
001da4   6e00     MOVWF     0x0,0x0                                                                                         
001da6   0e00     MOVLW     0x0                                                                                             
001da8   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001daa   6e01     MOVWF     0x1,0x0                                                                                         
001dac   0e39     MOVLW     0x39                                                                                            
001dae   c000     MOVFF     0x0,0xfdb                                                                                       
001db0   ffdb                                                                                                               
001db2   0e3a     MOVLW     0x3a                                                                                            
001db4   c001     MOVFF     0x1,0xfdb                                                                                       
001db6   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db8   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dba   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dbc   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dbe   6adb     CLRF      0xdb,0x0                                                                                        
001dc0   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc2   daae     RCALL     0x2320                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc4   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc6   0a78     XORLW     0x78                                                                                            
001dc8   e012     BZ        0x1dee                                                                                          
001dca   0a20     XORLW     0x20                                                                                            
001dcc   e010     BZ        0x1dee                                                                                          
001dce   0a28     XORLW     0x28                                                                                            
001dd0   e00c     BZ        0x1dea                                                                                          
001dd2   0a20     XORLW     0x20                                                                                            
001dd4   e00a     BZ        0x1dea                                                                                          
001dd6   0a3f     XORLW     0x3f                                                                                            
001dd8   e006     BZ        0x1de6                                                                                          
001dda   0a0d     XORLW     0xd                                                                                             
001ddc   e002     BZ        0x1de2                                                                                          
001dde   0a20     XORLW     0x20                                                                                            
001de0   e108     BNZ       0x1df2                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de2   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de4   d005     BRA       0x1df0                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de6   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de8   d003     BRA       0x1df0                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dea   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dec   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dee   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df0   da97     RCALL     0x2320                                                                                          
002320   6ef3     MOVWF     0xf3,0x0                                                                                        
002322   0e07     MOVLW     0x7                                                                                             
002324   cff3     MOVFF     0xff3,0xfdb                                                                                     
002326   ffdb                                                                                                               
002328   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df2   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df4   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
001df6   d002     BRA       0x1dfc                                                                                          
001df8   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfa   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfc   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfe   0b80     ANDLW     0x80                                                                                            
001e00   e026     BZ        0x1e4e                                                                                          
001e02   da8a     RCALL     0x2318                                                                                          
001e04   0e03     MOVLW     0x3                                                                                             
001e06   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001e08   0a00     XORLW     0x0                                                                                             
001e0a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001e0c   d002     BRA       0x1e12                                                                                          
001e0e   90d8     BCF       0xd8,0x0,0x0                                                                                    
001e10   d008     BRA       0x1e22                                                                                          
001e12   0e00     MOVLW     0x0                                                                                             
001e14   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001e16   0e00     MOVLW     0x0                                                                                             
001e18   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001e1a   0e00     MOVLW     0x0                                                                                             
001e1c   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001e1e   0e00     MOVLW     0x0                                                                                             
001e20   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001e22   e215     BC        0x1e4e                                                                                          
002318   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00231a   0f0a     ADDLW     0xa                                                                                             
00231c   ef20     GOTO      0x2440                                                                                          
00231e   f012                                                                                                               
002440   6ee9     MOVWF     0xe9,0x0                                                                                        
002442   0e00     MOVLW     0x0                                                                                             
002444   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002446   6eea     MOVWF     0xea,0x0                                                                                        
002448   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e24   da11     RCALL     0x2248                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e26   6839     SETF      0x39,0x0                                                                                        
001e28   683a     SETF      0x3a,0x0                                                                                        
001e2a   683b     SETF      0x3b,0x0                                                                                        
001e2c   683c     SETF      0x3c,0x0                                                                                        
001e2e   ec7f     CALL      0x5cfe,0x0                                                                                      
001e30   f02e                                                                                                               
001e32   0e0a     MOVLW     0xa                                                                                             
001e34   c030     MOVFF     0x30,0xfdb                                                                                      
001e36   ffdb                                                                                                               
001e38   0e0b     MOVLW     0xb                                                                                             
001e3a   c031     MOVFF     0x31,0xfdb                                                                                      
001e3c   ffdb                                                                                                               
001e3e   0e0c     MOVLW     0xc                                                                                             
001e40   c032     MOVFF     0x32,0xfdb                                                                                      
001e42   ffdb                                                                                                               
001e44   0e0d     MOVLW     0xd                                                                                             
001e46   c033     MOVFF     0x33,0xfdb                                                                                      
001e48   ffdb                                                                                                               
002248   0e0a     MOVLW     0xa                                                                                             
00224a   cfdb     MOVFF     0xfdb,0x34                                                                                      
00224c   f034                                                                                                               
00224e   0e0b     MOVLW     0xb                                                                                             
002250   cfdb     MOVFF     0xfdb,0x35                                                                                      
002252   f035                                                                                                               
002254   0e0c     MOVLW     0xc                                                                                             
002256   cfdb     MOVFF     0xfdb,0x36                                                                                      
002258   f036                                                                                                               
00225a   0e0d     MOVLW     0xd                                                                                             
00225c   cfdb     MOVFF     0xfdb,0x37                                                                                      
00225e   f037                                                                                                               
002260   0012     RETURN    0x0                                                                                             
001e4a   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4c   d008     BRA       0x1e5e                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4e   0e03     MOVLW     0x3                                                                                             
001e50   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
001e52   d002     BRA       0x1e58                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e54   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e56   d003     BRA       0x1e5e                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e58   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
001e5a   d008     BRA       0x1e6c                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5c   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5e   6ef3     MOVWF     0xf3,0x0                                                                                        
001e60   0e17     MOVLW     0x17                                                                                            
001e62   cff3     MOVFF     0xff3,0xfdb                                                                                     
001e64   ffdb                                                                                                               
001e66   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e68   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6a   d002     BRA       0x1e70                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6c   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e70   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e72   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e74   e103     BNZ       0x1e7c                                                                                          
001e76   d9b5     RCALL     0x21e2                                                                                          
001e78   e101     BNZ       0x1e7c                                                                                          
001e7a   d089     BRA       0x1f8e                                                                                          
0021e2   0e0a     MOVLW     0xa                                                                                             
0021e4   cfdb     MOVFF     0xfdb,0x0                                                                                       
0021e6   f000                                                                                                               
0021e8   0e0b     MOVLW     0xb                                                                                             
0021ea   cfdb     MOVFF     0xfdb,0x1                                                                                       
0021ec   f001                                                                                                               
0021ee   0e0c     MOVLW     0xc                                                                                             
0021f0   cfdb     MOVFF     0xfdb,0x2                                                                                       
0021f2   f002                                                                                                               
0021f4   0e0d     MOVLW     0xd                                                                                             
0021f6   cfdb     MOVFF     0xfdb,0x3                                                                                       
0021f8   f003                                                                                                               
0021fa   5000     MOVF      0x0,0x0,0x0                                                                                     
0021fc   1001     IORWF     0x1,0x0,0x0                                                                                     
0021fe   1002     IORWF     0x2,0x0,0x0                                                                                     
002200   1003     IORWF     0x3,0x0,0x0                                                                                     
002202   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7c   0e76     MOVLW     0x76                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7e   6e00     MOVWF     0x0,0x0                                                                                         
001e80   0e60     MOVLW     0x60                                                                                            
001e82   6e01     MOVWF     0x1,0x0                                                                                         
001e84   0e00     MOVLW     0x0                                                                                             
001e86   6e02     MOVWF     0x2,0x0                                                                                         
001e88   0e07     MOVLW     0x7                                                                                             
001e8a   cfdb     MOVFF     0xfdb,0x3                                                                                       
001e8c   f003                                                                                                               
001e8e   6a04     CLRF      0x4,0x0                                                                                         
001e90   6a05     CLRF      0x5,0x0                                                                                         
001e92   6a06     CLRF      0x6,0x0                                                                                         
001e94   c003     MOVFF     0x3,0x39                                                                                        
001e96   f039                                                                                                               
001e98   c004     MOVFF     0x4,0x3a                                                                                        
001e9a   f03a                                                                                                               
001e9c   c005     MOVFF     0x5,0x3b                                                                                        
001e9e   f03b                                                                                                               
001ea0   c006     MOVFF     0x6,0x3c                                                                                        
001ea2   f03c                                                                                                               
001ea4   d9d1     RCALL     0x2248                                                                                          
001ea6   ec83     CALL      0x5f06,0x0                                                                                      
001ea8   f02f                                                                                                               
001eaa   5000     MOVF      0x0,0x0,0x0                                                                                     
001eac   2430     ADDWF     0x30,0x0,0x0                                                                                    
001eae   6ef3     MOVWF     0xf3,0x0                                                                                        
001eb0   5001     MOVF      0x1,0x0,0x0                                                                                     
001eb2   2031     ADDWFC    0x31,0x0,0x0                                                                                    
001eb4   6ef4     MOVWF     0xf4,0x0                                                                                        
001eb6   5002     MOVF      0x2,0x0,0x0                                                                                     
001eb8   2032     ADDWFC    0x32,0x0,0x0                                                                                    
001eba   6ef8     MOVWF     0xf8,0x0                                                                                        
001ebc   cff4     MOVFF     0xff4,0xff7                                                                                     
001ebe   fff7                                                                                                               
001ec0   cff3     MOVFF     0xff3,0xff6                                                                                     
001ec2   fff6                                                                                                               
001ec4   0008     TBLRD                                                                                                     
001ec6   0e09     MOVLW     0x9                                                                                             
001ec8   cff5     MOVFF     0xff5,0xfdb                                                                                     
001eca   ffdb                                                                                                               
001ecc   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ece   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ed0   e10f     BNZ       0x1ef0                                                                                          
001ed2   0e61     MOVLW     0x61                                                                                            
001ed4   6ef3     MOVWF     0xf3,0x0                                                                                        
001ed6   0e09     MOVLW     0x9                                                                                             
001ed8   d979     RCALL     0x21cc                                                                                          
001eda   e30a     BNC       0x1ef0                                                                                          
0021cc   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0021ce   fff4                                                                                                               
0021d0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0021d2   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0021d4   0012     RETURN    0x0                                                                                             
001edc   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ede   6e00     MOVWF     0x0,0x0                                                                                         
001ee0   0e09     MOVLW     0x9                                                                                             
001ee2   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001ee4   ffe7                                                                                                               
001ee6   5000     MOVF      0x0,0x0,0x0                                                                                     
001ee8   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001eea   0e09     MOVLW     0x9                                                                                             
001eec   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001eee   ffdb                                                                                                               
001ef0   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ef2   cfdb     MOVFF     0xfdb,0x0                                                                                       
001ef4   f000                                                                                                               
001ef6   6a01     CLRF      0x1,0x0                                                                                         
001ef8   6a02     CLRF      0x2,0x0                                                                                         
001efa   6a03     CLRF      0x3,0x0                                                                                         
001efc   da0d     RCALL     0x2318                                                                                          
001efe   c000     MOVFF     0x0,0x39                                                                                        
001f00   f039                                                                                                               
001f02   c001     MOVFF     0x1,0x3a                                                                                        
001f04   f03a                                                                                                               
001f06   c002     MOVFF     0x2,0x3b                                                                                        
001f08   f03b                                                                                                               
001f0a   c003     MOVFF     0x3,0x3c                                                                                        
001f0c   f03c                                                                                                               
001f0e   cfee     MOVFF     0xfee,0x34                                                                                      
001f10   f034                                                                                                               
001f12   cfee     MOVFF     0xfee,0x35                                                                                      
001f14   f035                                                                                                               
001f16   cfee     MOVFF     0xfee,0x36                                                                                      
001f18   f036                                                                                                               
001f1a   cfef     MOVFF     0xfef,0x37                                                                                      
001f1c   f037                                                                                                               
001f1e   ec83     CALL      0x5f06,0x0                                                                                      
001f20   f02f                                                                                                               
001f22   c037     MOVFF     0x37,0xfed                                                                                      
001f24   ffed                                                                                                               
001f26   c036     MOVFF     0x36,0xfed                                                                                      
001f28   ffed                                                                                                               
001f2a   c035     MOVFF     0x35,0xfed                                                                                      
001f2c   ffed                                                                                                               
001f2e   c034     MOVFF     0x34,0xfef                                                                                      
001f30   ffef                                                                                                               
001f32   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f34   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001f36   ffe9                                                                                                               
001f38   06db     DECF      0xdb,0x1,0x0                                                                                    
001f3a   0e3a     MOVLW     0x3a                                                                                            
001f3c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001f3e   ffea                                                                                                               
001f40   e201     BC        0x1f44                                                                                          
001f42   06db     DECF      0xdb,0x1,0x0                                                                                    
001f44   0e09     MOVLW     0x9                                                                                             
001f46   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001f48   ffef                                                                                                               
001f4a   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f4c   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f4e   d949     RCALL     0x21e2                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f50   e195     BNZ       0x1e7c                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f52   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f54   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
001f56   d01d     BRA       0x1f92                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f58   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f5a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f5c   e106     BNZ       0x1f6a                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f5e   d9bf     RCALL     0x22de                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f60   e318     BNC       0x1f92                                                                                          
0022de   0e05     MOVLW     0x5                                                                                             
0022e0   cfdb     MOVFF     0xfdb,0x0                                                                                       
0022e2   f000                                                                                                               
0022e4   0e15     MOVLW     0x15                                                                                            
0022e6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022e8   80d8     BSF       0xd8,0x0,0x0                                                                                    
0022ea   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0022ec   0012     RETURN    0x0                                                                                             
001f62   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f64   28db     INCF      0xdb,0x0,0x0                                                                                    
001f66   da59     RCALL     0x241a                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f68   d014     BRA       0x1f92                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f6a   0e78     MOVLW     0x78                                                                                            
001f6c   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f6e   e009     BZ        0x1f82                                                                                          
001f70   0e58     MOVLW     0x58                                                                                            
001f72   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f74   e006     BZ        0x1f82                                                                                          
001f76   0e62     MOVLW     0x62                                                                                            
001f78   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f7a   e003     BZ        0x1f82                                                                                          
001f7c   0e42     MOVLW     0x42                                                                                            
001f7e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001f80   e108     BNZ       0x1f92                                                                                          
001f82   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f84   6ef3     MOVWF     0xf3,0x0                                                                                        
001f86   0e16     MOVLW     0x16                                                                                            
001f88   cff3     MOVFF     0xff3,0xfdb                                                                                     
001f8a   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f8c   d002     BRA       0x1f92                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f8e   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f90   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f92   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f94   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f96   0b10     ANDLW     0x10                                                                                            
001f9a   0e04     MOVLW     0x4                                                                                             
001f9c   cfdb     MOVFF     0xfdb,0x0                                                                                       
001f9e   f000                                                                                                               
001fa0   0e05     MOVLW     0x5                                                                                             
001fa2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fa4   80d8     BSF       0xd8,0x0,0x0                                                                                    
001fa6   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001f98   e00e     BZ        0x1fb6                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fa8   e206     BC        0x1fb6                                                                                          
001faa   0e06     MOVLW     0x6                                                                                             
001fac   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fae   e103     BNZ       0x1fb6                                                                                          
001fb0   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fb2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fb4   da32     RCALL     0x241a                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fb6   d993     RCALL     0x22de                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fb8   e20a     BC        0x1fce                                                                                          
001fba   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fbc   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001fbe   ffe7                                                                                                               
001fc0   0e15     MOVLW     0x15                                                                                            
001fc2   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fc4   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001fc6   0e05     MOVLW     0x5                                                                                             
001fc8   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001fca   ffdb                                                                                                               
001fcc   d002     BRA       0x1fd2                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fce   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fd0   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fd2   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fd4   cfdb     MOVFF     0xfdb,0x0                                                                                       
001fd6   f000                                                                                                               
001fd8   0e16     MOVLW     0x16                                                                                            
001fda   d943     RCALL     0x2262                                                                                          
001fdc   80d8     BSF       0xd8,0x0,0x0                                                                                    
001fde   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001fe0   e214     BC        0x200a                                                                                          
002262   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002264   ffe6                                                                                                               
002266   0e15     MOVLW     0x15                                                                                            
002268   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00226a   ffe6                                                                                                               
00226c   0e05     MOVLW     0x5                                                                                             
00226e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002270   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002272   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002274   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002276   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002278   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe2   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fe6   ffe6                                                                                                               
001fe8   0e15     MOVLW     0x15                                                                                            
001fea   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fec   ffe6                                                                                                               
001fee   0e04     MOVLW     0x4                                                                                             
001ff0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ff2   ffe6                                                                                                               
001ff4   0e05     MOVLW     0x5                                                                                             
001ff6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ff8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ffa   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001ffc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ffe   80d8     BSF       0xd8,0x0,0x0                                                                                    
002000   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
002002   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002004   80d8     BSF       0xd8,0x0,0x0                                                                                    
002006   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
002008   d95d     RCALL     0x22c4                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00200a   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00200c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00200e   0b01     ANDLW     0x1                                                                                             
002010   e10b     BNZ       0x2028                                                                                          
002012   0e08     MOVLW     0x8                                                                                             
002014   50db     MOVF      0xdb,0x0,0x0                                                                                    
002016   e008     BZ        0x2028                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002018   d8b0     RCALL     0x217a                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201a   e001     BZ        0x201e                                                                                          
00201c   d08d     BRA       0x2138                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201e   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002020   50db     MOVF      0xdb,0x0,0x0                                                                                    
002022   d8bc     RCALL     0x219c                                                                                          
002024   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002026   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002028   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00202a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00202c   e007     BZ        0x203c                                                                                          
00202e   d986     RCALL     0x233c                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002030   0e17     MOVLW     0x17                                                                                            
002032   d9ef     RCALL     0x2412                                                                                          
002034   e103     BNZ       0x203c                                                                                          
002036   1c01     COMF      0x1,0x0,0x0                                                                                     
002038   e101     BNZ       0x203c                                                                                          
00203a   d07e     BRA       0x2138                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00203c   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00203e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002040   e016     BZ        0x206e                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002042   d97c     RCALL     0x233c                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002044   0e30     MOVLW     0x30                                                                                            
002046   6ee6     MOVWF     0xe6,0x0                                                                                        
002048   d89d     RCALL     0x2184                                                                                          
00204a   e102     BNZ       0x2050                                                                                          
00204c   1c01     COMF      0x1,0x0,0x0                                                                                     
00204e   e074     BZ        0x2138                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002050   d975     RCALL     0x233c                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002052   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
002054   ffe6                                                                                                               
002056   ec3d     CALL      0x5c7a,0x0                                                                                      
002058   f02e                                                                                                               
00205a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00205c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00205e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002060   cff4     MOVFF     0xff4,0x1                                                                                       
002062   f001                                                                                                               
002064   0100     MOVLB     0x0                                                                                             
002066   1cf3     COMF      0xf3,0x0,0x0                                                                                    
002068   e102     BNZ       0x206e                                                                                          
00206a   1c01     COMF      0x1,0x0,0x0                                                                                     
00206c   e065     BZ        0x2138                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00206e   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002070   cfdb     MOVFF     0xfdb,0x0                                                                                       
002072   f000                                                                                                               
002074   0e16     MOVLW     0x16                                                                                            
002076   50db     MOVF      0xdb,0x0,0x0                                                                                    
002078   80d8     BSF       0xd8,0x0,0x0                                                                                    
00207a   5400     SUBFWB    0x0,0x0,0x0                                                                                     
00207c   e209     BC        0x2090                                                                                          
00207e   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002080   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
002082   ffe7                                                                                                               
002084   0e16     MOVLW     0x16                                                                                            
002086   50db     MOVF      0xdb,0x0,0x0                                                                                    
002088   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
00208a   0e05     MOVLW     0x5                                                                                             
00208c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00208e   ffdb                                                                                                               
002090   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002092   6ee6     MOVWF     0xe6,0x0                                                                                        
002094   0e05     MOVLW     0x5                                                                                             
002096   d9c9     RCALL     0x242a                                                                                          
002098   e14f     BNZ       0x2138                                                                                          
0023dc   ec14     CALL      0x1828,0x0                                                                                      
0023de   f00c                                                                                                               
0023e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023e4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0023e8   0900     IORLW     0x0                                                                                             
0023ea   0012     RETURN    0x0                                                                                             
00242a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00242c   ffe6                                                                                                               
00242e   df86     RCALL     0x233c                                                                                          
002430   efee     GOTO      0x23dc                                                                                          
002432   f011                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00209a   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00209c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00209e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0020a0   ffe9                                                                                                               
0020a2   0e3a     MOVLW     0x3a                                                                                            
0020a4   e301     BNC       0x20a8                                                                                          
0020a6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020a8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0020aa   ffea                                                                                                               
0020ac   0e09     MOVLW     0x9                                                                                             
0020ae   cfef     MOVFF     0xfef,0xfdb                                                                                     
0020b0   ffdb                                                                                                               
0020b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020b4   e00e     BZ        0x20d2                                                                                          
0020c2   0e39     MOVLW     0x39                                                                                            
0020c4   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020c6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0020c8   ffe9                                                                                                               
0020ca   0e3a     MOVLW     0x3a                                                                                            
0020cc   e3ed     BNC       0x20a8                                                                                          
0020ce   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020d0   d7eb     BRA       0x20a8                                                                                          
0020b6   d942     RCALL     0x233c                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b8   0e09     MOVLW     0x9                                                                                             
0020ba   d9ab     RCALL     0x2412                                                                                          
0020bc   e102     BNZ       0x20c2                                                                                          
0020be   1c01     COMF      0x1,0x0,0x0                                                                                     
0020c0   e03b     BZ        0x2138                                                                                          
002412   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002414   ffe6                                                                                                               
002416   efc2     GOTO      0x2184                                                                                          
002418   f010                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d2   d853     RCALL     0x217a                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d4   e131     BNZ       0x2138                                                                                          
00217a   0e20     MOVLW     0x20                                                                                            
00217c   6ee6     MOVWF     0xe6,0x0                                                                                        
00217e   0e08     MOVLW     0x8                                                                                             
002180   ef15     GOTO      0x242a                                                                                          
002182   f012                                                                                                               
00233c   0efc     MOVLW     0xfc                                                                                            
00233e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002340   ffe6                                                                                                               
002342   0efd     MOVLW     0xfd                                                                                            
002344   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002346   ffe6                                                                                                               
002348   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d6   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020da   ffe6                                                                                                               
0020dc   0e08     MOVLW     0x8                                                                                             
0020de   d8c1     RCALL     0x2262                                                                                          
0020e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020e2   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0020e4   d85b     RCALL     0x219c                                                                                          
00219c   6e00     MOVWF     0x0,0x0                                                                                         
00219e   6a01     CLRF      0x1,0x0                                                                                         
0021a0   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0021a2   0f01     ADDLW     0x1                                                                                             
0021a4   d94d     RCALL     0x2440                                                                                          
0021a6   5000     MOVF      0x0,0x0,0x0                                                                                     
0021a8   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0021aa   5001     MOVF      0x1,0x0,0x0                                                                                     
0021ac   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
0021ae   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020e6   d02e     BRA       0x2144                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020e8   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020ea   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020ec   0a03     XORLW     0x3                                                                                             
0020ee   e01c     BZ        0x2128                                                                                          
0020f0   0a01     XORLW     0x1                                                                                             
0020f2   e014     BZ        0x211c                                                                                          
0020f4   0a03     XORLW     0x3                                                                                             
0020f6   e007     BZ        0x2106                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002106   d8f3     RCALL     0x22ee                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002108   6a05     CLRF      0x5,0x0                                                                                         
00210a   ae03     BTFSS     0x3,0x7,0x0                                                                                     
00210c   d002     BRA       0x2112                                                                                          
00210e   6804     SETF      0x4,0x0                                                                                         
002110   6805     SETF      0x5,0x0                                                                                         
002112   d82a     RCALL     0x2168                                                                                          
002114   d8ba     RCALL     0x228a                                                                                          
002116   c005     MOVFF     0x5,0xfee                                                                                       
002118   ffee                                                                                                               
00228a   50ee     MOVF      0xee,0x0,0x0                                                                                    
00228c   cfef     MOVFF     0xfef,0xfea                                                                                     
00228e   ffea                                                                                                               
002290   6ee9     MOVWF     0xe9,0x0                                                                                        
002292   c002     MOVFF     0x2,0xfee                                                                                       
002294   ffee                                                                                                               
002296   c003     MOVFF     0x3,0xfee                                                                                       
002298   ffee                                                                                                               
00229a   c004     MOVFF     0x4,0xfee                                                                                       
00229c   ffee                                                                                                               
00229e   0012     RETURN    0x0                                                                                             
0022ee   0e01     MOVLW     0x1                                                                                             
0022f0   cfdb     MOVFF     0xfdb,0x2                                                                                       
0022f2   f002                                                                                                               
0022f4   0e02     MOVLW     0x2                                                                                             
0022f6   cfdb     MOVFF     0xfdb,0x3                                                                                       
0022f8   f003                                                                                                               
0022fa   6a04     CLRF      0x4,0x0                                                                                         
0022fc   0012     RETURN    0x0                                                                                             
00211a   d014     BRA       0x2144                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00211c   d8e8     RCALL     0x22ee                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00211e   be03     BTFSC     0x3,0x7,0x0                                                                                     
002120   6804     SETF      0x4,0x0                                                                                         
002122   d822     RCALL     0x2168                                                                                          
002124   d8b2     RCALL     0x228a                                                                                          
002126   d00e     BRA       0x2144                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002128   d961     RCALL     0x23ec                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00212a   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00212c   ffef                                                                                                               
00212e   d00a     BRA       0x2144                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020f8   d979     RCALL     0x23ec                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020fa   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0020fc   ffee                                                                                                               
0020fe   0e02     MOVLW     0x2                                                                                             
002100   cfdb     MOVFF     0xfdb,0xfed                                                                                     
002102   ffed                                                                                                               
0023ec   debd     RCALL     0x2168                                                                                          
0023ee   50ee     MOVF      0xee,0x0,0x0                                                                                    
0023f0   cfef     MOVFF     0xfef,0xfea                                                                                     
0023f2   ffea                                                                                                               
0023f4   6ee9     MOVWF     0xe9,0x0                                                                                        
0023f6   0e01     MOVLW     0x1                                                                                             
0023f8   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002104   d01f     BRA       0x2144                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002130   d979     RCALL     0x2424                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002132   e105     BNZ       0x213e                                                                                          
002134   1c01     COMF      0x1,0x0,0x0                                                                                     
002136   e103     BNZ       0x213e                                                                                          
002184   ec3d     CALL      0x5c7a,0x0                                                                                      
002186   f02e                                                                                                               
002188   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00218a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00218c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00218e   cff3     MOVFF     0xff3,0x0                                                                                       
002190   f000                                                                                                               
002192   cff4     MOVFF     0xff4,0x1                                                                                       
002194   f001                                                                                                               
002196   0100     MOVLB     0x0                                                                                             
002198   1cf3     COMF      0xf3,0x0,0x0                                                                                    
00219a   0012     RETURN    0x0                                                                                             
0023ca   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0023cc   ffe6                                                                                                               
0023ce   efc2     GOTO      0x2184                                                                                          
0023d0   f010                                                                                                               
002424   df8b     RCALL     0x233c                                                                                          
002426   efe5     GOTO      0x23ca                                                                                          
002428   f011                                                                                                               
002138   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00213a   68f4     SETF      0xf4,0x0                                                                                        
00213c   d010     BRA       0x215e                                                                                          
00213e   d8fa     RCALL     0x2334                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002140   e301     BNC       0x2144                                                                                          
002142   2adb     INCF      0xdb,0x1,0x0                                                                                    
002334   0e01     MOVLW     0x1                                                                                             
002336   2adb     INCF      0xdb,0x1,0x0                                                                                    
002338   0e02     MOVLW     0x2                                                                                             
00233a   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00214a   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00214c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00214e   f000                                                                                                               
002150   0e02     MOVLW     0x2                                                                                             
002152   cfdb     MOVFF     0xfdb,0x1                                                                                       
002154   f001                                                                                                               
002156   c000     MOVFF     0x0,0xff3                                                                                       
002158   fff3                                                                                                               
00215a   c001     MOVFF     0x1,0xff4                                                                                       
00215c   fff4                                                                                                               
00215e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002160   ffe1                                                                                                               
002162   cfda     MOVFF     0xfda,0xfe2                                                                                     
002164   ffe2                                                                                                               
002166   d0cb     BRA       0x22fe                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fe4   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fe6   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fe8   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fea   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fec   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005fee   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ff4   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ff6   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ff8   d004     BRA       0x6002                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ffa   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ffc   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005ffe   d001     BRA       0x6002                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005fe0   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005fe2   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005ff0   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005ff2   d007     BRA       0x6002                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006000   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006002   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005c7a   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
005c7c   ffe6                                                                                                               
005c7e   cfda     MOVFF     0xfda,0xfe6                                                                                     
005c80   ffe6                                                                                                               
005c82   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005c84   ffd9                                                                                                               
005c86   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005c88   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
005c8a   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005c8c   cfdb     MOVFF     0xfdb,0x0                                                                                       
005c8e   f000                                                                                                               
005c90   0efc     MOVLW     0xfc                                                                                            
005c92   cfdb     MOVFF     0xfdb,0x1                                                                                       
005c94   f001                                                                                                               
005c96   0100     MOVLB     0x0                                                                                             
005c98   0e80     MOVLW     0x80                                                                                            
005c9a   1401     ANDWF     0x1,0x0,0x0                                                                                     
005c9c   e11a     BNZ       0x5cd2                                                                                          
005c9e   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
005ca0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005ca2   ffe9                                                                                                               
005ca4   0efc     MOVLW     0xfc                                                                                            
005ca6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
005ca8   ffea                                                                                                               
005caa   cfee     MOVFF     0xfee,0xff3                                                                                     
005cac   fff3                                                                                                               
005cae   cfed     MOVFF     0xfed,0xff4                                                                                     
005cb0   fff4                                                                                                               
005cb2   2aee     INCF      0xee,0x1,0x0                                                                                    
005cb4   0e00     MOVLW     0x0                                                                                             
005cb6   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
005cb8   cff3     MOVFF     0xff3,0xfe9                                                                                     
005cba   ffe9                                                                                                               
005cbc   cff4     MOVFF     0xff4,0xfea                                                                                     
005cbe   ffea                                                                                                               
005cc0   0efd     MOVLW     0xfd                                                                                            
005cc2   cfdb     MOVFF     0xfdb,0xfef                                                                                     
005cc4   ffef                                                                                                               
005cc6   50ef     MOVF      0xef,0x0,0x0                                                                                    
005cc8   6a01     CLRF      0x1,0x0                                                                                         
005cca   6ef3     MOVWF     0xf3,0x0                                                                                        
005ccc   c001     MOVFF     0x1,0xff4                                                                                       
005cce   fff4                                                                                                               
005cd0   d010     BRA       0x5cf2                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cd2   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cd4   50db     MOVF      0xdb,0x0,0x0                                                                                    
005cd6   08fe     SUBLW     0xfe                                                                                            
005cd8   e106     BNZ       0x5ce6                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cda   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cdc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005cde   ffe6                                                                                                               
005ce0   ec22     CALL      0x6044,0x0                                                                                      
005ce2   f030                                                                                                               
005ce4   d005     BRA       0x5cf0                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005ce6   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
005ce8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005cea   ffe6                                                                                                               
005cec   ecca     CALL      0x5194,0x0                                                                                      
005cee   f028                                                                                                               
005cf0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cf2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
005cf4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005cf6   ffda                                                                                                               
005cf8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005cfa   ffd9                                                                                                               
005cfc   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006044   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006046   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006048   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00604a   d004     BRA       0x6054                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00604c   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00604e   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006050   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006052   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006054   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006056   d7fe     BRA       0x6054                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006058   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00605a   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00605c   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00605e   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dd6   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dd8   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dda   ffe9                                                                                                               
005ddc   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dde   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005de0   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005de2   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005de4   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005de6   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005de8   e003     BZ        0x5df0                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005dea   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005dec   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005dee   d7fb     BRA       0x5de6                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005df0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005df2   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005df4   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005df6   fff8                                                                                                               
005df8   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dfa   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dfc   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005dfe   fff7                                                                                                               
005e00   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e02   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e04   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e06   fff6                                                                                                               
005e08   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e28   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e2a   cfe3     MOVFF     0xfe3,0x35               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e2c   f035                                                                                                               
005e2e   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e30   cfe3     MOVFF     0xfe3,0x36               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e32   f036                                                                                                               
005e34   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e36   cfe3     MOVFF     0xfe3,0x37               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e38   f037                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e16   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e18   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e1a   e105     BNZ       0x5e26                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e1c   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e1e   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e20   e102     BNZ       0x5e26                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e22   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005e24   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e0a   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e0c   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e0e   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e10   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e12   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e14   e009     BZ        0x5e28                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e26   d7f4     BRA       0x5e10                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005e3a   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
