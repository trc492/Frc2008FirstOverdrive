MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Sat Feb 02 15:53:11 2008


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	TITLE:		camera.c                                                               C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	DATE:		16-Jan-2007                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\camera.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:	This is the "streamlined" version of camera.c                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Trc2008\camera.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\camera.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Trc2008\camera.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           ******************************************************************************** C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\camera.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\camera.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\camera.c
                                           *	16-Jan-2007  0.2  RKW - Added Virtual_Window() function.                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\camera.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Trc2008\camera.c
                                           #include "camera.h"                                                              C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           // This variable, when equal to one, indicates that the                          C:\code\2008\Trc2008\camera.c
                                           // camera has successfully initialized and should be                             C:\code\2008\Trc2008\camera.c
                                           // sending data. You can also force a re-initialization                          C:\code\2008\Trc2008\camera.c
                                           // by setting this variable to zero by calling the                               C:\code\2008\Trc2008\camera.c
                                           // function Reinitialize_Camera().                                               C:\code\2008\Trc2008\camera.c
                                           unsigned char camera_initialized = 0;                                            C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           unsigned int camera_t_packets = 0;                                               C:\code\2008\Trc2008\camera.c
                                           unsigned int camera_acks = 0;                                                    C:\code\2008\Trc2008\camera.c
                                           unsigned int camera_ncks = 0;                                                    C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           // camera T packet structure                                                     C:\code\2008\Trc2008\camera.c
                                           T_Packet_Data_Type T_Packet_Data;                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Camera_Handler()                                                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		This function is responsable for camera initialization               C:\code\2008\Trc2008\camera.c
                                           *					and camera serial data interpretation. Once the camera                     C:\code\2008\Trc2008\camera.c
                                           *					is initialized and starts sending tracking data, this                      C:\code\2008\Trc2008\camera.c
                                           *					function will continuously update the global T_Packet_Data                 C:\code\2008\Trc2008\camera.c
                                           *					structure with the received tracking information.					                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
00318e   cfd9     MOVFF     0xfd9,0xfe6    void Camera_Handler(void)                                                        C:\code\2008\Trc2008\camera.c
003190   ffe6                                                                                                               
003192   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003194   ffd9                                                                                                               
003196   0e04     MOVLW     0x4                                                                                             
003198   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           	unsigned char return_value;                                                     C:\code\2008\Trc2008\camera.c
                                           	unsigned char byte_count;                                                       C:\code\2008\Trc2008\camera.c
                                           	unsigned char byte;                                                             C:\code\2008\Trc2008\camera.c
                                           	unsigned char i;                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// if needed, (re)initialize the camera and if the                              C:\code\2008\Trc2008\camera.c
                                           	// initialization process throws an error, retry                                C:\code\2008\Trc2008\camera.c
                                           	// until it's successfully initializes                                          C:\code\2008\Trc2008\camera.c
00319a   0102     MOVLB     0x2            	if(camera_initialized == 0)                                                     C:\code\2008\Trc2008\camera.c
00319c   517f     MOVF      0x7f,0x0,0x1                                                                                    
00319e   e10b     BNZ       0x31b6                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
0031a0   d8f0     RCALL     0x3382         		return_value = Initialize_Camera();                                            C:\code\2008\Trc2008\camera.c
0031a2   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		// is the camera done initializing and if so,                                  C:\code\2008\Trc2008\camera.c
                                           		// did it initialize without an error?                                         C:\code\2008\Trc2008\camera.c
0031a4   04df     DECF      0xdf,0x0,0x0   		if(return_value == 1)                                                          C:\code\2008\Trc2008\camera.c
0031a6   e104     BNZ       0x31b0                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
0031a8   0102     MOVLB     0x2            			camera_initialized = 1;                                                       C:\code\2008\Trc2008\camera.c
0031aa   0e01     MOVLW     0x1                                                                                             
0031ac   6f7f     MOVWF     0x7f,0x1                                                                                        
                                           			DEBUG(("\r\nCamera: Initialized normally\r\n"));                              C:\code\2008\Trc2008\camera.c
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
                                           		// is the camera done initializing and if so,                                  C:\code\2008\Trc2008\camera.c
                                           		// did it return an error?                                                     C:\code\2008\Trc2008\camera.c
0031ae   d003     BRA       0x31b6         		else if(return_value > 1)                                                      C:\code\2008\Trc2008\camera.c
0031b0   50df     MOVF      0xdf,0x0,0x0                                                                                    
0031b2   0801     SUBLW     0x1                                                                                             
0031b4   e200     BC        0x31b6                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			DEBUG(("\r\nCamera: Initialized abnormally with code %u\r\n", (unsigned int)return_value)); C:\code\2008\Trc2008\camera.c
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// find out how much data, if any, is present in                                C:\code\2008\Trc2008\camera.c
                                           	// the camera serial port's received data queue?                                C:\code\2008\Trc2008\camera.c
0031b6   db01     RCALL     0x37ba         	byte_count = Camera_Serial_Port_Byte_Count();                                   C:\code\2008\Trc2008\camera.c
0031b8   6ee7     MOVWF     0xe7,0x0                                                                                        
0031ba   0e01     MOVLW     0x1                                                                                             
0031bc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0031be   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// have we received any data?                                                   C:\code\2008\Trc2008\camera.c
0031c0   50db     MOVF      0xdb,0x0,0x0   	if(byte_count > 0)                                                              C:\code\2008\Trc2008\camera.c
0031c2   0800     SUBLW     0x0                                                                                             
0031c4   e217     BC        0x31f4                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
                                           		// we have fresh data, so read each received byte one                          C:\code\2008\Trc2008\camera.c
                                           		// at a time and immediatly send it to the camera state                        C:\code\2008\Trc2008\camera.c
                                           		// machine, which is responsable for parsing the camera                        C:\code\2008\Trc2008\camera.c
                                           		// data packets                                                                C:\code\2008\Trc2008\camera.c
0031c6   0e03     MOVLW     0x3            		for(i=0; i<byte_count; i++)                                                    C:\code\2008\Trc2008\camera.c
0031c8   6adb     CLRF      0xdb,0x0                                                                                        
0031ca   0e01     MOVLW     0x1                                                                                             
0031cc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0031ce   6ef3     MOVWF     0xf3,0x0                                                                                        
0031d0   0e03     MOVLW     0x3                                                                                             
0031d2   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0031d4   fff4                                                                                                               
0031d6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0031d8   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0031da   e20c     BC        0x31f4                                                                                          
0031ee   0e03     MOVLW     0x3                                                                                             
0031f0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0031f2   d7eb     BRA       0x31ca                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			// get the next data byte                                                     C:\code\2008\Trc2008\camera.c
0031dc   daf2     RCALL     0x37c2         			byte = Read_Camera_Serial_Port();                                             C:\code\2008\Trc2008\camera.c
0031de   6ee7     MOVWF     0xe7,0x0                                                                                        
0031e0   0e02     MOVLW     0x2                                                                                             
0031e2   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0031e4   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           			// send the byte to the camera state machine                                  C:\code\2008\Trc2008\camera.c
0031e6   cfdb     MOVFF     0xfdb,0xfe6    			Camera_State_Machine(byte);                                                   C:\code\2008\Trc2008\camera.c
0031e8   ffe6                                                                                                               
0031ea   d80a     RCALL     0x3200                                                                                          
0031ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
0031f4   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\camera.c
0031f6   ffe1                                                                                                               
0031f8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0031fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0031fc   ffd9                                                                                                               
0031fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Camera_State_Machine()                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Parses the camera serial data stream looking for data                C:\code\2008\Trc2008\camera.c
                                           *					packets, ACKs and NCKS. When packets are complete the                      C:\code\2008\Trc2008\camera.c
                                           *					individual packet counter variable is incremented, and                     C:\code\2008\Trc2008\camera.c
                                           *					in the case of packets, the global data structure is                       C:\code\2008\Trc2008\camera.c
                                           *					updated with the new data.					                                            C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Camera_Handler(), above                                           C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		unsigned char of camera serial data                               C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera must be configured to output binary data,                    C:\code\2008\Trc2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
003200   cfd9     MOVFF     0xfd9,0xfe6    void Camera_State_Machine(unsigned char byte)                                    C:\code\2008\Trc2008\camera.c
003202   ffe6                                                                                                               
003204   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003206   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           	static unsigned char state = UNSYNCHRONIZED;                                    C:\code\2008\Trc2008\camera.c
                                           	static unsigned char packet_buffer[34];                                         C:\code\2008\Trc2008\camera.c
                                           	static unsigned char packet_buffer_index;                                       C:\code\2008\Trc2008\camera.c
                                           	static unsigned char packet_char_count;                                         C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003208   0102     MOVLB     0x2            	switch(state)                                                                   C:\code\2008\Trc2008\camera.c
00320a   5186     MOVF      0x86,0x0,0x1                                                                                    
00320c   0a06     XORLW     0x6                                                                                             
00320e   e101     BNZ       0x3212                                                                                          
003210   d08f     BRA       0x3330                                                                                          
003212   0a03     XORLW     0x3                                                                                             
003214   e068     BZ        0x32e6                                                                                          
003216   0a06     XORLW     0x6                                                                                             
003218   e034     BZ        0x3282                                                                                          
00321a   0a01     XORLW     0x1                                                                                             
00321c   e025     BZ        0x3268                                                                                          
00321e   0a03     XORLW     0x3                                                                                             
003220   e001     BZ        0x3224                                                                                          
003222   d0ab     BRA       0x337a                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
                                           		case UNSYNCHRONIZED:                                                           C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003224   0efe     MOVLW     0xfe           			if(byte == 255) // start of a new data packet?                                C:\code\2008\Trc2008\camera.c
003226   50db     MOVF      0xdb,0x0,0x0                                                                                    
003228   6e00     MOVWF     0x0,0x0                                                                                         
00322a   6a01     CLRF      0x1,0x0                                                                                         
00322c   0eff     MOVLW     0xff                                                                                            
00322e   1800     XORWF     0x0,0x0,0x0                                                                                     
003230   e101     BNZ       0x3234                                                                                          
003232   5001     MOVF      0x1,0x0,0x0                                                                                     
003234   e103     BNZ       0x323c                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003236   0e02     MOVLW     0x2            				state = DETERMINING_PACKET_TYPE;                                             C:\code\2008\Trc2008\camera.c
003238   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
00323a   d015     BRA       0x3266         			else if(byte == 'A') // start of an ACK?                                      C:\code\2008\Trc2008\camera.c
00323c   0efe     MOVLW     0xfe                                                                                            
00323e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003240   0841     SUBLW     0x41                                                                                            
003242   e107     BNZ       0x3252                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003244   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\code\2008\Trc2008\camera.c
003246   0e02     MOVLW     0x2                                                                                             
003248   6f2b     MOVWF     0x2b,0x1                                                                                        
00324a   0102     MOVLB     0x2            				state = RECEIVING_ACK;                                                       C:\code\2008\Trc2008\camera.c
00324c   0e05     MOVLW     0x5                                                                                             
00324e   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003250   d00a     BRA       0x3266         			else if(byte == 'N') // start of a NCK?                                       C:\code\2008\Trc2008\camera.c
003252   0efe     MOVLW     0xfe                                                                                            
003254   50db     MOVF      0xdb,0x0,0x0                                                                                    
003256   084e     SUBLW     0x4e                                                                                            
003258   e106     BNZ       0x3266                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
00325a   0102     MOVLB     0x2            				packet_char_count = 2;                                                       C:\code\2008\Trc2008\camera.c
00325c   0e02     MOVLW     0x2                                                                                             
00325e   6f2b     MOVWF     0x2b,0x1                                                                                        
003260   0102     MOVLB     0x2            				state = RECEIVING_NCK;                                                       C:\code\2008\Trc2008\camera.c
003262   0e06     MOVLW     0x6                                                                                             
003264   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003266   d089     BRA       0x337a         			break;                                                                        C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		case DETERMINING_PACKET_TYPE:                                                  C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003268   0efe     MOVLW     0xfe           			if(byte == 'T') // are we receiving a "t packet"?                             C:\code\2008\Trc2008\camera.c
00326a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00326c   0854     SUBLW     0x54                                                                                            
00326e   e106     BNZ       0x327c                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003270   0102     MOVLB     0x2            				packet_buffer_index = 0;                                                     C:\code\2008\Trc2008\camera.c
003272   6b2a     CLRF      0x2a,0x1                                                                                        
003274   0102     MOVLB     0x2            				state = RECEIVING_T_PACKET;                                                  C:\code\2008\Trc2008\camera.c
003276   0e03     MOVLW     0x3                                                                                             
003278   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
00327a   d002     BRA       0x3280         			else // unknown packet type; go back to the unsynchronized state              C:\code\2008\Trc2008\camera.c
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
00327c   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Trc2008\camera.c
00327e   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003280   d07c     BRA       0x337a         			break;                                                                        C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		case RECEIVING_T_PACKET:                                                       C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003282   0102     MOVLB     0x2            			if(packet_buffer_index < sizeof(T_Packet_Data_Type)) // still building the packet? C:\code\2008\Trc2008\camera.c
003284   512a     MOVF      0x2a,0x0,0x1                                                                                    
003286   6e00     MOVWF     0x0,0x0                                                                                         
003288   6a01     CLRF      0x1,0x0                                                                                         
00328a   0e08     MOVLW     0x8                                                                                             
00328c   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00328e   0e00     MOVLW     0x0                                                                                             
003290   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003292   e20a     BC        0x32a8                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
                                           				// move packet character to our buffer                                       C:\code\2008\Trc2008\camera.c
003294   512a     MOVF      0x2a,0x0,0x1   				packet_buffer[packet_buffer_index] = byte;                                   C:\code\2008\Trc2008\camera.c
003296   6aea     CLRF      0xea,0x0                                                                                        
003298   0f08     ADDLW     0x8                                                                                             
00329a   6ee9     MOVWF     0xe9,0x0                                                                                        
00329c   0e02     MOVLW     0x2                                                                                             
00329e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0032a0   0efe     MOVLW     0xfe                                                                                            
0032a2   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0032a4   ffef                                                                                                               
0032a6   2b2a     INCF      0x2a,0x1,0x1   				packet_buffer_index++;                                                       C:\code\2008\Trc2008\camera.c
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
                                           			                                                                              C:\code\2008\Trc2008\camera.c
0032a8   512a     MOVF      0x2a,0x0,0x1   			if(packet_buffer_index == sizeof(T_Packet_Data_Type)) // complete packet?     C:\code\2008\Trc2008\camera.c
0032aa   6e00     MOVWF     0x0,0x0                                                                                         
0032ac   6a01     CLRF      0x1,0x0                                                                                         
0032ae   0e08     MOVLW     0x8                                                                                             
0032b0   1800     XORWF     0x0,0x0,0x0                                                                                     
0032b2   e101     BNZ       0x32b6                                                                                          
0032b4   5001     MOVF      0x1,0x0,0x0                                                                                     
0032b6   e116     BNZ       0x32e4                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
0032b8   c208     MOVFF     0x208,0x200    				T_Packet_Data.mx = packet_buffer[0];                                         C:\code\2008\Trc2008\camera.c
0032ba   f200                                                                                                               
0032bc   c209     MOVFF     0x209,0x201    				T_Packet_Data.my = packet_buffer[1];                                         C:\code\2008\Trc2008\camera.c
0032be   f201                                                                                                               
0032c0   c20a     MOVFF     0x20a,0x202    				T_Packet_Data.x1 = packet_buffer[2];                                         C:\code\2008\Trc2008\camera.c
0032c2   f202                                                                                                               
0032c4   c20b     MOVFF     0x20b,0x203    				T_Packet_Data.y1 = packet_buffer[3];                                         C:\code\2008\Trc2008\camera.c
0032c6   f203                                                                                                               
0032c8   c20c     MOVFF     0x20c,0x204    				T_Packet_Data.x2 = packet_buffer[4];                                         C:\code\2008\Trc2008\camera.c
0032ca   f204                                                                                                               
0032cc   c20d     MOVFF     0x20d,0x205    				T_Packet_Data.y2 = packet_buffer[5];                                         C:\code\2008\Trc2008\camera.c
0032ce   f205                                                                                                               
0032d0   c20e     MOVFF     0x20e,0x206    				T_Packet_Data.pixels = packet_buffer[6];                                     C:\code\2008\Trc2008\camera.c
0032d2   f206                                                                                                               
0032d4   c20f     MOVFF     0x20f,0x207    				T_Packet_Data.confidence = packet_buffer[7];                                 C:\code\2008\Trc2008\camera.c
0032d6   f207                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\camera.c
0032d8   0102     MOVLB     0x2            				camera_t_packets++;                                                          C:\code\2008\Trc2008\camera.c
0032da   2b80     INCF      0x80,0x1,0x1                                                                                    
0032dc   0e00     MOVLW     0x0                                                                                             
0032de   2381     ADDWFC    0x81,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\camera.c
0032e0   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED; // we're done; go back to the unsynchronized state   C:\code\2008\Trc2008\camera.c
0032e2   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
0032e4   d04a     BRA       0x337a         			break;                                                                        C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		case RECEIVING_ACK:                                                            C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
0032e6   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\code\2008\Trc2008\camera.c
0032e8   0102     MOVLB     0x2                                                                                             
0032ea   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
0032ec   e106     BNZ       0x32fa                                                                                          
0032ee   0efe     MOVLW     0xfe                                                                                            
0032f0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0032f2   0843     SUBLW     0x43                                                                                            
0032f4   e102     BNZ       0x32fa                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
0032f6   2b2b     INCF      0x2b,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Trc2008\camera.c
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
0032f8   d01a     BRA       0x332e         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\code\2008\Trc2008\camera.c
0032fa   0e03     MOVLW     0x3                                                                                             
0032fc   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
0032fe   e106     BNZ       0x330c                                                                                          
003300   0efe     MOVLW     0xfe                                                                                            
003302   50db     MOVF      0xdb,0x0,0x0                                                                                    
003304   084b     SUBLW     0x4b                                                                                            
003306   e102     BNZ       0x330c                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003308   2b2b     INCF      0x2b,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Trc2008\camera.c
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
00330a   d011     BRA       0x332e         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\code\2008\Trc2008\camera.c
00330c   0e04     MOVLW     0x4                                                                                             
00330e   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
003310   e10b     BNZ       0x3328                                                                                          
003312   0efe     MOVLW     0xfe                                                                                            
003314   50db     MOVF      0xdb,0x0,0x0                                                                                    
003316   080d     SUBLW     0xd                                                                                             
003318   e107     BNZ       0x3328                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
00331a   0102     MOVLB     0x2            				camera_acks++;                                                               C:\code\2008\Trc2008\camera.c
00331c   2b82     INCF      0x82,0x1,0x1                                                                                    
00331e   0e00     MOVLW     0x0                                                                                             
003320   2383     ADDWFC    0x83,0x1,0x1                                                                                    
003322   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Trc2008\camera.c
003324   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003326   d003     BRA       0x332e         			else                                                                          C:\code\2008\Trc2008\camera.c
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003328   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Trc2008\camera.c
00332a   0e01     MOVLW     0x1                                                                                             
00332c   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
00332e   d025     BRA       0x337a         			break;                                                                        C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		case RECEIVING_NCK:                                                            C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003330   0e02     MOVLW     0x2            			if(packet_char_count == 2 && byte == 'C') // second character a C?            C:\code\2008\Trc2008\camera.c
003332   0102     MOVLB     0x2                                                                                             
003334   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
003336   e106     BNZ       0x3344                                                                                          
003338   0efe     MOVLW     0xfe                                                                                            
00333a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00333c   0843     SUBLW     0x43                                                                                            
00333e   e102     BNZ       0x3344                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003340   2b2b     INCF      0x2b,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Trc2008\camera.c
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003342   d01a     BRA       0x3378         			else if(packet_char_count == 3 && byte == 'K') // third character a K?        C:\code\2008\Trc2008\camera.c
003344   0e03     MOVLW     0x3                                                                                             
003346   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
003348   e106     BNZ       0x3356                                                                                          
00334a   0efe     MOVLW     0xfe                                                                                            
00334c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00334e   084b     SUBLW     0x4b                                                                                            
003350   e102     BNZ       0x3356                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003352   2b2b     INCF      0x2b,0x1,0x1   				packet_char_count++;                                                         C:\code\2008\Trc2008\camera.c
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003354   d011     BRA       0x3378         			else if(packet_char_count == 4 && byte == '\r') // fourth character a return? C:\code\2008\Trc2008\camera.c
003356   0e04     MOVLW     0x4                                                                                             
003358   5d2b     SUBWF     0x2b,0x0,0x1                                                                                    
00335a   e10b     BNZ       0x3372                                                                                          
00335c   0efe     MOVLW     0xfe                                                                                            
00335e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003360   080d     SUBLW     0xd                                                                                             
003362   e107     BNZ       0x3372                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003364   0102     MOVLB     0x2            				camera_ncks++;                                                               C:\code\2008\Trc2008\camera.c
003366   2b84     INCF      0x84,0x1,0x1                                                                                    
003368   0e00     MOVLW     0x0                                                                                             
00336a   2385     ADDWFC    0x85,0x1,0x1                                                                                    
00336c   0e01     MOVLW     0x1            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Trc2008\camera.c
00336e   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003370   d003     BRA       0x3378         			else                                                                          C:\code\2008\Trc2008\camera.c
                                           			{                                                                             C:\code\2008\Trc2008\camera.c
003372   0102     MOVLB     0x2            				state = UNSYNCHRONIZED;                                                      C:\code\2008\Trc2008\camera.c
003374   0e01     MOVLW     0x1                                                                                             
003376   6f86     MOVWF     0x86,0x1                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\camera.c
003378   d000     BRA       0x337a         			break;	                                                                       C:\code\2008\Trc2008\camera.c
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
00337a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
00337c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00337e   ffd9                                                                                                               
003380   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Initialize_Camera()                                                 C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		This function is responsable for initializing the                    C:\code\2008\Trc2008\camera.c
                                           *					camera.                                                                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Camera_Handler(), below.                                          C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		0: Initialization in progress.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					1: Initialization has completed.                                           C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					2-127: Camera returned a NCK and the returned value                        C:\code\2008\Trc2008\camera.c
                                           *					indicates the state that caused the NCK.                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					128-255: Camera didn't return a ACK or NCK within                          C:\code\2008\Trc2008\camera.c
                                           *					the time allowed. The returned value is the value                          C:\code\2008\Trc2008\camera.c
                                           *					128 added to the state that failed. The amount of                          C:\code\2008\Trc2008\camera.c
                                           *					time allowed is set by the MAX_ACK_LOOP_COUNT                              C:\code\2008\Trc2008\camera.c
                                           *					parameter found in camera.h.					                                          C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera_acks and camera_ncks are incremented by the                  C:\code\2008\Trc2008\camera.c
                                           *					function Camera_State_Machine() which is called by                         C:\code\2008\Trc2008\camera.c
                                           *					Process_Camera_Data() to process data sent by the                          C:\code\2008\Trc2008\camera.c
                                           *					camera.                                                                    C:\code\2008\Trc2008\camera.c
                                           *					                                                                           C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
003382   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Initialize_Camera(void)                                            C:\code\2008\Trc2008\camera.c
003384   ffe6                                                                                                               
003386   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003388   ffd9                                                                                                               
00338a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           	static unsigned char boot_initialization_flag = 1;                              C:\code\2008\Trc2008\camera.c
                                           	static unsigned char initialize_flag = 1;                                       C:\code\2008\Trc2008\camera.c
                                           	static unsigned char state;                                                     C:\code\2008\Trc2008\camera.c
                                           	static unsigned char wait_for_ack;                                              C:\code\2008\Trc2008\camera.c
                                           	static unsigned int loop_count;                                                 C:\code\2008\Trc2008\camera.c
                                           	static unsigned char return_value;                                              C:\code\2008\Trc2008\camera.c
                                           	unsigned char returned_value;                                                   C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// stuff to do after the camera goes through a power-on reset                   C:\code\2008\Trc2008\camera.c
00338c   0102     MOVLB     0x2            	if(boot_initialization_flag == 1)                                               C:\code\2008\Trc2008\camera.c
00338e   0587     DECF      0x87,0x0,0x1                                                                                    
003390   e107     BNZ       0x33a0                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
                                           		// get the camera's attention                                                  C:\code\2008\Trc2008\camera.c
003392   d98a     RCALL     0x36a8         		Camera_Idle();                                                                 C:\code\2008\Trc2008\camera.c
                                           		// set the command & packet transfer mode                                      C:\code\2008\Trc2008\camera.c
003394   0e05     MOVLW     0x5            		Raw_Mode(5);                                                                   C:\code\2008\Trc2008\camera.c
003396   6ee6     MOVWF     0xe6,0x0                                                                                        
003398   d993     RCALL     0x36c0                                                                                          
00339a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		// don't execute this code again until the next power on reset                 C:\code\2008\Trc2008\camera.c
00339c   0102     MOVLB     0x2            		boot_initialization_flag = 0;                                                  C:\code\2008\Trc2008\camera.c
00339e   6b87     CLRF      0x87,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// do we need to (re)initialize the state machine?                              C:\code\2008\Trc2008\camera.c
0033a0   0588     DECF      0x88,0x0,0x1   	if(initialize_flag == 1)                                                        C:\code\2008\Trc2008\camera.c
0033a2   e10d     BNZ       0x33be                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
0033a4   6b88     CLRF      0x88,0x1       		initialize_flag = 0;                                                           C:\code\2008\Trc2008\camera.c
0033a6   0102     MOVLB     0x2            		wait_for_ack = 0;                                                              C:\code\2008\Trc2008\camera.c
0033a8   6b2d     CLRF      0x2d,0x1                                                                                        
0033aa   0e01     MOVLW     0x1            		state = STATE_ONE;                                                             C:\code\2008\Trc2008\camera.c
0033ac   6f2c     MOVWF     0x2c,0x1                                                                                        
0033ae   6b2e     CLRF      0x2e,0x1       		loop_count = 0;                                                                C:\code\2008\Trc2008\camera.c
0033b0   6b2f     CLRF      0x2f,0x1                                                                                        
0033b2   6b30     CLRF      0x30,0x1       		return_value = 0;                                                              C:\code\2008\Trc2008\camera.c
0033b4   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\code\2008\Trc2008\camera.c
0033b6   6b82     CLRF      0x82,0x1                                                                                        
0033b8   6b83     CLRF      0x83,0x1                                                                                        
0033ba   6b84     CLRF      0x84,0x1       		camera_ncks = 0;                                                               C:\code\2008\Trc2008\camera.c
0033bc   6b85     CLRF      0x85,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// do we need to wait for an ACK from the camera?                               C:\code\2008\Trc2008\camera.c
0033be   0102     MOVLB     0x2            	if(wait_for_ack == 1)                                                           C:\code\2008\Trc2008\camera.c
0033c0   052d     DECF      0x2d,0x0,0x1                                                                                    
0033c2   e129     BNZ       0x3416                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
0033c4   0102     MOVLB     0x2            		if(camera_acks >= 1) // got ACK?                                               C:\code\2008\Trc2008\camera.c
0033c6   0e01     MOVLW     0x1                                                                                             
0033c8   5d82     SUBWF     0x82,0x0,0x1                                                                                    
0033ca   0e00     MOVLW     0x0                                                                                             
0033cc   5983     SUBWFB    0x83,0x0,0x1                                                                                    
0033ce   e305     BNC       0x33da                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			// we're no longer waiting for an ACK                                         C:\code\2008\Trc2008\camera.c
0033d0   0102     MOVLB     0x2            			wait_for_ack = 0;                                                             C:\code\2008\Trc2008\camera.c
0033d2   6b2d     CLRF      0x2d,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           			// reset the loop counter                                                     C:\code\2008\Trc2008\camera.c
0033d4   6b2e     CLRF      0x2e,0x1       			loop_count = 0;                                                               C:\code\2008\Trc2008\camera.c
0033d6   6b2f     CLRF      0x2f,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
0033d8   d01d     BRA       0x3414         		else if(camera_ncks >= 1) // got NCK?                                          C:\code\2008\Trc2008\camera.c
0033da   0e01     MOVLW     0x1                                                                                             
0033dc   5d84     SUBWF     0x84,0x0,0x1                                                                                    
0033de   0e00     MOVLW     0x0                                                                                             
0033e0   5985     SUBWFB    0x85,0x0,0x1                                                                                    
0033e2   e304     BNC       0x33ec                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			// return with a value that signals an error happened                         C:\code\2008\Trc2008\camera.c
0033e4   0102     MOVLB     0x2            			return_value = state - 1;                                                     C:\code\2008\Trc2008\camera.c
0033e6   052c     DECF      0x2c,0x0,0x1                                                                                    
0033e8   6f30     MOVWF     0x30,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
0033ea   d014     BRA       0x3414         		else if(loop_count >= MAX_ACK_LOOP_COUNT) // have we waited too long?          C:\code\2008\Trc2008\camera.c
0033ec   0102     MOVLB     0x2                                                                                             
0033ee   0e0a     MOVLW     0xa                                                                                             
0033f0   5d2e     SUBWF     0x2e,0x0,0x1                                                                                    
0033f2   0e00     MOVLW     0x0                                                                                             
0033f4   592f     SUBWFB    0x2f,0x0,0x1                                                                                    
0033f6   e30b     BNC       0x340e                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			// return with a value that signals an error happened                         C:\code\2008\Trc2008\camera.c
0033f8   0e80     MOVLW     0x80           			return_value = state + 128 - 1;                                               C:\code\2008\Trc2008\camera.c
0033fa   252c     ADDWF     0x2c,0x0,0x1                                                                                    
0033fc   6e00     MOVWF     0x0,0x0                                                                                         
0033fe   6a01     CLRF      0x1,0x0                                                                                         
003400   0e00     MOVLW     0x0                                                                                             
003402   2201     ADDWFC    0x1,0x1,0x0                                                                                     
003404   0600     DECF      0x0,0x1,0x0                                                                                     
003406   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
003408   c000     MOVFF     0x0,0x230                                                                                       
00340a   f230                                                                                                               
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
00340c   d003     BRA       0x3414         		else                                                                           C:\code\2008\Trc2008\camera.c
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			// if we fall through to here it means that that we've sent a                 C:\code\2008\Trc2008\camera.c
                                           			// command to the camera, and we're still waiting to receive                  C:\code\2008\Trc2008\camera.c
                                           			// an ACK/NCK or time-out, so other than incrementing the loop                C:\code\2008\Trc2008\camera.c
                                           			// counter, we don't do anything and continue to wait...                      C:\code\2008\Trc2008\camera.c
00340e   2b2e     INCF      0x2e,0x1,0x1   			loop_count++;                                                                 C:\code\2008\Trc2008\camera.c
003410   0e00     MOVLW     0x0                                                                                             
003412   232f     ADDWFC    0x2f,0x1,0x1                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
003414   d109     BRA       0x3628         	else                                                                            C:\code\2008\Trc2008\camera.c
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		// if debugging mode is on, send camera initialization information             C:\code\2008\Trc2008\camera.c
                                           		// to the terminal (the DEBUG() macro is defined in camera.h                   C:\code\2008\Trc2008\camera.c
                                           		DEBUG(("Camera: Initialization state = %u\r\n", (unsigned int)state));         C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           		// reset the ACK/NCK counters                                                  C:\code\2008\Trc2008\camera.c
003416   0102     MOVLB     0x2            		camera_acks = 0;                                                               C:\code\2008\Trc2008\camera.c
003418   6b82     CLRF      0x82,0x1                                                                                        
00341a   6b83     CLRF      0x83,0x1                                                                                        
00341c   6b84     CLRF      0x84,0x1       		camera_ncks = 0;                                                               C:\code\2008\Trc2008\camera.c
00341e   6b85     CLRF      0x85,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\camera.c
003420   0102     MOVLB     0x2            		switch(state)                                                                  C:\code\2008\Trc2008\camera.c
003422   512c     MOVF      0x2c,0x0,0x1                                                                                    
003424   0a12     XORLW     0x12                                                                                            
003426   e101     BNZ       0x342a                                                                                          
003428   d0fc     BRA       0x3622                                                                                          
00342a   0a03     XORLW     0x3                                                                                             
00342c   e101     BNZ       0x3430                                                                                          
00342e   d0e2     BRA       0x35f4                                                                                          
003430   0a01     XORLW     0x1                                                                                             
003432   e101     BNZ       0x3436                                                                                          
003434   d0d6     BRA       0x35e2                                                                                          
003436   0a1f     XORLW     0x1f                                                                                            
003438   e101     BNZ       0x343c                                                                                          
00343a   d0c6     BRA       0x35c8                                                                                          
00343c   0a01     XORLW     0x1                                                                                             
00343e   e101     BNZ       0x3442                                                                                          
003440   d0b6     BRA       0x35ae                                                                                          
003442   0a03     XORLW     0x3                                                                                             
003444   e101     BNZ       0x3448                                                                                          
003446   d0a6     BRA       0x3594                                                                                          
003448   0a01     XORLW     0x1                                                                                             
00344a   e101     BNZ       0x344e                                                                                          
00344c   d096     BRA       0x357a                                                                                          
00344e   0a07     XORLW     0x7                                                                                             
003450   e101     BNZ       0x3454                                                                                          
003452   d086     BRA       0x3560                                                                                          
003454   0a01     XORLW     0x1                                                                                             
003456   e101     BNZ       0x345a                                                                                          
003458   d078     BRA       0x354a                                                                                          
00345a   0a03     XORLW     0x3                                                                                             
00345c   e069     BZ        0x3530                                                                                          
00345e   0a01     XORLW     0x1                                                                                             
003460   e05a     BZ        0x3516                                                                                          
003462   0a0f     XORLW     0xf                                                                                             
003464   e04b     BZ        0x34fc                                                                                          
003466   0a01     XORLW     0x1                                                                                             
003468   e03c     BZ        0x34e2                                                                                          
00346a   0a03     XORLW     0x3                                                                                             
00346c   e02d     BZ        0x34c8                                                                                          
00346e   0a01     XORLW     0x1                                                                                             
003470   e01e     BZ        0x34ae                                                                                          
003472   0a07     XORLW     0x7                                                                                             
003474   e00f     BZ        0x3494                                                                                          
003476   0a01     XORLW     0x1                                                                                             
003478   e009     BZ        0x348c                                                                                          
00347a   0a03     XORLW     0x3                                                                                             
00347c   e001     BZ        0x3480                                                                                          
00347e   d0d4     BRA       0x3628                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\camera.c
                                           			case STATE_ONE:                                                               C:\code\2008\Trc2008\camera.c
                                           				// get the camera's attention                                                C:\code\2008\Trc2008\camera.c
003480   d913     RCALL     0x36a8         				Camera_Idle();                                                               C:\code\2008\Trc2008\camera.c
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
003482   0102     MOVLB     0x2            				state = STATE_TWO;                                                           C:\code\2008\Trc2008\camera.c
003484   0e02     MOVLW     0x2                                                                                             
003486   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\code\2008\Trc2008\camera.c
003488   6b2d     CLRF      0x2d,0x1       				wait_for_ack = 0;                                                            C:\code\2008\Trc2008\camera.c
00348a   d0ce     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           			case STATE_TWO:                                                               C:\code\2008\Trc2008\camera.c
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
00348c   0e03     MOVLW     0x3            				state = STATE_THREE;                                                         C:\code\2008\Trc2008\camera.c
00348e   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// don't wait for an ACK before transitioning to the next state              C:\code\2008\Trc2008\camera.c
003490   6b2d     CLRF      0x2d,0x1       				wait_for_ack = 0;                                                            C:\code\2008\Trc2008\camera.c
003492   d0ca     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           	                                                                                C:\code\2008\Trc2008\camera.c
                                           			case STATE_THREE:                                                             C:\code\2008\Trc2008\camera.c
                                           				// initialize the Common Control I register                                  C:\code\2008\Trc2008\camera.c
003494   0e80     MOVLW     0x80           				Write_Camera_Module_Register(COMI_ADDRESS, COMI_DEFAULT);                    C:\code\2008\Trc2008\camera.c
003496   6ee6     MOVWF     0xe6,0x0                                                                                        
003498   0e29     MOVLW     0x29                                                                                            
00349a   6ee6     MOVWF     0xe6,0x0                                                                                        
00349c   d970     RCALL     0x377e                                                                                          
00349e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0034a2   0102     MOVLB     0x2            				state = STATE_FOUR;                                                          C:\code\2008\Trc2008\camera.c
0034a4   0e04     MOVLW     0x4                                                                                             
0034a6   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0034a8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0034aa   6f2d     MOVWF     0x2d,0x1                                                                                        
0034ac   d0bd     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           	                                                                                C:\code\2008\Trc2008\camera.c
                                           			case STATE_FOUR:                                                              C:\code\2008\Trc2008\camera.c
                                           				// initialize the Common Control B register                                  C:\code\2008\Trc2008\camera.c
0034ae   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMB_ADDRESS, COMB_DEFAULT);                    C:\code\2008\Trc2008\camera.c
0034b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0034b2   0e13     MOVLW     0x13                                                                                            
0034b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0034b6   d963     RCALL     0x377e                                                                                          
0034b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0034bc   0102     MOVLB     0x2            				state = STATE_FIVE;                                                          C:\code\2008\Trc2008\camera.c
0034be   0e05     MOVLW     0x5                                                                                             
0034c0   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0034c2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0034c4   6f2d     MOVWF     0x2d,0x1                                                                                        
0034c6   d0b0     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           			case STATE_FIVE:                                                              C:\code\2008\Trc2008\camera.c
                                           				// initialize the Common Control J register to power-on state                C:\code\2008\Trc2008\camera.c
                                           				// to disable the banding filter, which must be done before                  C:\code\2008\Trc2008\camera.c
                                           				// setting the Frame Rate Adjust register 2 (EHSL)                           C:\code\2008\Trc2008\camera.c
0034c8   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\code\2008\Trc2008\camera.c
0034ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0034cc   0e2d     MOVLW     0x2d                                                                                            
0034ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0034d0   d956     RCALL     0x377e                                                                                          
0034d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0034d6   0102     MOVLB     0x2            				state = STATE_SIX;                                                           C:\code\2008\Trc2008\camera.c
0034d8   0e06     MOVLW     0x6                                                                                             
0034da   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0034dc   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0034de   6f2d     MOVWF     0x2d,0x1                                                                                        
0034e0   d0a3     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_SIX:                                                               C:\code\2008\Trc2008\camera.c
                                           				// initialize the Frame Rate Adjust register 1                               C:\code\2008\Trc2008\camera.c
0034e2   0e80     MOVLW     0x80           				Write_Camera_Module_Register(EHSH_ADDRESS, EHSH_DEFAULT);                    C:\code\2008\Trc2008\camera.c
0034e4   6ee6     MOVWF     0xe6,0x0                                                                                        
0034e6   0e2a     MOVLW     0x2a                                                                                            
0034e8   6ee6     MOVWF     0xe6,0x0                                                                                        
0034ea   d949     RCALL     0x377e                                                                                          
0034ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0034ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0034f0   0102     MOVLB     0x2            				state = STATE_SEVEN;                                                         C:\code\2008\Trc2008\camera.c
0034f2   0e07     MOVLW     0x7                                                                                             
0034f4   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0034f6   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0034f8   6f2d     MOVWF     0x2d,0x1                                                                                        
0034fa   d096     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_SEVEN:                                                             C:\code\2008\Trc2008\camera.c
                                           				// initialize the Frame Rate Adjust register 2                               C:\code\2008\Trc2008\camera.c
0034fc   0e20     MOVLW     0x20           				Write_Camera_Module_Register(EHSL_ADDRESS, EHSL_DEFAULT);                    C:\code\2008\Trc2008\camera.c
0034fe   6ee6     MOVWF     0xe6,0x0                                                                                        
003500   0e2b     MOVLW     0x2b                                                                                            
003502   6ee6     MOVWF     0xe6,0x0                                                                                        
003504   d93c     RCALL     0x377e                                                                                          
003506   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003508   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
00350a   0102     MOVLB     0x2            				state = STATE_EIGHT;                                                         C:\code\2008\Trc2008\camera.c
00350c   0e08     MOVLW     0x8                                                                                             
00350e   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
003510   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
003512   6f2d     MOVWF     0x2d,0x1                                                                                        
003514   d089     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_EIGHT:                                                             C:\code\2008\Trc2008\camera.c
                                           				// initialize the Common Control J register                                  C:\code\2008\Trc2008\camera.c
003516   0e84     MOVLW     0x84           				Write_Camera_Module_Register(COMJ_ADDRESS, COMJ_DEFAULT);                    C:\code\2008\Trc2008\camera.c
003518   6ee6     MOVWF     0xe6,0x0                                                                                        
00351a   0e2d     MOVLW     0x2d                                                                                            
00351c   6ee6     MOVWF     0xe6,0x0                                                                                        
00351e   d92f     RCALL     0x377e                                                                                          
003520   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003522   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
003524   0102     MOVLB     0x2            				state = STATE_NINE;                                                          C:\code\2008\Trc2008\camera.c
003526   0e09     MOVLW     0x9                                                                                             
003528   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
00352a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
00352c   6f2d     MOVWF     0x2d,0x1                                                                                        
00352e   d07c     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_NINE:                                                              C:\code\2008\Trc2008\camera.c
                                           				// initialize the Common Control A register                                  C:\code\2008\Trc2008\camera.c
003530   0e20     MOVLW     0x20           				Write_Camera_Module_Register(COMA_ADDRESS, COMA_DEFAULT);                    C:\code\2008\Trc2008\camera.c
003532   6ee6     MOVWF     0xe6,0x0                                                                                        
003534   0e12     MOVLW     0x12                                                                                            
003536   6ee6     MOVWF     0xe6,0x0                                                                                        
003538   d922     RCALL     0x377e                                                                                          
00353a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00353c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
00353e   0102     MOVLB     0x2            				state = STATE_TEN;                                                           C:\code\2008\Trc2008\camera.c
003540   0e0a     MOVLW     0xa                                                                                             
003542   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
003544   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
003546   6f2d     MOVWF     0x2d,0x1                                                                                        
003548   d06f     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_TEN:                                                               C:\code\2008\Trc2008\camera.c
                                           				// initialize the Automatic Gain Control register                            C:\code\2008\Trc2008\camera.c
00354a   6ae6     CLRF      0xe6,0x0       				Write_Camera_Module_Register(AGC_ADDRESS, AGC_DEFAULT);                      C:\code\2008\Trc2008\camera.c
00354c   6ae6     CLRF      0xe6,0x0                                                                                        
00354e   d917     RCALL     0x377e                                                                                          
003550   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003552   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
003554   0102     MOVLB     0x2            				state = STATE_ELEVEN;                                                        C:\code\2008\Trc2008\camera.c
003556   0e0b     MOVLW     0xb                                                                                             
003558   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
00355a   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
00355c   6f2d     MOVWF     0x2d,0x1                                                                                        
00355e   d064     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_ELEVEN:                                                            C:\code\2008\Trc2008\camera.c
                                           				// initialize the Blue Gain Control register                                 C:\code\2008\Trc2008\camera.c
003560   0e80     MOVLW     0x80           				Write_Camera_Module_Register(BLU_ADDRESS, BLU_DEFAULT);                      C:\code\2008\Trc2008\camera.c
003562   6ee6     MOVWF     0xe6,0x0                                                                                        
003564   0e01     MOVLW     0x1                                                                                             
003566   6ee6     MOVWF     0xe6,0x0                                                                                        
003568   d90a     RCALL     0x377e                                                                                          
00356a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00356c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
00356e   0102     MOVLB     0x2            				state = STATE_TWELVE;                                                        C:\code\2008\Trc2008\camera.c
003570   0e0c     MOVLW     0xc                                                                                             
003572   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
003574   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
003576   6f2d     MOVWF     0x2d,0x1                                                                                        
003578   d057     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_TWELVE:                                                            C:\code\2008\Trc2008\camera.c
                                           				// initialize the Red Gain Control register                                  C:\code\2008\Trc2008\camera.c
00357a   0e80     MOVLW     0x80           				Write_Camera_Module_Register(RED_ADDRESS, RED_DEFAULT);                      C:\code\2008\Trc2008\camera.c
00357c   6ee6     MOVWF     0xe6,0x0                                                                                        
00357e   0e02     MOVLW     0x2                                                                                             
003580   6ee6     MOVWF     0xe6,0x0                                                                                        
003582   d8fd     RCALL     0x377e                                                                                          
003584   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003586   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
003588   0102     MOVLB     0x2            				state = STATE_THIRTEEN;                                                      C:\code\2008\Trc2008\camera.c
00358a   0e0d     MOVLW     0xd                                                                                             
00358c   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
00358e   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
003590   6f2d     MOVWF     0x2d,0x1                                                                                        
003592   d04a     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_THIRTEEN:                                                          C:\code\2008\Trc2008\camera.c
                                           				// initialize the Saturation Control register                                C:\code\2008\Trc2008\camera.c
003594   0e80     MOVLW     0x80           				Write_Camera_Module_Register(SAT_ADDRESS, SAT_DEFAULT);                      C:\code\2008\Trc2008\camera.c
003596   6ee6     MOVWF     0xe6,0x0                                                                                        
003598   0e03     MOVLW     0x3                                                                                             
00359a   6ee6     MOVWF     0xe6,0x0                                                                                        
00359c   d8f0     RCALL     0x377e                                                                                          
00359e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0035a2   0102     MOVLB     0x2            				state = STATE_FOURTEEN;                                                      C:\code\2008\Trc2008\camera.c
0035a4   0e0e     MOVLW     0xe                                                                                             
0035a6   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0035a8   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0035aa   6f2d     MOVWF     0x2d,0x1                                                                                        
0035ac   d03d     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_FOURTEEN:                                                          C:\code\2008\Trc2008\camera.c
                                           				// initialize the Brightness Control register                                C:\code\2008\Trc2008\camera.c
0035ae   0e01     MOVLW     0x1            				Write_Camera_Module_Register(BRT_ADDRESS, BRT_DEFAULT);                      C:\code\2008\Trc2008\camera.c
0035b0   6ee6     MOVWF     0xe6,0x0                                                                                        
0035b2   0e06     MOVLW     0x6                                                                                             
0035b4   6ee6     MOVWF     0xe6,0x0                                                                                        
0035b6   d8e3     RCALL     0x377e                                                                                          
0035b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0035bc   0102     MOVLB     0x2            				state = STATE_FIFTEEN;                                                       C:\code\2008\Trc2008\camera.c
0035be   0e0f     MOVLW     0xf                                                                                             
0035c0   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0035c2   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0035c4   6f2d     MOVWF     0x2d,0x1                                                                                        
0035c6   d030     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_FIFTEEN:                                                           C:\code\2008\Trc2008\camera.c
                                           				// initialize the Automatic Exposure Control register                        C:\code\2008\Trc2008\camera.c
0035c8   0e01     MOVLW     0x1            				Write_Camera_Module_Register(AEC_ADDRESS, AEC_DEFAULT);                      C:\code\2008\Trc2008\camera.c
0035ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0035cc   0e10     MOVLW     0x10                                                                                            
0035ce   6ee6     MOVWF     0xe6,0x0                                                                                        
0035d0   d8d6     RCALL     0x377e                                                                                          
0035d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0035d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0035d6   0102     MOVLB     0x2            				state = STATE_SIXTEEN;                                                       C:\code\2008\Trc2008\camera.c
0035d8   0e10     MOVLW     0x10                                                                                            
0035da   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0035dc   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0035de   6f2d     MOVWF     0x2d,0x1                                                                                        
0035e0   d023     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		                                                                               C:\code\2008\Trc2008\camera.c
                                           			case STATE_SIXTEEN:                                                           C:\code\2008\Trc2008\camera.c
                                           				// initialize the Noise Filter value                                         C:\code\2008\Trc2008\camera.c
0035e2   6ae6     CLRF      0xe6,0x0       				Noise_Filter(NF_DEFAULT);                                                    C:\code\2008\Trc2008\camera.c
0035e4   d88b     RCALL     0x36fc                                                                                          
0035e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
0035e8   0102     MOVLB     0x2            				state = STATE_SEVENTEEN;                                                     C:\code\2008\Trc2008\camera.c
0035ea   0e11     MOVLW     0x11                                                                                            
0035ec   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
0035ee   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
0035f0   6f2d     MOVWF     0x2d,0x1                                                                                        
0035f2   d01a     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           			case STATE_SEVENTEEN:                                                         C:\code\2008\Trc2008\camera.c
                                           				// send the TC or Track Color command                                        C:\code\2008\Trc2008\camera.c
003604   0e73     MOVLW     0x73           				Track_Color(R_MIN_DEFAULT, R_MAX_DEFAULT,                                    C:\code\2008\Trc2008\camera.c
003606   6ee6     MOVWF     0xe6,0x0                                                                                        
003608   0e55     MOVLW     0x55                                                                                            
00360a   6ee6     MOVWF     0xe6,0x0                                                                                        
0035fc   0e11     MOVLW     0x11           							G_MIN_DEFAULT, G_MAX_DEFAULT,                                             C:\code\2008\Trc2008\camera.c
0035fe   6ee6     MOVWF     0xe6,0x0                                                                                        
003600   0e0f     MOVLW     0xf                                                                                             
003602   6ee6     MOVWF     0xe6,0x0                                                                                        
0035f4   0e91     MOVLW     0x91           							B_MIN_DEFAULT, B_MAX_DEFAULT);                                            C:\code\2008\Trc2008\camera.c
0035f6   6ee6     MOVWF     0xe6,0x0                                                                                        
0035f8   0e64     MOVLW     0x64                                                                                            
0035fa   6ee6     MOVWF     0xe6,0x0                                                                                        
00360c   d81b     RCALL     0x3644                                                                                          
00360e   6ef5     MOVWF     0xf5,0x0                                                                                        
003610   0e06     MOVLW     0x6                                                                                             
003612   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003614   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           				// next state                                                                C:\code\2008\Trc2008\camera.c
003616   0102     MOVLB     0x2            				state = STATE_EIGHTEEN;                                                      C:\code\2008\Trc2008\camera.c
003618   0e12     MOVLW     0x12                                                                                            
00361a   6f2c     MOVWF     0x2c,0x1                                                                                        
                                           				// wait for an ACK before transitioning to the next state                    C:\code\2008\Trc2008\camera.c
00361c   0e01     MOVLW     0x1            				wait_for_ack = 1;                                                            C:\code\2008\Trc2008\camera.c
00361e   6f2d     MOVWF     0x2d,0x1                                                                                        
003620   d003     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           	                                                                                C:\code\2008\Trc2008\camera.c
                                           			case STATE_EIGHTEEN:                                                          C:\code\2008\Trc2008\camera.c
                                           				// signal that we're done                                                    C:\code\2008\Trc2008\camera.c
003622   0e01     MOVLW     0x1            				return_value = 1;                                                            C:\code\2008\Trc2008\camera.c
003624   6f30     MOVWF     0x30,0x1                                                                                        
003626   d000     BRA       0x3628         				break;                                                                       C:\code\2008\Trc2008\camera.c
                                           		}                                                                              C:\code\2008\Trc2008\camera.c
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           	// If we're returning from this function with a value greater                   C:\code\2008\Trc2008\camera.c
                                           	// than zero, it means that configuration is complete or we've                  C:\code\2008\Trc2008\camera.c
                                           	// generated an error. In either case we'll want to re-initialize               C:\code\2008\Trc2008\camera.c
                                           	// the state machine if this function is called again.                          C:\code\2008\Trc2008\camera.c
003628   5130     MOVF      0x30,0x0,0x1   	if(return_value > 0)                                                            C:\code\2008\Trc2008\camera.c
00362a   0800     SUBLW     0x0                                                                                             
00362c   e203     BC        0x3634                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\camera.c
00362e   0102     MOVLB     0x2            		initialize_flag = 1;                                                           C:\code\2008\Trc2008\camera.c
003630   0e01     MOVLW     0x1                                                                                             
003632   6f88     MOVWF     0x88,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
003634   0102     MOVLB     0x2            	return(return_value);	                                                          C:\code\2008\Trc2008\camera.c
003636   5130     MOVF      0x30,0x0,0x1                                                                                    
003638   d000     BRA       0x363a                                                                                          
00363a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
00363c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00363e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003640   ffd9                                                                                                               
003642   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Track_Color()                                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a TC (Track Color) command                C:\code\2008\Trc2008\camera.c
                                           *					to the camera.		                                                           C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Minimum and maximum intensity values for the red, green           C:\code\2008\Trc2008\camera.c
                                           *					and blue (or YCrCb) channels.                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Trc2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
003644   cfd9     MOVFF     0xfd9,0xfe6    void Track_Color(unsigned char Rmin, unsigned char Rmax,                         C:\code\2008\Trc2008\camera.c
003646   ffe6                                                                                                               
003648   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00364a   ffd9                                                                                                               
                                           				 unsigned char Gmin, unsigned char Gmax,                                     C:\code\2008\Trc2008\camera.c
                                           				 unsigned char Bmin, unsigned char Bmax)                                     C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
00364c   0e54     MOVLW     0x54           	Write_Camera_Serial_Port('T');                                                  C:\code\2008\Trc2008\camera.c
00364e   6ee6     MOVWF     0xe6,0x0                                                                                        
003650   d8bc     RCALL     0x37ca                                                                                          
003652   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003654   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\code\2008\Trc2008\camera.c
003656   6ee6     MOVWF     0xe6,0x0                                                                                        
003658   d8b8     RCALL     0x37ca                                                                                          
00365a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00365c   0e06     MOVLW     0x6            	Write_Camera_Serial_Port(6);                                                    C:\code\2008\Trc2008\camera.c
00365e   6ee6     MOVWF     0xe6,0x0                                                                                        
003660   d8b4     RCALL     0x37ca                                                                                          
003662   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003664   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(Rmin);                                                 C:\code\2008\Trc2008\camera.c
003666   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003668   ffe6                                                                                                               
00366a   d8af     RCALL     0x37ca                                                                                          
00366c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00366e   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(Rmax);                                                 C:\code\2008\Trc2008\camera.c
003670   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003672   ffe6                                                                                                               
003674   d8aa     RCALL     0x37ca                                                                                          
003676   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003678   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(Gmin);                                                 C:\code\2008\Trc2008\camera.c
00367a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00367c   ffe6                                                                                                               
00367e   d8a5     RCALL     0x37ca                                                                                          
003680   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003682   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(Gmax);                                                 C:\code\2008\Trc2008\camera.c
003684   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003686   ffe6                                                                                                               
003688   d8a0     RCALL     0x37ca                                                                                          
00368a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00368c   0efa     MOVLW     0xfa           	Write_Camera_Serial_Port(Bmin);                                                 C:\code\2008\Trc2008\camera.c
00368e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003690   ffe6                                                                                                               
003692   d89b     RCALL     0x37ca                                                                                          
003694   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003696   0ef9     MOVLW     0xf9           	Write_Camera_Serial_Port(Bmax);                                                 C:\code\2008\Trc2008\camera.c
003698   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00369a   ffe6                                                                                                               
00369c   d896     RCALL     0x37ca                                                                                          
00369e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036a0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
0036a2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0036a4   ffd9                                                                                                               
0036a6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Camera_Idle()                                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		If the camera is currently streaming data, this command              C:\code\2008\Trc2008\camera.c
                                           *					will stop the streaming and prepare it to receive commands.                C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           void Camera_Idle(void)                                                           C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
0036a8   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\code\2008\Trc2008\camera.c
0036aa   6ee6     MOVWF     0xe6,0x0                                                                                        
0036ac   d88e     RCALL     0x37ca                                                                                          
0036ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036b0   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Restart_Camera()                                                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		This command will force a camera reinitialization		                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           void Restart_Camera(void)                                                        C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
0036b2   0102     MOVLB     0x2            	camera_initialized = 0;                                                         C:\code\2008\Trc2008\camera.c
0036b4   6b7f     CLRF      0x7f,0x1                                                                                        
0036b6   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Get_Camera_State()                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		0: camera is initializing.                                           C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					1: camera is initialized and sending T (Tracking) packets.                 C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           unsigned char Get_Camera_State(void)                                             C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
0036b8   0102     MOVLB     0x2            	return(camera_initialized);                                                     C:\code\2008\Trc2008\camera.c
0036ba   517f     MOVF      0x7f,0x0,0x1                                                                                    
0036bc   d000     BRA       0x36be                                                                                          
0036be   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Raw_Mode()                                                          C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera RM (Raw Mode) command            C:\code\2008\Trc2008\camera.c
                                           *					to the camera. 		                                                          C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		This body of software assumes that raw serial communication         C:\code\2008\Trc2008\camera.c
                                           *					mode five is invoked, meaning that camera input and output                 C:\code\2008\Trc2008\camera.c
                                           *					is done in the raw binary format and that ACKs and NCKs                    C:\code\2008\Trc2008\camera.c
                                           *					are not suppressed.                                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
0036c0   cfd9     MOVFF     0xfd9,0xfe6    void Raw_Mode(unsigned char mode)                                                C:\code\2008\Trc2008\camera.c
0036c2   ffe6                                                                                                               
0036c4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0036c6   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
0036c8   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\code\2008\Trc2008\camera.c
0036ca   6ee6     MOVWF     0xe6,0x0                                                                                        
0036cc   d87e     RCALL     0x37ca                                                                                          
0036ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036d0   0e4d     MOVLW     0x4d           	Write_Camera_Serial_Port('M');                                                  C:\code\2008\Trc2008\camera.c
0036d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0036d4   d87a     RCALL     0x37ca                                                                                          
0036d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036d8   0e20     MOVLW     0x20           	Write_Camera_Serial_Port(' ');                                                  C:\code\2008\Trc2008\camera.c
0036da   6ee6     MOVWF     0xe6,0x0                                                                                        
0036dc   d876     RCALL     0x37ca                                                                                          
0036de   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036e0   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(48 + mode);                                            C:\code\2008\Trc2008\camera.c
0036e2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0036e4   0f30     ADDLW     0x30                                                                                            
0036e6   6ee6     MOVWF     0xe6,0x0                                                                                        
0036e8   d870     RCALL     0x37ca                                                                                          
0036ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036ec   0e0d     MOVLW     0xd            	Write_Camera_Serial_Port('\r');                                                 C:\code\2008\Trc2008\camera.c
0036ee   6ee6     MOVWF     0xe6,0x0                                                                                        
0036f0   d86c     RCALL     0x37ca                                                                                          
0036f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036f4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
0036f6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0036f8   ffd9                                                                                                               
0036fa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Noise_Filter()                                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a camera NF (Noise Filter)                C:\code\2008\Trc2008\camera.c
                                           *					command to the camera.                                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Noise filter threshold value.                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Trc2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
0036fc   cfd9     MOVFF     0xfd9,0xfe6    void Noise_Filter(unsigned char threshold)                                       C:\code\2008\Trc2008\camera.c
0036fe   ffe6                                                                                                               
003700   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003702   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
003704   0e4e     MOVLW     0x4e           	Write_Camera_Serial_Port('N');                                                  C:\code\2008\Trc2008\camera.c
003706   6ee6     MOVWF     0xe6,0x0                                                                                        
003708   d860     RCALL     0x37ca                                                                                          
00370a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00370c   0e46     MOVLW     0x46           	Write_Camera_Serial_Port('F');                                                  C:\code\2008\Trc2008\camera.c
00370e   6ee6     MOVWF     0xe6,0x0                                                                                        
003710   d85c     RCALL     0x37ca                                                                                          
003712   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003714   0e01     MOVLW     0x1            	Write_Camera_Serial_Port(1);                                                    C:\code\2008\Trc2008\camera.c
003716   6ee6     MOVWF     0xe6,0x0                                                                                        
003718   d858     RCALL     0x37ca                                                                                          
00371a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00371c   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(threshold);                                            C:\code\2008\Trc2008\camera.c
00371e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003720   ffe6                                                                                                               
003722   d853     RCALL     0x37ca                                                                                          
003724   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003726   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
003728   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00372a   ffd9                                                                                                               
00372c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Virtual_Window()                                                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a VW (Virtual Window) command             C:\code\2008\Trc2008\camera.c
                                           *					to the camera.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Four unsigned chars specifying two corners of the                 C:\code\2008\Trc2008\camera.c
                                           *					virtual window.                                                            C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Trc2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
00372e   cfd9     MOVFF     0xfd9,0xfe6    void Virtual_Window(unsigned char x, unsigned char y, unsigned char x2, unsigned char y2) C:\code\2008\Trc2008\camera.c
003730   ffe6                                                                                                               
003732   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003734   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
003736   0e56     MOVLW     0x56           	Write_Camera_Serial_Port('V');                                                  C:\code\2008\Trc2008\camera.c
003738   6ee6     MOVWF     0xe6,0x0                                                                                        
00373a   d847     RCALL     0x37ca                                                                                          
00373c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00373e   0e57     MOVLW     0x57           	Write_Camera_Serial_Port('W');                                                  C:\code\2008\Trc2008\camera.c
003740   6ee6     MOVWF     0xe6,0x0                                                                                        
003742   d843     RCALL     0x37ca                                                                                          
003744   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003746   0e04     MOVLW     0x4            	Write_Camera_Serial_Port(4);                                                    C:\code\2008\Trc2008\camera.c
003748   6ee6     MOVWF     0xe6,0x0                                                                                        
00374a   d83f     RCALL     0x37ca                                                                                          
00374c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00374e   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(x);                                                    C:\code\2008\Trc2008\camera.c
003750   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003752   ffe6                                                                                                               
003754   d83a     RCALL     0x37ca                                                                                          
003756   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003758   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(y);                                                    C:\code\2008\Trc2008\camera.c
00375a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00375c   ffe6                                                                                                               
00375e   d835     RCALL     0x37ca                                                                                          
003760   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003762   0efc     MOVLW     0xfc           	Write_Camera_Serial_Port(x2);                                                   C:\code\2008\Trc2008\camera.c
003764   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003766   ffe6                                                                                                               
003768   d830     RCALL     0x37ca                                                                                          
00376a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00376c   0efb     MOVLW     0xfb           	Write_Camera_Serial_Port(y2);                                                   C:\code\2008\Trc2008\camera.c
00376e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003770   ffe6                                                                                                               
003772   d82b     RCALL     0x37ca                                                                                          
003774   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003776   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
003778   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00377a   ffd9                                                                                                               
00377c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Write_Camera_Module_Register()                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Properly formats and sends a CR (Camera Register) command            C:\code\2008\Trc2008\camera.c
                                           *					to the camera.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:	Initialize_Camera(), above.                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Camera register number and new register value.                    C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera must be configured to accept binary commands,                C:\code\2008\Trc2008\camera.c
                                           *					not ASCII. See Raw_Mode() function.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					See CMUCam2_commands.pdf for details.                                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
00377e   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Module_Register(unsigned char reg, unsigned char value)        C:\code\2008\Trc2008\camera.c
003780   ffe6                                                                                                               
003782   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003784   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
003786   0e43     MOVLW     0x43           	Write_Camera_Serial_Port('C');                                                  C:\code\2008\Trc2008\camera.c
003788   6ee6     MOVWF     0xe6,0x0                                                                                        
00378a   d81f     RCALL     0x37ca                                                                                          
00378c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00378e   0e52     MOVLW     0x52           	Write_Camera_Serial_Port('R');                                                  C:\code\2008\Trc2008\camera.c
003790   6ee6     MOVWF     0xe6,0x0                                                                                        
003792   d81b     RCALL     0x37ca                                                                                          
003794   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003796   0e02     MOVLW     0x2            	Write_Camera_Serial_Port(2);                                                    C:\code\2008\Trc2008\camera.c
003798   6ee6     MOVWF     0xe6,0x0                                                                                        
00379a   d817     RCALL     0x37ca                                                                                          
00379c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00379e   0efe     MOVLW     0xfe           	Write_Camera_Serial_Port(reg);                                                  C:\code\2008\Trc2008\camera.c
0037a0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0037a2   ffe6                                                                                                               
0037a4   d812     RCALL     0x37ca                                                                                          
0037a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0037a8   0efd     MOVLW     0xfd           	Write_Camera_Serial_Port(value);                                                C:\code\2008\Trc2008\camera.c
0037aa   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0037ac   ffe6                                                                                                               
0037ae   d80d     RCALL     0x37ca                                                                                          
0037b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0037b2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
0037b4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0037b6   ffd9                                                                                                               
0037b8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Camera_Serial_Port_Byte_Count()                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the camera serial port's              C:\code\2008\Trc2008\camera.c
                                           *					received data queue.		                                                     C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.		                                                C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           unsigned char Camera_Serial_Port_Byte_Count(void)                                C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Trc2008\camera.c
                                           	return(Serial_Port_One_Byte_Count());                                           C:\code\2008\Trc2008\camera.c
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
0037ba   ec7a     CALL      0x48f4,0x0     	return(Serial_Port_Two_Byte_Count());                                           C:\code\2008\Trc2008\camera.c
0037bc   f024                                                                                                               
0037be   d000     BRA       0x37c0                                                                                          
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
0037c0   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Read_Camera_Serial_Port()                                           C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Reads a byte of data from the camera serial port.		                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		If data is present in the camera serial port's received              C:\code\2008\Trc2008\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\code\2008\Trc2008\camera.c
                                           *					data is not present in the camera serial port's received                   C:\code\2008\Trc2008\camera.c
                                           *					data queue, zero is returned.                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Camera_Serial_Port_Byte_Count() should be called before             C:\code\2008\Trc2008\camera.c
                                           *					calling this function to make sure data is present.                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           unsigned char Read_Camera_Serial_Port(void)                                      C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Trc2008\camera.c
                                           	return(Read_Serial_Port_One());                                                 C:\code\2008\Trc2008\camera.c
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
0037c2   ecb0     CALL      0x4960,0x0     	return(Read_Serial_Port_Two());                                                 C:\code\2008\Trc2008\camera.c
0037c4   f024                                                                                                               
0037c6   d000     BRA       0x37c8                                                                                          
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
0037c8   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Write_Camera_Serial_Port()                                          C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Sends a byte of data to the camera serial port.                      C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Byte of data to send to the camera serial port.                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
0037ca   cfd9     MOVFF     0xfd9,0xfe6    void Write_Camera_Serial_Port(unsigned char value)                               C:\code\2008\Trc2008\camera.c
0037cc   ffe6                                                                                                               
0037ce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0037d0   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef CAMERA_SERIAL_PORT_1                                                      C:\code\2008\Trc2008\camera.c
                                           	Write_Serial_Port_One(value);                                                   C:\code\2008\Trc2008\camera.c
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
0037d2   0efe     MOVLW     0xfe           	Write_Serial_Port_Two(value);                                                   C:\code\2008\Trc2008\camera.c
0037d4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0037d6   ffe6                                                                                                               
0037d8   ecf7     CALL      0x49ee,0x0                                                                                      
0037da   f024                                                                                                               
0037dc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
0037de   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
0037e0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0037e2   ffd9                                                                                                               
0037e4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Terminal_Serial_Port_Byte_Count()                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Returns the number of bytes in the terminal serial port's            C:\code\2008\Trc2008\camera.c
                                           *					received data queue.                                                       C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Number of bytes in the queue.                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           unsigned char Terminal_Serial_Port_Byte_Count(void)                              C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Trc2008\camera.c
0037e6   ec6a     CALL      0x48d4,0x0     	return(Serial_Port_One_Byte_Count());                                           C:\code\2008\Trc2008\camera.c
0037e8   f024                                                                                                               
0037ea   d000     BRA       0x37ec                                                                                          
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
                                           	return(Serial_Port_Two_Byte_Count());                                           C:\code\2008\Trc2008\camera.c
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
0037ec   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Read_Terminal_Serial_Port()                                         C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Reads a byte of data from the terminal serial port.                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		If data is present in the terminal serial port's received            C:\code\2008\Trc2008\camera.c
                                           *					data queue, the next byte in the queue is returned. If                     C:\code\2008\Trc2008\camera.c
                                           *					data is not present in the terminal serial port's received                 C:\code\2008\Trc2008\camera.c
                                           *					data queue, zero is returned.                                              C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		Terminal_Serial_Port_Byte_Count() should be called before           C:\code\2008\Trc2008\camera.c
                                           *					calling this function to make sure data is present.                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *					This code assumes that the camera serial port has been                     C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
                                           unsigned char Read_Terminal_Serial_Port(void)                                    C:\code\2008\Trc2008\camera.c
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Trc2008\camera.c
0037ee   ec8a     CALL      0x4914,0x0     	return(Read_Serial_Port_One());                                                 C:\code\2008\Trc2008\camera.c
0037f0   f024                                                                                                               
0037f2   d000     BRA       0x37f4                                                                                          
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
                                           	return(Read_Serial_Port_Two());                                                 C:\code\2008\Trc2008\camera.c
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
0037f4   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\camera.c
                                                                                                                            C:\code\2008\Trc2008\camera.c
                                           /******************************************************************************* C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	FUNCTION:		Write_Terminal_Serial_Port()                                        C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PURPOSE:		Sends a byte of data to the terminal serial port.		                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	PARAMETERS:		Byte of data to send to the terminal serial port.                 C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *	COMMENTS:		This code assumes that the camera serial port has been              C:\code\2008\Trc2008\camera.c
                                           *					properly set in camera.h.                                                  C:\code\2008\Trc2008\camera.c
                                           *                                                                                C:\code\2008\Trc2008\camera.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\camera.c
0037f6   cfd9     MOVFF     0xfd9,0xfe6    void Write_Terminal_Serial_Port(unsigned char value)                             C:\code\2008\Trc2008\camera.c
0037f8   ffe6                                                                                                               
0037fa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0037fc   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\camera.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Trc2008\camera.c
0037fe   0efe     MOVLW     0xfe           	Write_Serial_Port_One(value);                                                   C:\code\2008\Trc2008\camera.c
003800   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003802   ffe6                                                                                                               
003804   ecd6     CALL      0x49ac,0x0                                                                                      
003806   f024                                                                                                               
003808   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\code\2008\Trc2008\camera.c
                                           	Write_Serial_Port_Two(value);                                                   C:\code\2008\Trc2008\camera.c
                                           #endif                                                                           C:\code\2008\Trc2008\camera.c
00380a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\camera.c
00380c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00380e   ffd9                                                                                                               
003810   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\code\2008\Trc2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\code\2008\Trc2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                           * USAGE:                                                                         C:\code\2008\Trc2008\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\code\2008\Trc2008\ifi_startup.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\code\2008\Trc2008\ifi_startup.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\code\2008\Trc2008\ifi_startup.c
                                           extern void main (void);                                                         C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\code\2008\Trc2008\ifi_startup.c
                                           void _startup (void);                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\code\2008\Trc2008\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\code\2008\Trc2008\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\code\2008\Trc2008\ifi_startup.c
                                           #define RND 6                                                                    C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\code\2008\Trc2008\ifi_startup.c
                                           void _entry (void)                                                               C:\code\2008\Trc2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_startup.c
000800   ef9b     GOTO      0x5d36         _asm goto _startup _endasm                                                       C:\code\2008\Trc2008\ifi_startup.c
000802   f02e                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\code\2008\Trc2008\ifi_startup.c
                                           void _startup (void)                                                             C:\code\2008\Trc2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Trc2008\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\code\2008\Trc2008\ifi_startup.c
005d36   ee1e     LFSR      0x1,0xe00          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\code\2008\Trc2008\ifi_startup.c
005d38   f000                                                                                                               
005d3a   ee2e     LFSR      0x2,0xe00                                                                                       
005d3c   f000                                                                                                               
005d3e   6af8     CLRF      0xf8,0x0                                                                                        
005d40   9c4a     BCF       0x4a,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\code\2008\Trc2008\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\code\2008\Trc2008\ifi_startup.c
005d42   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\code\2008\Trc2008\ifi_startup.c
005d44   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\code\2008\Trc2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           loop:                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
005d46   ec6d     CALL      0x44da,0x0      	Clear_Memory();                                                                C:\code\2008\Trc2008\ifi_startup.c
005d48   f022                                                                                                               
005d4a   ec3d     CALL      0x587a,0x0       _do_cinit ();                                                                  C:\code\2008\Trc2008\ifi_startup.c
005d4c   f02c                                                                                                               
                                             /* Call the user's main routine */                                             C:\code\2008\Trc2008\ifi_startup.c
005d4e   ec75     CALL      0x5cea,0x0       main ();                                                                       C:\code\2008\Trc2008\ifi_startup.c
005d50   f02e                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
005d52   d7f9     BRA       0x5d46           goto loop;                                                                     C:\code\2008\Trc2008\ifi_startup.c
005d54   0012     RETURN    0x0            }                               /* end _startup() */                             C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\code\2008\Trc2008\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\code\2008\Trc2008\ifi_startup.c
                                           extern far rom struct                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                             unsigned short num_init;                                                       C:\code\2008\Trc2008\ifi_startup.c
                                             struct _init_entry                                                             C:\code\2008\Trc2008\ifi_startup.c
                                             {                                                                              C:\code\2008\Trc2008\ifi_startup.c
                                               unsigned long from;                                                          C:\code\2008\Trc2008\ifi_startup.c
                                               unsigned long to;                                                            C:\code\2008\Trc2008\ifi_startup.c
                                               unsigned long size;                                                          C:\code\2008\Trc2008\ifi_startup.c
                                             }                                                                              C:\code\2008\Trc2008\ifi_startup.c
                                             entries[];                                                                     C:\code\2008\Trc2008\ifi_startup.c
                                           }                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                           _cinit;                                                                          C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\code\2008\Trc2008\ifi_startup.c
                                           void                                                                             C:\code\2008\Trc2008\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\code\2008\Trc2008\ifi_startup.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\code\2008\Trc2008\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\code\2008\Trc2008\ifi_startup.c
                                              */                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                             static short long prom;                                                        C:\code\2008\Trc2008\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\code\2008\Trc2008\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\code\2008\Trc2008\ifi_startup.c
                                             static short long data_ptr;                                                    C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                             /* Initialized data... */                                                      C:\code\2008\Trc2008\ifi_startup.c
00587a   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\code\2008\Trc2008\ifi_startup.c
00587c   6ef6     MOVWF     0xf6,0x0                                                                                        
00587e   0e08     MOVLW     0x8                                                                                             
005880   6ef7     MOVWF     0xf7,0x0                                                                                        
005882   0e00     MOVLW     0x0                                                                                             
005884   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\code\2008\Trc2008\ifi_startup.c
005886   0102     MOVLB     0x2                movlb data_ptr                                                               C:\code\2008\Trc2008\ifi_startup.c
005888   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
00588a   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
00588c   6f7a     MOVWF     0x7a,0x1           movwf curr_entry, 1                                                          C:\code\2008\Trc2008\ifi_startup.c
00588e   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
005890   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
005892   6f7b     MOVWF     0x7b,0x1           movwf curr_entry+1, 1                                                        C:\code\2008\Trc2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                               test:                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Trc2008\ifi_startup.c
005894   e103     BNZ       0x589c              bnz 3                                                                       C:\code\2008\Trc2008\ifi_startup.c
005896   677a     TSTFSZ    0x7a,0x1           tstfsz curr_entry, 1                                                         C:\code\2008\Trc2008\ifi_startup.c
005898   d001     BRA       0x589c             bra 1                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Trc2008\ifi_startup.c
00589a   d03d     BRA       0x5916           goto done;                                                                     C:\code\2008\Trc2008\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\code\2008\Trc2008\ifi_startup.c
                                                * once.                                                                     C:\code\2008\Trc2008\ifi_startup.c
                                                *                                                                           C:\code\2008\Trc2008\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\code\2008\Trc2008\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\code\2008\Trc2008\ifi_startup.c
                                                * size values.                                                              C:\code\2008\Trc2008\ifi_startup.c
                                                */                                                                          C:\code\2008\Trc2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Trc2008\ifi_startup.c
                                             /* read the source address */                                                  C:\code\2008\Trc2008\ifi_startup.c
00589c   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
00589e   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058a0   6f75     MOVWF     0x75,0x1           movwf prom, 1                                                                C:\code\2008\Trc2008\ifi_startup.c
0058a2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058a4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058a6   6f76     MOVWF     0x76,0x1           movwf prom+1, 1                                                              C:\code\2008\Trc2008\ifi_startup.c
0058a8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058aa   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058ac   6f77     MOVWF     0x77,0x1           movwf prom+2, 1                                                              C:\code\2008\Trc2008\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\code\2008\Trc2008\ifi_startup.c
0058ae   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\code\2008\Trc2008\ifi_startup.c
0058b0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058b2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058b4   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\code\2008\Trc2008\ifi_startup.c
0058b6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058b8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058ba   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\code\2008\Trc2008\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\code\2008\Trc2008\ifi_startup.c
0058bc   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058be   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\code\2008\Trc2008\ifi_startup.c
0058c0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058c2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058c4   6f78     MOVWF     0x78,0x1           movwf curr_byte, 1                                                           C:\code\2008\Trc2008\ifi_startup.c
0058c6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058c8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058ca   6f79     MOVWF     0x79,0x1           movwf curr_byte+1, 1                                                         C:\code\2008\Trc2008\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\code\2008\Trc2008\ifi_startup.c
0058cc   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058ce   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\code\2008\Trc2008\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\code\2008\Trc2008\ifi_startup.c
                                              * for the entry.                                                              C:\code\2008\Trc2008\ifi_startup.c
                                              */                                                                            C:\code\2008\Trc2008\ifi_startup.c
0058d0   cff6     MOVFF     0xff6,0x27c      data_ptr = TBLPTR;                                                             C:\code\2008\Trc2008\ifi_startup.c
0058d2   f27c                                                                                                               
0058d4   cff7     MOVFF     0xff7,0x27d                                                                                     
0058d6   f27d                                                                                                               
0058d8   cff8     MOVFF     0xff8,0x27e                                                                                     
0058da   f27e                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\code\2008\Trc2008\ifi_startup.c
0058dc   c275     MOVFF     0x275,0xff6      TBLPTR = prom;                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058de   fff6                                                                                                               
0058e0   c276     MOVFF     0x276,0xff7                                                                                     
0058e2   fff7                                                                                                               
0058e4   c277     MOVFF     0x277,0xff8                                                                                     
0058e6   fff8                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                             /* do the copy loop */                                                         C:\code\2008\Trc2008\ifi_startup.c
                                             _asm                                                                           C:\code\2008\Trc2008\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\code\2008\Trc2008\ifi_startup.c
0058e8   0102     MOVLB     0x2                movlb curr_byte                                                              C:\code\2008\Trc2008\ifi_startup.c
0058ea   5378     MOVF      0x78,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\code\2008\Trc2008\ifi_startup.c
                                           copy_loop:                                                                       C:\code\2008\Trc2008\ifi_startup.c
0058ec   e102     BNZ       0x58f2             bnz 2 /* copy_one_byte */                                                    C:\code\2008\Trc2008\ifi_startup.c
0058ee   5379     MOVF      0x79,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\code\2008\Trc2008\ifi_startup.c
0058f0   e007     BZ        0x5900             bz 7  /* done_copying */                                                     C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           copy_one_byte:                                                                   C:\code\2008\Trc2008\ifi_startup.c
0058f2   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\code\2008\Trc2008\ifi_startup.c
0058f4   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\code\2008\Trc2008\ifi_startup.c
0058f6   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\code\2008\Trc2008\ifi_startup.c
0058f8   0778     DECF      0x78,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\code\2008\Trc2008\ifi_startup.c
0058fa   e2f8     BC        0x58ec             bc -8   /* copy_loop */                                                      C:\code\2008\Trc2008\ifi_startup.c
0058fc   0779     DECF      0x79,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\code\2008\Trc2008\ifi_startup.c
0058fe   d7f9     BRA       0x58f2             bra -7  /* copy_one_byte */                                                  C:\code\2008\Trc2008\ifi_startup.c
                                                                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           done_copying:                                                                    C:\code\2008\Trc2008\ifi_startup.c
                                             _endasm                                                                        C:\code\2008\Trc2008\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\code\2008\Trc2008\ifi_startup.c
005900   c27c     MOVFF     0x27c,0xff6      TBLPTR = data_ptr;                                                             C:\code\2008\Trc2008\ifi_startup.c
005902   fff6                                                                                                               
005904   c27d     MOVFF     0x27d,0xff7                                                                                     
005906   fff7                                                                                                               
005908   c27e     MOVFF     0x27e,0xff8                                                                                     
00590a   fff8                                                                                                               
                                             /* next entry... */                                                            C:\code\2008\Trc2008\ifi_startup.c
00590c   0102     MOVLB     0x2              curr_entry--;                                                                  C:\code\2008\Trc2008\ifi_startup.c
00590e   077a     DECF      0x7a,0x1,0x1                                                                                    
005910   0e00     MOVLW     0x0                                                                                             
005912   5b7b     SUBWFB    0x7b,0x1,0x1                                                                                    
005914   d7bf     BRA       0x5894           goto test;                                                                     C:\code\2008\Trc2008\ifi_startup.c
                                           done:                                                                            C:\code\2008\Trc2008\ifi_startup.c
                                           ;                                                                                C:\code\2008\Trc2008\ifi_startup.c
005916   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\ifi_startup.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\code\2008\Trc2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\code\2008\Trc2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                           * USAGE:                                                                         C:\code\2008\Trc2008\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\code\2008\Trc2008\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\code\2008\Trc2008\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\code\2008\Trc2008\ifi_utilities.c
                                           *  custom file.                                                                  C:\code\2008\Trc2008\ifi_utilities.c
                                           *                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <usart.h>                                                               C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <capture.h>                                                             C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <timers.h>                                                              C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <string.h>                                                              C:\code\2008\Trc2008\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\code\2008\Trc2008\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\code\2008\Trc2008\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\code\2008\Trc2008\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\code\2008\Trc2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\code\2008\Trc2008\ifi_utilities.c
005228   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\code\2008\Trc2008\ifi_utilities.c
00522a   d002     BRA       0x5230                                                                                          
00522e   d7fc     BRA       0x5228                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\ifi_utilities.c
00522c   d7fd     BRA       0x5228             continue;                                                                    C:\code\2008\Trc2008\ifi_utilities.c
                                             }                                                                              C:\code\2008\Trc2008\ifi_utilities.c
                                           #endif                                                                           C:\code\2008\Trc2008\ifi_utilities.c
005230   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Trc2008\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Trc2008\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
005232   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\code\2008\Trc2008\ifi_utilities.c
005234   ffe6                                                                                                               
005236   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005238   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
00523a   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\code\2008\Trc2008\ifi_utilities.c
00523c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00523e   ffe6                                                                                                               
005240   ec7f     CALL      0x44fe,0x0                                                                                      
005242   f022                                                                                                               
005244   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005246   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\code\2008\Trc2008\ifi_utilities.c
005248   6ead     MOVWF     0xad,0x0                                                                                        
00524a   dfee     RCALL     0x5228           Wait4TXEmpty();                                                                C:\code\2008\Trc2008\ifi_utilities.c
00524c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
00524e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005250   ffd9                                                                                                               
005252   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Trc2008\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Trc2008\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
005254   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\code\2008\Trc2008\ifi_utilities.c
005256   ffe6                                                                                                               
005258   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00525a   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
00525c   0102     MOVLB     0x2              ptr = (unsigned char *) &odata;                                                C:\code\2008\Trc2008\ifi_utilities.c
00525e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
005260   0ffd     ADDLW     0xfd                                                                                            
005262   6f98     MOVWF     0x98,0x1                                                                                        
005264   0eff     MOVLW     0xff                                                                                            
005266   20da     ADDWFC    0xda,0x0,0x0                                                                                    
005268   6f99     MOVWF     0x99,0x1                                                                                        
00526a   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\code\2008\Trc2008\ifi_utilities.c
00526c   6aea     CLRF      0xea,0x0                                                                                        
00526e   2598     ADDWF     0x98,0x0,0x1                                                                                    
005270   6ee9     MOVWF     0xe9,0x0                                                                                        
005272   5199     MOVF      0x99,0x0,0x1                                                                                    
005274   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005276   50ef     MOVF      0xef,0x0,0x0                                                                                    
005278   6ee6     MOVWF     0xe6,0x0                                                                                        
00527a   ec7f     CALL      0x44fe,0x0                                                                                      
00527c   f022                                                                                                               
00527e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005280   c298     MOVFF     0x298,0xfe9      Hex_output(ptr[0]);                                                            C:\code\2008\Trc2008\ifi_utilities.c
005282   ffe9                                                                                                               
005284   c299     MOVFF     0x299,0xfea                                                                                     
005286   ffea                                                                                                               
005288   50ef     MOVF      0xef,0x0,0x0                                                                                    
00528a   6ee6     MOVWF     0xe6,0x0                                                                                        
00528c   ec7f     CALL      0x44fe,0x0                                                                                      
00528e   f022                                                                                                               
005290   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005292   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\code\2008\Trc2008\ifi_utilities.c
005294   6ead     MOVWF     0xad,0x0                                                                                        
005296   dfc8     RCALL     0x5228           Wait4TXEmpty();                                                                C:\code\2008\Trc2008\ifi_utilities.c
005298   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
00529a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00529c   ffd9                                                                                                               
00529e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\code\2008\Trc2008\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\code\2008\Trc2008\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\code\2008\Trc2008\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
0052a0   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\code\2008\Trc2008\ifi_utilities.c
0052a2   ffe6                                                                                                               
0052a4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0052a6   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
0052a8   0102     MOVLB     0x2              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\code\2008\Trc2008\ifi_utilities.c
0052aa   6b9a     CLRF      0x9a,0x1                                                                                        
0052ac   0e1a     MOVLW     0x1a                                                                                            
0052ae   5d9a     SUBWF     0x9a,0x0,0x1                                                                                    
0052b0   e211     BC        0x52d4                                                                                          
0052ce   0102     MOVLB     0x2                                                                                             
0052d0   2b9a     INCF      0x9a,0x1,0x1                                                                                    
0052d2   d7ec     BRA       0x52ac                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\ifi_utilities.c
0052b2   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\code\2008\Trc2008\ifi_utilities.c
0052b4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0052b6   ffe9                                                                                                               
0052b8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0052ba   0efe     MOVLW     0xfe                                                                                            
0052bc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0052be   ffea                                                                                                               
0052c0   e301     BNC       0x52c4                                                                                          
0052c2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0052c4   50ef     MOVF      0xef,0x0,0x0                                                                                    
0052c6   6ee6     MOVWF     0xe6,0x0                                                                                        
0052c8   ec7f     CALL      0x44fe,0x0                                                                                      
0052ca   f022                                                                                                               
0052cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\code\2008\Trc2008\ifi_utilities.c
0052d4   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\code\2008\Trc2008\ifi_utilities.c
0052d6   6ead     MOVWF     0xad,0x0                                                                                        
0052d8   dfa7     RCALL     0x5228           Wait4TXEmpty();                                                                C:\code\2008\Trc2008\ifi_utilities.c
0052da   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
0052dc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0052de   ffd9                                                                                                               
0052e0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\code\2008\Trc2008\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\code\2008\Trc2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\code\2008\Trc2008\ifi_utilities.c
0052e2   0102     MOVLB     0x2              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\code\2008\Trc2008\ifi_utilities.c
0052e4   0ea0     MOVLW     0xa0                                                                                            
0052e6   6f98     MOVWF     0x98,0x1                                                                                        
0052e8   0e01     MOVLW     0x1                                                                                             
0052ea   6f99     MOVWF     0x99,0x1                                                                                        
0052ec   0101     MOVLB     0x1              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\code\2008\Trc2008\ifi_utilities.c
0052ee   51a0     MOVF      0xa0,0x0,0x1                                                                                    
0052f0   0102     MOVLB     0x2                                                                                             
0052f2   6fa0     MOVWF     0xa0,0x1                                                                                        
0052f4   6ba1     CLRF      0xa1,0x1                                                                                        
0052f6   51a2     MOVF      0xa2,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\code\2008\Trc2008\ifi_utilities.c
0052f8   19a0     XORWF     0xa0,0x0,0x1                                                                                    
0052fa   e102     BNZ       0x5300                                                                                          
0052fc   51a3     MOVF      0xa3,0x0,0x1                                                                                    
0052fe   19a1     XORWF     0xa1,0x0,0x1                                                                                    
005300   e018     BZ        0x5332                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\ifi_utilities.c
005302   0101     MOVLB     0x1                if (statusflag.FIRST_TIME == 1)                                              C:\code\2008\Trc2008\ifi_utilities.c
005304   a5c0     BTFSS     0xc0,0x2,0x1                                                                                    
005306   d002     BRA       0x530c                                                                                          
                                               {                                                                            C:\code\2008\Trc2008\ifi_utilities.c
005308   95c0     BCF       0xc0,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                               }                                                                            C:\code\2008\Trc2008\ifi_utilities.c
00530a   d00f     BRA       0x532a             else                                                                         C:\code\2008\Trc2008\ifi_utilities.c
                                               {                                                                            C:\code\2008\Trc2008\ifi_utilities.c
00530c   c2a2     MOVFF     0x2a2,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\code\2008\Trc2008\ifi_utilities.c
00530e   ffe6                                                                                                               
005310   ec7f     CALL      0x44fe,0x0                                                                                      
005312   f022                                                                                                               
005314   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005316   c2a0     MOVFF     0x2a0,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\code\2008\Trc2008\ifi_utilities.c
005318   ffe6                                                                                                               
00531a   ec7f     CALL      0x44fe,0x0                                                                                      
00531c   f022                                                                                                               
00531e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005320   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\code\2008\Trc2008\ifi_utilities.c
005322   6ead     MOVWF     0xad,0x0                                                                                        
005324   df81     RCALL     0x5228               Wait4TXEmpty();                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
005326   0101     MOVLB     0x1                  statusflag.FIRST_TIME = 0;                                                 C:\code\2008\Trc2008\ifi_utilities.c
005328   95c0     BCF       0xc0,0x2,0x1                                                                                    
                                               }                                                                            C:\code\2008\Trc2008\ifi_utilities.c
00532a   c2a0     MOVFF     0x2a0,0x2a2        ifi_last_packet1 = ifi_packet_num1;                                          C:\code\2008\Trc2008\ifi_utilities.c
00532c   f2a2                                                                                                               
00532e   c2a1     MOVFF     0x2a1,0x2a3                                                                                     
005330   f2a3                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\code\2008\Trc2008\ifi_utilities.c
005332   0102     MOVLB     0x2              ifi_last_packet1++;                                                            C:\code\2008\Trc2008\ifi_utilities.c
005334   2ba2     INCF      0xa2,0x1,0x1                                                                                    
005336   0e00     MOVLW     0x0                                                                                             
005338   23a3     ADDWFC    0xa3,0x1,0x1                                                                                    
00533a   35a3     RLCF      0xa3,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\code\2008\Trc2008\ifi_utilities.c
00533c   e204     BC        0x5346                                                                                          
00533e   51a2     MOVF      0xa2,0x0,0x1                                                                                    
005340   08ff     SUBLW     0xff                                                                                            
005342   0e00     MOVLW     0x0                                                                                             
005344   55a3     SUBFWB    0xa3,0x0,0x1                                                                                    
005346   e202     BC        0x534c                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\ifi_utilities.c
005348   6ba2     CLRF      0xa2,0x1           ifi_last_packet1 = 0;                                                        C:\code\2008\Trc2008\ifi_utilities.c
00534a   6ba3     CLRF      0xa3,0x1                                                                                        
                                             }                                                                              C:\code\2008\Trc2008\ifi_utilities.c
00534c   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\code\2008\Trc2008\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\code\2008\Trc2008\ifi_utilities.c
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\code\2008\Trc2008\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\code\2008\Trc2008\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\code\2008\Trc2008\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\code\2008\Trc2008\ifi_utilities.c
005352   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\code\2008\Trc2008\ifi_utilities.c
005354   6ee6     MOVWF     0xe6,0x0                                                                                        
00534e   0e15     MOVLW     0x15               baud_115);                                                                   C:\code\2008\Trc2008\ifi_utilities.c
005350   6ee6     MOVWF     0xe6,0x0                                                                                        
005356   ecea     CALL      0x5bd4,0x0                                                                                      
005358   f02d                                                                                                               
00535a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00535c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
00535e   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\code\2008\Trc2008\ifi_utilities.c
005360   6ee6     MOVWF     0xe6,0x0                                                                                        
005362   ecab     CALL      0x5d56,0x0                                                                                      
005364   f02e                                                                                                               
005366   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005368   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\code\2008\Trc2008\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\code\2008\Trc2008\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\code\2008\Trc2008\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
00536a   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\code\2008\Trc2008\ifi_utilities.c
00536c   ffe6                                                                                                               
00536e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005370   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
005372   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\code\2008\Trc2008\ifi_utilities.c
005374   cfdb     MOVFF     0xfdb,0x29b                                                                                     
005376   f29b                                                                                                               
005378   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
00537a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00537c   ffd9                                                                                                               
00537e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\code\2008\Trc2008\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\code\2008\Trc2008\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\code\2008\Trc2008\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\code\2008\Trc2008\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\code\2008\Trc2008\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\code\2008\Trc2008\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\code\2008\Trc2008\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\code\2008\Trc2008\ifi_utilities.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
005380   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\code\2008\Trc2008\ifi_utilities.c
005382   ffe6                                                                                                               
005384   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005386   ffd9                                                                                                               
005388   0e02     MOVLW     0x2                                                                                             
00538a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\ifi_utilities.c
                                             unsigned int result;                                                           C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           #if defined(__18F8722)                                                           C:\code\2008\Trc2008\ifi_utilities.c
00539c   0ef1     MOVLW     0xf1             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ADC_0_TAD,                             C:\code\2008\Trc2008\ifi_utilities.c
00539e   6ee6     MOVWF     0xe6,0x0                                                                                        
00538c   0e0f     MOVLW     0xf                       ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS,15); C:\code\2008\Trc2008\ifi_utilities.c
00538e   6ee6     MOVWF     0xe6,0x0                                                                                        
005390   0efe     MOVLW     0xfe                                                                                            
005392   50db     MOVF      0xdb,0x0,0x0                                                                                    
005394   0b7f     ANDLW     0x7f                                                                                            
005396   0bfe     ANDLW     0xfe                                                                                            
005398   0bfd     ANDLW     0xfd                                                                                            
00539a   6ee6     MOVWF     0xe6,0x0                                                                                        
0053a0   ec50     CALL      0x5aa0,0x0                                                                                      
0053a2   f02d                                                                                                               
0053a4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0053a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0053a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                             OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\code\2008\Trc2008\ifi_utilities.c
                                                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\code\2008\Trc2008\ifi_utilities.c
                                           #endif                                                                           C:\code\2008\Trc2008\ifi_utilities.c
0053aa   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\code\2008\Trc2008\ifi_utilities.c
0053ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0053ae   ecc9     CALL      0x5d92,0x0                                                                                      
0053b0   f02e                                                                                                               
0053b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0053b4   ece0     CALL      0x5dc0,0x0       ConvertADC();                                                                  C:\code\2008\Trc2008\ifi_utilities.c
0053b6   f02e                                                                                                               
0053b8   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\code\2008\Trc2008\ifi_utilities.c
0053ba   f004                                                                                                               
0053bc   0900     IORLW     0x0                                                                                             
0053be   e001     BZ        0x53c2                                                                                          
0053c0   d7fb     BRA       0x53b8                                                                                          
0053c2   ec40     CALL      0x5c80,0x0       ReadADC();                                                                     C:\code\2008\Trc2008\ifi_utilities.c
0053c4   f02e                                                                                                               
0053c6   ecdd     CALL      0x5dba,0x0       CloseADC();                                                                    C:\code\2008\Trc2008\ifi_utilities.c
0053c8   f02e                                                                                                               
0053ca   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\code\2008\Trc2008\ifi_utilities.c
0053cc   6e02     MOVWF     0x2,0x0                                                                                         
0053ce   c002     MOVFF     0x2,0x3                                                                                         
0053d0   f003                                                                                                               
0053d2   6a02     CLRF      0x2,0x0                                                                                         
0053d4   50c3     MOVF      0xc3,0x0,0x0                                                                                    
0053d6   0100     MOVLB     0x0                                                                                             
0053d8   1002     IORWF     0x2,0x0,0x0                                                                                     
0053da   6e00     MOVWF     0x0,0x0                                                                                         
0053dc   c003     MOVFF     0x3,0x1                                                                                         
0053de   f001                                                                                                               
0053e0   c000     MOVFF     0x0,0xfde                                                                                       
0053e2   ffde                                                                                                               
0053e4   c001     MOVFF     0x1,0xfdd                                                                                       
0053e6   ffdd                                                                                                               
0053e8   cfde     MOVFF     0xfde,0x0        return result;                                                                 C:\code\2008\Trc2008\ifi_utilities.c
0053ea   f000                                                                                                               
0053ec   cfdd     MOVFF     0xfdd,0x1                                                                                       
0053ee   f001                                                                                                               
0053f0   c000     MOVFF     0x0,0xff3                                                                                       
0053f2   fff3                                                                                                               
0053f4   c001     MOVFF     0x1,0xff4                                                                                       
0053f6   fff4                                                                                                               
0053f8   d000     BRA       0x53fa                                                                                          
0053fa   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\ifi_utilities.c
0053fc   ffe1                                                                                                               
0053fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005400   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005402   ffd9                                                                                                               
005404   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                                                                                                            C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\ifi_utilities.c
                                           /******************************************************************************* C:\code\2008\Trc2008\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\code\2008\Trc2008\main.c
                                           *                                                                                C:\code\2008\Trc2008\main.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\main.c
                                           *  This file contains the main program loop.                                     C:\code\2008\Trc2008\main.c
                                           *                                                                                C:\code\2008\Trc2008\main.c
                                           * USAGE:                                                                         C:\code\2008\Trc2008\main.c
                                           *  You should not need to modify this file.                                      C:\code\2008\Trc2008\main.c
                                           *  Note the different loop speed for the two routines:                           C:\code\2008\Trc2008\main.c
                                           *     Process_Data_From_Master_uP                                                C:\code\2008\Trc2008\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\code\2008\Trc2008\main.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\main.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\main.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Trc2008\main.c
                                           #include "user_routines.h"                                                       C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\code\2008\Trc2008\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\code\2008\Trc2008\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
                                           /******************************************************************************* C:\code\2008\Trc2008\main.c
                                           * FUNCTION NAME: main                                                            C:\code\2008\Trc2008\main.c
                                           * PURPOSE:       Main program function.                                          C:\code\2008\Trc2008\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\code\2008\Trc2008\main.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\main.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\code\2008\Trc2008\main.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\main.c
                                           void main (void)                                                                 C:\code\2008\Trc2008\main.c
                                           {                                                                                C:\code\2008\Trc2008\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\code\2008\Trc2008\main.c
005cea   ec07     CALL      0x240e,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\code\2008\Trc2008\main.c
005cec   f012                                                                                                               
                                           #endif                                                                           C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
005cee   ecb3     CALL      0x2b66,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\code\2008\Trc2008\main.c
005cf0   f015                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\main.c
005cf2   0101     MOVLB     0x1              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\code\2008\Trc2008\main.c
005cf4   91c0     BCF       0xc0,0x0,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\main.c
005d0e   d7f3     BRA       0x5cf6           while (1)   /* This loop will repeat indefinitely. */                          C:\code\2008\Trc2008\main.c
                                             {                                                                              C:\code\2008\Trc2008\main.c
                                           #ifdef _SIMULATOR                                                                C:\code\2008\Trc2008\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\code\2008\Trc2008\main.c
                                           #endif                                                                           C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
005cf6   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\code\2008\Trc2008\main.c
005cf8   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
005cfa   d007     BRA       0x5d0a                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\code\2008\Trc2008\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\code\2008\Trc2008\main.c
005cfc   ec1f     CALL      0x2c3e,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\code\2008\Trc2008\main.c
005cfe   f016                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\main.c
005d00   0101     MOVLB     0x1                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\code\2008\Trc2008\main.c
005d02   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
005d04   d002     BRA       0x5d0a                                                                                          
                                                 {                                                                          C:\code\2008\Trc2008\main.c
005d06   ecb4     CALL      0x5168,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\code\2008\Trc2008\main.c
005d08   f028                                                                                                               
                                                 }                                                                          C:\code\2008\Trc2008\main.c
                                               }                                                                            C:\code\2008\Trc2008\main.c
005d0a   ec0b     CALL      0x5216,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\code\2008\Trc2008\main.c
005d0c   f029                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\code\2008\Trc2008\main.c
                                             } /* while (1) */                                                              C:\code\2008\Trc2008\main.c
005d10   0012     RETURN    0x0            }  /* END of Main */                                                             C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
                                                                                                                            C:\code\2008\Trc2008\main.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\main.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\main.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\main.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	TITLE:		serial_ports.c                                                         C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\serial_ports.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:	The source code in this file implements a fully buffered,            C:\code\2008\Trc2008\serial_ports.c
                                           *				interrupt-driven serial port driver that can be used with                   C:\code\2008\Trc2008\serial_ports.c
                                           *				either or both on-board serial ports.                                       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				This source code will work with the Robovation (A/K/A EDU-RC)               C:\code\2008\Trc2008\serial_ports.c
                                           *				robot controller and the FIRST Robotics robot controller.                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				By default, serial port one will operate at 115200 baud, which              C:\code\2008\Trc2008\serial_ports.c
                                           *				is compatible with InnovationFIRST's terminal program, and                  C:\code\2008\Trc2008\serial_ports.c
                                           *				serial port two will operate at 9600 baud. These values can be              C:\code\2008\Trc2008\serial_ports.c
                                           *				easily changed by modifying the	serial port initialization                  C:\code\2008\Trc2008\serial_ports.c
                                           *				functions mentioned below.                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *               This file is best viewed with tabs set to four characters.       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				Nine things must be done before this software will work                     C:\code\2008\Trc2008\serial_ports.c
                                           *				correctly:                                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  1a) FRC-RC: As this software is intended to replace IFI's                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  serial port driver, the call to Serial_Driver_Initialize()                C:\code\2008\Trc2008\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\code\2008\Trc2008\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  "user_Serialdrv.c" and "user_Serialdrv.h" must be removed                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  from the project and all project source files.                            C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  1b) EDU-RC: As this software is intended to replace IFI's                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  serial port driver, the call to Initialize_Serial_Comms()                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  in user_routines.c / User_Initialization() should be                      C:\code\2008\Trc2008\serial_ports.c
                                           *				  removed or commented out.	In addition, all references to                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  "printf_lib.c" and "printf_lib.h" must be removed from                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  the project and all project source files.                                 C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  2) You must add the serial_ports.c/.h source files to                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  your MPLAB project.                                                       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  3) A #include statement for the serial_ports.h header                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  file must be included at the beginning of each source                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  file that uses the serial ports. The statement should                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  look like this: #include "serial_ports.h".                                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  4) If you intend to use the C18 output stream functions,                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  A #include statement for the stdio.h header file must be                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  included at the beginning of each source file that calls                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  any of these functions. The statement should look like                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  this: #include <serial_ports.h>.                                          C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  5) Init_Serial_Port_One() and/or Init_Serial_Port_Two()                   C:\code\2008\Trc2008\serial_ports.c
                                           *				  must be called from the User_Initialization() function                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  located in the user_routines.c source file.                               C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  6) The interrupt handler(s) must be installed in the                      C:\code\2008\Trc2008\serial_ports.c
                                           *				  InterruptHandlerLow() function located in the                             C:\code\2008\Trc2008\serial_ports.c
                                           *				  user_routines_fast.c source file. See the accompanying                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  copy of user_routines_fast.c to see how this is done.                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  7) Decide what functionality you need and comment out the                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_xxx_yy entries in serial_ports.h               C:\code\2008\Trc2008\serial_ports.c
                                           *				  as necessary. As an example, if you only need to send data                C:\code\2008\Trc2008\serial_ports.c
                                           *				  using serial port one and would like to reclaim the resources             C:\code\2008\Trc2008\serial_ports.c
                                           *				  used by serial port two and serial port one's receiver                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  source code, the top of the serial_ports.h file would look                C:\code\2008\Trc2008\serial_ports.c
                                           *				  like this:                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\code\2008\Trc2008\serial_ports.c
                                           *				  // receive functionality                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_ONE_RX                                      C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port one               C:\code\2008\Trc2008\serial_ports.c
                                           *				  // transmit functionality                                                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  #define ENABLE_SERIAL_PORT_ONE_TX                                         C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\code\2008\Trc2008\serial_ports.c
                                           *				  // receive functionality                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_RX                                      C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  // comment out the next line to disable all serial port two               C:\code\2008\Trc2008\serial_ports.c
                                           *				  // transmit functionality                                                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  // #define ENABLE_SERIAL_PORT_TWO_TX                                      C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  By default, both serial ports and their respective receive                C:\code\2008\Trc2008\serial_ports.c
                                           *				  and transmit sections are enabled.                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  8) As the default output device for C18's output stream                   C:\code\2008\Trc2008\serial_ports.c
                                           *				  functions is the null device, you'll presumably want to                   C:\code\2008\Trc2008\serial_ports.c
                                           *				  change the value of stdout_serial_port to "SERIAL_PORT_ONE"               C:\code\2008\Trc2008\serial_ports.c
                                           *				  or "SERIAL_PORT_TWO" if you want to see printf()'s output.                C:\code\2008\Trc2008\serial_ports.c
                                           *				  User_Initialization() is a good place to do this.                         C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  9) To support terminal emulation software, \r\n should                    C:\code\2008\Trc2008\serial_ports.c
                                           *				  be used instead of just \n in the printf() format string.                 C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				This serial port driver can send output stream data to either               C:\code\2008\Trc2008\serial_ports.c
                                           *				of the serial ports by setting the value of the global variable             C:\code\2008\Trc2008\serial_ports.c
                                           *				stdout_serial_port before calling output stream	functions like              C:\code\2008\Trc2008\serial_ports.c
                                           *				printf(). Setting the value	to "SERIAL_PORT_ONE" will send the              C:\code\2008\Trc2008\serial_ports.c
                                           *				output to serial port one. Likewise, setting the value to                   C:\code\2008\Trc2008\serial_ports.c
                                           *				"SERIAL_PORT_TWO" will send the output to serial port two.                  C:\code\2008\Trc2008\serial_ports.c
                                           *				Setting the value to "NUL" will send the output to the null                 C:\code\2008\Trc2008\serial_ports.c
                                           *				device, meaning that the output is sent	nowhere. These values               C:\code\2008\Trc2008\serial_ports.c
                                           *				are #define'd in serial_ports.h. As an example,                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_ONE;                                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  printf("Kernighan");                                                      C:\code\2008\Trc2008\serial_ports.c
                                           *				  stdout_serial_port = NUL;                                                 C:\code\2008\Trc2008\serial_ports.c
                                           *				  printf("and");                                                            C:\code\2008\Trc2008\serial_ports.c
                                           *				  stdout_serial_port = SERIAL_PORT_TWO;                                     C:\code\2008\Trc2008\serial_ports.c
                                           *				  printf("Ritchie");                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				will send the text "Kernighan" to the peripheral device attached            C:\code\2008\Trc2008\serial_ports.c
                                           *				to serial port one, the text "Ritchie" to the device attached to            C:\code\2008\Trc2008\serial_ports.c
                                           *				serial port two and the text "and" won't be sent anywhere.                  C:\code\2008\Trc2008\serial_ports.c
                                           *				By default, output is sent to the null device, which is the only            C:\code\2008\Trc2008\serial_ports.c
                                           *				output device guaranteed to be present.                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Trc2008\serial_ports.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\serial_ports.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Trc2008\serial_ports.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *				Copyright ©2004-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\serial_ports.c
                                           *		                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           ******************************************************************************** C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\serial_ports.c
                                           *	22-Dec-2004  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\serial_ports.c
                                           *	28-Dec-2004  0.2  RKW - Using preprocessor directives, added the ability       C:\code\2008\Trc2008\serial_ports.c
                                           *	                  to enable/disable individual serial port receive and         C:\code\2008\Trc2008\serial_ports.c
                                           *	                  transmit code. Updated documentation.                        C:\code\2008\Trc2008\serial_ports.c
                                           *	05-Feb-2005  0.3  RKW - Added _user_putc() interface to C18's new output       C:\code\2008\Trc2008\serial_ports.c
                                           *	                  stream capabilities. Updated documentation.                  C:\code\2008\Trc2008\serial_ports.c
                                           *	05-Jan-2006  0.4  RKW - Partial port to 18F8722. Updated documentation.        C:\code\2008\Trc2008\serial_ports.c
                                           *	10-Jan-2006  0.4  RKW - Modified the #pragma interruptlow line to also         C:\code\2008\Trc2008\serial_ports.c
                                           *	                  save the .tmpdata section.                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #include <p18f8722.h>                                                            C:\code\2008\Trc2008\serial_ports.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\serial_ports.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           // by default stdout stream output is sent to the null device,                   C:\code\2008\Trc2008\serial_ports.c
                                           // which is the only device guaranteed to be present.                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char stdout_serial_port = NUL;                                          C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           // Serial Port 1 Receive Variables:                                              C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue[RX_1_QUEUE_SIZE];	// serial port 1's receive circular queue C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\code\2008\Trc2008\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\code\2008\Trc2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Rx_1_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\code\2008\Trc2008\serial_ports.c
                                           													// data present in serial port 1's receive                          C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Rx_1_Queue_Read_Index = 0;			// read index into serial port 1's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                           	                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Write_Index = 0;	// write index into serial port 1's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                           	                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char RX_1_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\code\2008\Trc2008\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\code\2008\Trc2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char RX_1_Framing_Errors = 0;		// number of framing errors that have occurred C:\code\2008\Trc2008\serial_ports.c
                                           													// in serial port 1's receive circuitry since                       C:\code\2008\Trc2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           // Serial Port 1 Transmit Variables:                                             C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue[TX_1_QUEUE_SIZE];	// serial port 1's transmit circular queue C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Full = FALSE;		// flag that indicates that serial port 1's C:\code\2008\Trc2008\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\code\2008\Trc2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\code\2008\Trc2008\serial_ports.c
                                           													// data to send in serial port 1's transmit                         C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Read_Index = 0;	// read index into serial port 1's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Tx_1_Queue_Write_Index = 0;			// write index into serial port 1's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_1_Queue_Byte_Count = 0;	// number of bytes in serial port 1's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           // Serial Port 2 Receive Variables:                                              C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue[RX_2_QUEUE_SIZE];	// serial port 2's receive circular queue C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\code\2008\Trc2008\serial_ports.c
                                           													// receive circular queue is full and cannot                        C:\code\2008\Trc2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Rx_2_Queue_Empty = TRUE;				// flag that indicates that there is no more  C:\code\2008\Trc2008\serial_ports.c
                                           													// data present in serial port 2's receive                          C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Rx_2_Queue_Read_Index = 0;			// read index into serial port 2's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Write_Index = 0;	// write index into serial port 2's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Rx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's receive C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char RX_2_Overrun_Errors = 0;		// number of overrun errors that have occurred C:\code\2008\Trc2008\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\code\2008\Trc2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char RX_2_Framing_Errors = 0;		// number of framing errors that have occurred C:\code\2008\Trc2008\serial_ports.c
                                           													// in serial port 2's receive circuitry since                       C:\code\2008\Trc2008\serial_ports.c
                                           													// the last reset                                                   C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           // Serial Port 2 Transmit Variables:                                             C:\code\2008\Trc2008\serial_ports.c
                                           //                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue[TX_2_QUEUE_SIZE];	// serial port 2's transmit circular queue C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Full = FALSE;		// flag that indicates that serial port 2's C:\code\2008\Trc2008\serial_ports.c
                                           													// transmit circular queue is full and cannot                       C:\code\2008\Trc2008\serial_ports.c
                                           													// accept any more data                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Empty = TRUE;		// flag that indicates that there is no more  C:\code\2008\Trc2008\serial_ports.c
                                           													// data to send in serial port 2's transmit                         C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Read_Index = 0;	// read index into serial port 2's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           unsigned char Tx_2_Queue_Write_Index = 0;			// write index into serial port 2's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           volatile unsigned char Tx_2_Queue_Byte_Count = 0;	// number of bytes in serial port 2's transmit C:\code\2008\Trc2008\serial_ports.c
                                           													// circular queue                                                   C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_One()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Initializes serial port one for asynchronous operation               C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\code\2008\Trc2008\serial_ports.c
                                           *					port one.                                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					By default, this serial port is set to 115200 baud with                    C:\code\2008\Trc2008\serial_ports.c
                                           *					the transmitter and receiver enabled. This is the rate                     C:\code\2008\Trc2008\serial_ports.c
                                           *					IFI's terminal program expects.                                            C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\code\2008\Trc2008\serial_ports.c
                                           *					a value into the SPBRG1 register and possibly changing                     C:\code\2008\Trc2008\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\code\2008\Trc2008\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\code\2008\Trc2008\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\code\2008\Trc2008\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\code\2008\Trc2008\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\code\2008\Trc2008\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX or ENABLE_SERIAL_PORT_ONE_TX                     C:\code\2008\Trc2008\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           void Init_Serial_Port_One(void)                                                  C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\code\2008\Trc2008\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\code\2008\Trc2008\serial_ports.c
004870   0e15     MOVLW     0x15           	SPBRG1 = BAUD_115200;	// baud rate generator register [251]                     C:\code\2008\Trc2008\serial_ports.c
004872   6eaf     MOVWF     0xaf,0x0                                                                                        
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004874   84ac     BSF       0xac,0x2,0x0   	TXSTA1bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low speed                                                          C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high speed                                                         C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004876   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;		// receive interrupt enable bit [127]                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004878   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;		// transmit interrupt enable bit [127]                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00487a   98ac     BCF       0xac,0x4,0x0   	TXSTA1bits.SYNC = 0;	// USART mode select bit [248]                             C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00487c   9eac     BCF       0xac,0x7,0x0   	TXSTA1bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\code\2008\Trc2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Trc2008\serial_ports.c
                                           	// initializing the receiver                                                    C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_RX                                                C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00487e   8e94     BSF       0x94,0x7,0x0   	TRISCbits.TRISC7 = 1;	// make sure the RC7/RX1/DT1 pin is configured as an input [140] C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004880   9cab     BCF       0xab,0x6,0x0   	RCSTA1bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004882   96ab     BCF       0xab,0x3,0x0   	RCSTA1bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables address detection                                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables address detection                                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004884   8aab     BSF       0xab,0x5,0x0   	RCSTA1bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004886   88ab     BSF       0xab,0x4,0x0   	RCSTA1bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\code\2008\Trc2008\serial_ports.c
                                           							// asynchronous mode:                                                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables receiver                                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enable receiver                                                    C:\code\2008\Trc2008\serial_ports.c
                                           							// synchronous mode:                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004888   9a9f     BCF       0x9f,0x5,0x0   	IPR1bits.RC1IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [130] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00488a   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;		// receive interrupt enable bit [127]                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Trc2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\code\2008\Trc2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Trc2008\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00488c   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\code\2008\Trc2008\serial_ports.c
00488e   69a6     SETF      0xa6,0x1                                                                                        
004890   69a7     SETF      0xa7,0x1                                                                                        
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004892   9c94     BCF       0x94,0x6,0x0   	TRISCbits.TRISC6 = 0;	// make sure the RC6/TX1/CK1 pin is configured as an output [140] C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004894   9cac     BCF       0xac,0x6,0x0   	TXSTA1bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004896   96ac     BCF       0xac,0x3,0x0   	TXSTA1bits.SENDB = 0;	// send break character bit [248]                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
004898   989f     BCF       0x9f,0x4,0x0   	IPR1bits.TX1IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [130] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00489a   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;		// transmit interrupt enable bit [127]                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
00489c   8aac     BSF       0xac,0x5,0x0   	TXSTA1bits.TXEN = 1;  	// Enable transmitter [248]                              C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\code\2008\Trc2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\code\2008\Trc2008\serial_ports.c
00489e   8eab     BSF       0xab,0x7,0x0   	RCSTA1bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\code\2008\Trc2008\serial_ports.c
0048a0   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Init_Serial_Port_Two()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Initializes serial port two for asynchronous operation               C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function must be called before you try to use serial           C:\code\2008\Trc2008\serial_ports.c
                                           *					port two.                                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					By default, this serial port is set to 9600 baud with                      C:\code\2008\Trc2008\serial_ports.c
                                           *					the transmitter and receiver enabled.                                      C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					The	serial port's baud rate is programmed by entering                      C:\code\2008\Trc2008\serial_ports.c
                                           *					a value into the SPBRG2 register and possibly changing                     C:\code\2008\Trc2008\serial_ports.c
                                           *					the value of the BRGH bit. Several example values are                      C:\code\2008\Trc2008\serial_ports.c
                                           *					included in the serial_ports.h file.                                       C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					Numbers within brackets refer to the PIC18F8722	data                       C:\code\2008\Trc2008\serial_ports.c
                                           *					sheet page number where more information can be found.                     C:\code\2008\Trc2008\serial_ports.c
                                           *					This document can be found at microchip's website at                       C:\code\2008\Trc2008\serial_ports.c
                                           *					http://www.microchip.com or at the author's website at                     C:\code\2008\Trc2008\serial_ports.c
                                           *					http://www.kevin.org/frc                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX or ENABLE_SERIAL_PORT_TWO_TX                     C:\code\2008\Trc2008\serial_ports.c
                                           *					is #define'd in serial_ports.h                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           void Init_Serial_Port_Two(void)                                                  C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	// Start by initializing the serial port with code                              C:\code\2008\Trc2008\serial_ports.c
                                           	// common to receive and transmit functions                                     C:\code\2008\Trc2008\serial_ports.c
0048a2   0e15     MOVLW     0x15           	SPBRG2 = BAUD_115200;	// baud rate generator register [251]                     C:\code\2008\Trc2008\serial_ports.c
0048a4   6e6f     MOVWF     0x6f,0x0                                                                                        
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048a6   846c     BSF       0x6c,0x2,0x0   	TXSTA2bits.BRGH = 1;	// high baud rate select bit (asynchronous mode only) [248] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low speed                                                          C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high speed                                                         C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048a8   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;		// receive interrupt enable bit [129]                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048aa   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;		// transmit interrupt enable bit [129]                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048ac   986c     BCF       0x6c,0x4,0x0   	TXSTA2bits.SYNC = 0;	// USART mode select bit [248]                             C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: asynchronous mode                                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: synchronous mode                                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048ae   9e6c     BCF       0x6c,0x7,0x0   	TXSTA2bits.CSRC = 0;	// clock source select bit (synchronous mode only) [248]   C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: Slave mode (clock generated by external source)                    C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: Master mode (clock generated internally from BRG)                  C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// if receive functionality is to be included in the                            C:\code\2008\Trc2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Trc2008\serial_ports.c
                                           	// initializing the receiver                                                    C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_RX                                                C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048b0   8498     BSF       0x98,0x2,0x0   	TRISGbits.TRISG2 = 1;	// make sure the RG2/RX2/DT2 pin is configured as an input [151] C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048b2   9c6b     BCF       0x6b,0x6,0x0   	RCSTA2bits.RX9 = 0;		// 9-bit receive enable bit [249]                          C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: 8-bit reception mode                                               C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: 9-bit reception mode                                               C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048b4   966b     BCF       0x6b,0x3,0x0   	RCSTA2bits.ADDEN = 0;	// address detect enable bit (9-bit asynchronous mode only) [249] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables address detection                                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables address detection                                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048b6   8a6b     BSF       0x6b,0x5,0x0   	RCSTA2bits.SREN = 1;	// single receive enable bit (master synchronous mode only) [249] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables single receive mode                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables single receive mode                                        C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048b8   886b     BSF       0x6b,0x4,0x0   	RCSTA2bits.CREN = 1;	// continuous receive mode enable bit [249]                C:\code\2008\Trc2008\serial_ports.c
                                           							// asynchronous mode:                                                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables receiver                                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enable receiver                                                    C:\code\2008\Trc2008\serial_ports.c
                                           							// synchronous mode:                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables continuous receive                                        C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables continuous receive until CREN is cleared                   C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048ba   9aa5     BCF       0xa5,0x5,0x0   	IPR3bits.RC2IP = 0;		// receive interrupt priority bit (must be 0 for IFI controllers) [132] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048bc   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;		// receive interrupt enable bit [129]                      C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables received data interrupt                                   C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables received data interrupt                                    C:\code\2008\Trc2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// if transmit functionality is to be included in the                           C:\code\2008\Trc2008\serial_ports.c
                                           	// software build, include code that is specific to                             C:\code\2008\Trc2008\serial_ports.c
                                           	// initializing the serial port transmitter                                     C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048be   0102     MOVLB     0x2            	stdout = _H_USER;		// use this driver for output stream functions               C:\code\2008\Trc2008\serial_ports.c
0048c0   69a6     SETF      0xa6,0x1                                                                                        
0048c2   69a7     SETF      0xa7,0x1                                                                                        
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048c4   9298     BCF       0x98,0x1,0x0   	TRISGbits.TRISG1 = 0;	// make sure the RG1/TX2/CK2 pin is configured as an output [151] C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048c6   9c6c     BCF       0x6c,0x6,0x0   	TXSTA2bits.TX9 = 0;		// 9-bit transmit enable bit [248]                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: 8-bit transmission mode                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: 9-bit transmission mode                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048c8   966c     BCF       0x6c,0x3,0x0   	TXSTA2bits.SENDB = 0;	// send break character bit [248]                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: Sync Break transmission completed                                  C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: Send Sync Break on next transmission                               C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048ca   98a5     BCF       0xa5,0x4,0x0   	IPR3bits.TX2IP = 0;		// transmit interrupt priority bit (must be 0 for IFI controllers) [132] C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: low-priority                                                       C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: high-priority                                                      C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048cc   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;		// transmit interrupt enable bit [129]                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: disables transmit register empty interrupt                         C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: enables transmit register empty interrupt                          C:\code\2008\Trc2008\serial_ports.c
                                           							//                                                                        C:\code\2008\Trc2008\serial_ports.c
0048ce   8a6c     BSF       0x6c,0x5,0x0   	TXSTA2bits.TXEN = 1;  	// Enable transmitter [248]                              C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: serial transmitter is disabled                                     C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: serial transmitter                                                 C:\code\2008\Trc2008\serial_ports.c
                                           	#endif					//                                                                   C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// finally, turn on the serial port                                             C:\code\2008\Trc2008\serial_ports.c
0048d0   8e6b     BSF       0x6b,0x7,0x0   	RCSTA2bits.SPEN = 1;  	// Serial Port Enable [249]                              C:\code\2008\Trc2008\serial_ports.c
                                           							//  0: serial port is disabled                                            C:\code\2008\Trc2008\serial_ports.c
                                           							//  1: serial port is enabled                                             C:\code\2008\Trc2008\serial_ports.c
0048d2   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Serial_Port_One_Byte_Count()                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\code\2008\Trc2008\serial_ports.c
                                           *					ones's received data queue.		                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\code\2008\Trc2008\serial_ports.c
                                           *					if any, is present in serial port one's received data                      C:\code\2008\Trc2008\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\code\2008\Trc2008\serial_ports.c
                                           *					a call to Read_Serial_Port_One() can be made to retrieve                   C:\code\2008\Trc2008\serial_ports.c
                                           *					the next byte.                                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Trc2008\serial_ports.c
0048d4   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_One_Byte_Count(void)                                   C:\code\2008\Trc2008\serial_ports.c
0048d6   ffe6                                                                                                               
0048d8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0048da   ffd9                                                                                                               
0048dc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	unsigned char temp;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\code\2008\Trc2008\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\code\2008\Trc2008\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\code\2008\Trc2008\serial_ports.c
                                           	// using it.                                                                    C:\code\2008\Trc2008\serial_ports.c
0048de   9a9d     BCF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 0;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\code\2008\Trc2008\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\code\2008\Trc2008\serial_ports.c
0048e0   c236     MOVFF     0x236,0xfdf    	temp = Rx_1_Queue_Byte_Count;                                                   C:\code\2008\Trc2008\serial_ports.c
0048e2   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\code\2008\Trc2008\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\code\2008\Trc2008\serial_ports.c
0048e4   8a9d     BSF       0x9d,0x5,0x0   	PIE1bits.RC1IE = 1;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// return the byte count                                                        C:\code\2008\Trc2008\serial_ports.c
0048e6   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\code\2008\Trc2008\serial_ports.c
0048e8   d000     BRA       0x48ea                                                                                          
0048ea   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
0048ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048ee   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0048f0   ffd9                                                                                                               
0048f2   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Serial_Port_Two_Byte_Count()                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Returns the number of bytes in serial port                           C:\code\2008\Trc2008\serial_ports.c
                                           *					two's received data queue.		                                               C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function must be called to determine how much data,            C:\code\2008\Trc2008\serial_ports.c
                                           *					if any, is present in serial port two's received data                      C:\code\2008\Trc2008\serial_ports.c
                                           *					queue. If the returned number is greater than zero, then                   C:\code\2008\Trc2008\serial_ports.c
                                           *					a call to Read_Serial_Port_Two() can be made to retrieve                   C:\code\2008\Trc2008\serial_ports.c
                                           *					the next byte.                                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Trc2008\serial_ports.c
0048f4   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Port_Two_Byte_Count(void)                                   C:\code\2008\Trc2008\serial_ports.c
0048f6   ffe6                                                                                                               
0048f8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0048fa   ffd9                                                                                                               
0048fc   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	unsigned char temp;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// since we're about to use the Rx_1_Queue_Byte_Count variable,                 C:\code\2008\Trc2008\serial_ports.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\serial_ports.c
                                           	// let's briefly disable the serial port interrupt to make sure                 C:\code\2008\Trc2008\serial_ports.c
                                           	// that Rx_1_Queue_Byte_Count doesn't get altered while we're                   C:\code\2008\Trc2008\serial_ports.c
                                           	// using it.                                                                    C:\code\2008\Trc2008\serial_ports.c
0048fe   9aa3     BCF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 0;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// now we can get a local copy of the byte count without fear                   C:\code\2008\Trc2008\serial_ports.c
                                           	// that we'll get corrupted data                                                C:\code\2008\Trc2008\serial_ports.c
004900   c242     MOVFF     0x242,0xfdf    	temp = Rx_2_Queue_Byte_Count;                                                   C:\code\2008\Trc2008\serial_ports.c
004902   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// okay, we have a local copy of the byte count, so turn the                    C:\code\2008\Trc2008\serial_ports.c
                                           	// serial port interrupt back on.                                               C:\code\2008\Trc2008\serial_ports.c
004904   8aa3     BSF       0xa3,0x5,0x0   	PIE3bits.RC2IE = 1;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// return the byte count                                                        C:\code\2008\Trc2008\serial_ports.c
004906   50df     MOVF      0xdf,0x0,0x0   	return(temp);                                                                   C:\code\2008\Trc2008\serial_ports.c
004908   d000     BRA       0x490a                                                                                          
00490a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
00490c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00490e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004910   ffd9                                                                                                               
004912   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_One()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h 		                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Trc2008\serial_ports.c
004914   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_One(void)                                         C:\code\2008\Trc2008\serial_ports.c
004916   ffe6                                                                                                               
004918   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00491a   ffd9                                                                                                               
00491c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	unsigned char byte;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
00491e   0102     MOVLB     0x2            	if(Rx_1_Queue_Empty)                                                            C:\code\2008\Trc2008\serial_ports.c
004920   5133     MOVF      0x33,0x0,0x1                                                                                    
004922   e003     BZ        0x492a                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// error: no data to read                                                      C:\code\2008\Trc2008\serial_ports.c
004924   0e00     MOVLW     0x0            		return(0);                                                                     C:\code\2008\Trc2008\serial_ports.c
004926   d017     BRA       0x4956                                                                                          
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004928   d016     BRA       0x4956         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\code\2008\Trc2008\serial_ports.c
00492a   5134     MOVF      0x34,0x0,0x1   		byte = Rx_1_Queue[Rx_1_Queue_Read_Index];                                      C:\code\2008\Trc2008\serial_ports.c
00492c   6aea     CLRF      0xea,0x0                                                                                        
00492e   0f00     ADDLW     0x0                                                                                             
004930   6ee9     MOVWF     0xe9,0x0                                                                                        
004932   0e01     MOVLW     0x1                                                                                             
004934   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004936   cfef     MOVFF     0xfef,0xfdf                                                                                     
004938   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
00493a   0736     DECF      0x36,0x1,0x1   		Rx_1_Queue_Byte_Count--;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Trc2008\serial_ports.c
00493c   2b34     INCF      0x34,0x1,0x1   		Rx_1_Queue_Read_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
00493e   0e1f     MOVLW     0x1f           		Rx_1_Queue_Read_Index &= RX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
004940   1734     ANDWF     0x34,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// since we're about to use the Rx_1_Queue_Write_Index variable, which can     C:\code\2008\Trc2008\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\code\2008\Trc2008\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_1_Queue_Write_Index doesn't  C:\code\2008\Trc2008\serial_ports.c
                                           		// get altered while we're using it.                                           C:\code\2008\Trc2008\serial_ports.c
004942   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Trc2008\serial_ports.c
004944   5135     MOVF      0x35,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004946   5d34     SUBWF     0x34,0x0,0x1                                                                                    
004948   e102     BNZ       0x494e                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
00494a   0e01     MOVLW     0x1            			Rx_1_Queue_Empty = TRUE;                                                      C:\code\2008\Trc2008\serial_ports.c
00494c   6f33     MOVWF     0x33,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// okay, we're done using Rx_1_Queue_Write_Index, so turn the serial port      C:\code\2008\Trc2008\serial_ports.c
                                           		// interrupt back on.                                                          C:\code\2008\Trc2008\serial_ports.c
00494e   8a9d     BSF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 1;                                                            C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
004950   6b32     CLRF      0x32,0x1       		Rx_1_Queue_Full = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// return the data                                                             C:\code\2008\Trc2008\serial_ports.c
004952   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\code\2008\Trc2008\serial_ports.c
004954   d000     BRA       0x4956                                                                                          
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004956   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
004958   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00495a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00495c   ffd9                                                                                                               
00495e   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Read_Serial_Port_Two()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		                                                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		unsigned char                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		This function will not be included in the build unless              C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Trc2008\serial_ports.c
004960   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Read_Serial_Port_Two(void)                                         C:\code\2008\Trc2008\serial_ports.c
004962   ffe6                                                                                                               
004964   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004966   ffd9                                                                                                               
004968   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	unsigned char byte;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
00496a   0102     MOVLB     0x2            	if(Rx_2_Queue_Empty)                                                            C:\code\2008\Trc2008\serial_ports.c
00496c   513f     MOVF      0x3f,0x0,0x1                                                                                    
00496e   e003     BZ        0x4976                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// error: no data to read                                                      C:\code\2008\Trc2008\serial_ports.c
004970   0e00     MOVLW     0x0            		return(0);                                                                     C:\code\2008\Trc2008\serial_ports.c
004972   d017     BRA       0x49a2                                                                                          
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004974   d016     BRA       0x49a2         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// get a byte from the circular queue and store it temporarily                 C:\code\2008\Trc2008\serial_ports.c
004976   5140     MOVF      0x40,0x0,0x1   		byte = Rx_2_Queue[Rx_2_Queue_Read_Index];                                      C:\code\2008\Trc2008\serial_ports.c
004978   6aea     CLRF      0xea,0x0                                                                                        
00497a   0f40     ADDLW     0x40                                                                                            
00497c   6ee9     MOVWF     0xe9,0x0                                                                                        
00497e   0e01     MOVLW     0x1                                                                                             
004980   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004982   cfef     MOVFF     0xfef,0xfdf                                                                                     
004984   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
004986   0742     DECF      0x42,0x1,0x1   		Rx_2_Queue_Byte_Count--;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Trc2008\serial_ports.c
004988   2b40     INCF      0x40,0x1,0x1   		Rx_2_Queue_Read_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
00498a   0e1f     MOVLW     0x1f           		Rx_2_Queue_Read_Index &= RX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
00498c   1740     ANDWF     0x40,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// since we're about to use the Rx_2_Queue_Write_Index variable, which can     C:\code\2008\Trc2008\serial_ports.c
                                           		// also be modified in the interrupt service routine, let's briefly disable    C:\code\2008\Trc2008\serial_ports.c
                                           		// the serial port interrupt to make sure that Rx_2_Queue_Write_Index doesn't  C:\code\2008\Trc2008\serial_ports.c
                                           		// get altered while we're using it.                                           C:\code\2008\Trc2008\serial_ports.c
00498e   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Trc2008\serial_ports.c
004990   5141     MOVF      0x41,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004992   5d40     SUBWF     0x40,0x0,0x1                                                                                    
004994   e102     BNZ       0x499a                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004996   0e01     MOVLW     0x1            			Rx_2_Queue_Empty = TRUE;                                                      C:\code\2008\Trc2008\serial_ports.c
004998   6f3f     MOVWF     0x3f,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// okay, we're done using Rx_2_Queue_Write_Index, so turn the serial port      C:\code\2008\Trc2008\serial_ports.c
                                           		// interrupt back on.                                                          C:\code\2008\Trc2008\serial_ports.c
00499a   8aa3     BSF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 1;                                                            C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                            		// Since we've just removed a byte to the queue, it can't possibly be full.   C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
00499c   6b3e     CLRF      0x3e,0x1       		Rx_2_Queue_Full = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// return the data                                                             C:\code\2008\Trc2008\serial_ports.c
00499e   50df     MOVF      0xdf,0x0,0x0   		return(byte);                                                                  C:\code\2008\Trc2008\serial_ports.c
0049a0   d000     BRA       0x49a2                                                                                          
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
0049a2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
0049a4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049a6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0049a8   ffd9                                                                                                               
0049aa   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_One()                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port one.                          C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\code\2008\Trc2008\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\code\2008\Trc2008\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\code\2008\Trc2008\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\code\2008\Trc2008\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\code\2008\Trc2008\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\code\2008\Trc2008\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Trc2008\serial_ports.c
0049ac   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_One(unsigned char byte)                                   C:\code\2008\Trc2008\serial_ports.c
0049ae   ffe6                                                                                                               
0049b0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0049b2   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\code\2008\Trc2008\serial_ports.c
0049b4   0102     MOVLB     0x2            	while(Tx_1_Queue_Full);                                                         C:\code\2008\Trc2008\serial_ports.c
0049b6   5139     MOVF      0x39,0x0,0x1                                                                                    
0049b8   e001     BZ        0x49bc                                                                                          
0049ba   d7fc     BRA       0x49b4                                                                                          
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\code\2008\Trc2008\serial_ports.c
0049bc   513c     MOVF      0x3c,0x0,0x1   	Tx_1_Queue[Tx_1_Queue_Write_Index] = byte;                                      C:\code\2008\Trc2008\serial_ports.c
0049be   6aea     CLRF      0xea,0x0                                                                                        
0049c0   0f20     ADDLW     0x20                                                                                            
0049c2   6ee9     MOVWF     0xe9,0x0                                                                                        
0049c4   0e01     MOVLW     0x1                                                                                             
0049c6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0049c8   0efe     MOVLW     0xfe                                                                                            
0049ca   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0049cc   ffef                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// increment the queue byte count                                               C:\code\2008\Trc2008\serial_ports.c
0049ce   2b3d     INCF      0x3d,0x1,0x1   	Tx_1_Queue_Byte_Count++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// increment the write pointer                                                  C:\code\2008\Trc2008\serial_ports.c
0049d0   2b3c     INCF      0x3c,0x1,0x1   	Tx_1_Queue_Write_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\code\2008\Trc2008\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\code\2008\Trc2008\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\code\2008\Trc2008\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\code\2008\Trc2008\serial_ports.c
0049d2   0e1f     MOVLW     0x1f           	Tx_1_Queue_Write_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
0049d4   173c     ANDWF     0x3c,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// since we're about to use the Tx_1_Queue_Write_Index variable, which can      C:\code\2008\Trc2008\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\code\2008\Trc2008\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_1_Queue_Write_Index doesn't   C:\code\2008\Trc2008\serial_ports.c
                                           	// get altered while we're using it.                                            C:\code\2008\Trc2008\serial_ports.c
0049d6   989d     BCF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 0;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// is the circular queue now full?                                              C:\code\2008\Trc2008\serial_ports.c
0049d8   513c     MOVF      0x3c,0x0,0x1   	if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                             C:\code\2008\Trc2008\serial_ports.c
0049da   5d3b     SUBWF     0x3b,0x0,0x1                                                                                    
0049dc   e102     BNZ       0x49e2                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
0049de   0e01     MOVLW     0x1            		Tx_1_Queue_Full = TRUE;                                                        C:\code\2008\Trc2008\serial_ports.c
0049e0   6f39     MOVWF     0x39,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// okay, we're done using Tx_Queue_Write_Index, so turn the serial port         C:\code\2008\Trc2008\serial_ports.c
                                           	// interrupt back on.                                                           C:\code\2008\Trc2008\serial_ports.c
0049e2   889d     BSF       0x9d,0x4,0x0   	PIE1bits.TX1IE = 1;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\code\2008\Trc2008\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\code\2008\Trc2008\serial_ports.c
0049e4   6b3a     CLRF      0x3a,0x1       	Tx_1_Queue_Empty = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
0049e6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
0049e8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0049ea   ffd9                                                                                                               
0049ec   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Write_Serial_Port_Two()                                             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Sends a byte of data using serial port two.                          C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		unsigned char                                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If you don't initialize the serial port before calling              C:\code\2008\Trc2008\serial_ports.c
                                           *					this function, the robot controller will stop functioning                  C:\code\2008\Trc2008\serial_ports.c
                                           *					and you'll get the much dreaded red-light-of-death. This                   C:\code\2008\Trc2008\serial_ports.c
                                           *					is because the while() statement below is waiting for the                  C:\code\2008\Trc2008\serial_ports.c
                                           *					transmit circuitry to send another byte, but if the serial                 C:\code\2008\Trc2008\serial_ports.c
                                           *					port hasn't been configured, nothing will be transmitted                   C:\code\2008\Trc2008\serial_ports.c
                                           *					and we'll be stuck in the while() loop.                                    C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Trc2008\serial_ports.c
0049ee   cfd9     MOVFF     0xfd9,0xfe6    void Write_Serial_Port_Two(unsigned char byte)                                   C:\code\2008\Trc2008\serial_ports.c
0049f0   ffe6                                                                                                               
0049f2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0049f4   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           	// if the queue is full, wait here until space is available                     C:\code\2008\Trc2008\serial_ports.c
0049f6   0102     MOVLB     0x2            	while(Tx_2_Queue_Full);                                                         C:\code\2008\Trc2008\serial_ports.c
0049f8   5145     MOVF      0x45,0x0,0x1                                                                                    
0049fa   e001     BZ        0x49fe                                                                                          
0049fc   d7fc     BRA       0x49f6                                                                                          
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// put the byte on the circular queue                                           C:\code\2008\Trc2008\serial_ports.c
0049fe   5148     MOVF      0x48,0x0,0x1   	Tx_2_Queue[Tx_2_Queue_Write_Index] = byte;                                      C:\code\2008\Trc2008\serial_ports.c
004a00   6aea     CLRF      0xea,0x0                                                                                        
004a02   0f60     ADDLW     0x60                                                                                            
004a04   6ee9     MOVWF     0xe9,0x0                                                                                        
004a06   0e01     MOVLW     0x1                                                                                             
004a08   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a0a   0efe     MOVLW     0xfe                                                                                            
004a0c   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004a0e   ffef                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// increment the queue byte count                                               C:\code\2008\Trc2008\serial_ports.c
004a10   2b49     INCF      0x49,0x1,0x1   	Tx_2_Queue_Byte_Count++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// increment the write pointer                                                  C:\code\2008\Trc2008\serial_ports.c
004a12   2b48     INCF      0x48,0x1,0x1   	Tx_2_Queue_Write_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// If the index pointer overflowed, cut-off the high-order bit. Doing this      C:\code\2008\Trc2008\serial_ports.c
                                           	// every time is quicker than checking for overflow every time with an if()     C:\code\2008\Trc2008\serial_ports.c
                                           	// statement and only then occasionally setting it back to zero. For this       C:\code\2008\Trc2008\serial_ports.c
                                           	// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).        C:\code\2008\Trc2008\serial_ports.c
004a14   0e1f     MOVLW     0x1f           	Tx_2_Queue_Write_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
004a16   1748     ANDWF     0x48,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// since we're about to use the Tx_2_Queue_Write_Index variable, which can      C:\code\2008\Trc2008\serial_ports.c
                                           	// also be modified in the interrupt service routine, let's briefly disable     C:\code\2008\Trc2008\serial_ports.c
                                           	// the serial port interrupt to make sure that Tx_2_Queue_Write_Index doesn't   C:\code\2008\Trc2008\serial_ports.c
                                           	// get altered while we're using it.                                            C:\code\2008\Trc2008\serial_ports.c
004a18   98a3     BCF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 0;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// is the circular queue now full?                                              C:\code\2008\Trc2008\serial_ports.c
004a1a   5148     MOVF      0x48,0x0,0x1   	if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                             C:\code\2008\Trc2008\serial_ports.c
004a1c   5d47     SUBWF     0x47,0x0,0x1                                                                                    
004a1e   e102     BNZ       0x4a24                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
004a20   0e01     MOVLW     0x1            		Tx_2_Queue_Full = TRUE;                                                        C:\code\2008\Trc2008\serial_ports.c
004a22   6f45     MOVWF     0x45,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// okay, we're done using Tx_2_Queue_Write_Index, so turn the serial port       C:\code\2008\Trc2008\serial_ports.c
                                           	// interrupt back on.                                                           C:\code\2008\Trc2008\serial_ports.c
004a24   88a3     BSF       0xa3,0x4,0x0   	PIE3bits.TX2IE = 1;                                                             C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	// Since we've just added a byte to the queue, it can't possibly be empty.      C:\code\2008\Trc2008\serial_ports.c
                                           	// Again, this is quicker than using an if() statement every time               C:\code\2008\Trc2008\serial_ports.c
004a26   6b46     CLRF      0x46,0x1       	Tx_2_Queue_Empty = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
004a28   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
004a2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a2c   ffd9                                                                                                               
004a2e   0012     RETURN    0x0                                                                                             
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Rx_1_Int_Handler()                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Serial port one new data interrupt handler.                          C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Trc2008\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\code\2008\Trc2008\serial_ports.c
                                           *					is received by serial port one.                                            C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_RX is #define'd in serial_ports.h		                 C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_RX                                                 C:\code\2008\Trc2008\serial_ports.c
                                           void Rx_1_Int_Handler(void)                                                      C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
004a30   0102     MOVLB     0x2            	if(Rx_1_Queue_Full)                                                             C:\code\2008\Trc2008\serial_ports.c
004a32   5132     MOVF      0x32,0x0,0x1                                                                                    
004a34   e002     BZ        0x4a3a                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\code\2008\Trc2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\code\2008\Trc2008\serial_ports.c
                                           		// more data is read.                                                          C:\code\2008\Trc2008\serial_ports.c
004a36   9a9d     BCF       0x9d,0x5,0x0   		PIE1bits.RC1IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004a38   d019     BRA       0x4a6c         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\code\2008\Trc2008\serial_ports.c
004a3a   5135     MOVF      0x35,0x0,0x1   		Rx_1_Queue[Rx_1_Queue_Write_Index] = RCREG1;                                   C:\code\2008\Trc2008\serial_ports.c
004a3c   6aea     CLRF      0xea,0x0                                                                                        
004a3e   0f00     ADDLW     0x0                                                                                             
004a40   6ee9     MOVWF     0xe9,0x0                                                                                        
004a42   0e01     MOVLW     0x1                                                                                             
004a44   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a46   cfae     MOVFF     0xfae,0xfef                                                                                     
004a48   ffef                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\code\2008\Trc2008\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\code\2008\Trc2008\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\code\2008\Trc2008\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\code\2008\Trc2008\serial_ports.c
                                           		// to get data flowing again.                                                  C:\code\2008\Trc2008\serial_ports.c
004a4a   a2ab     BTFSS     0xab,0x1,0x0   		if(RCSTA1bits.OERR)                                                            C:\code\2008\Trc2008\serial_ports.c
004a4c   d003     BRA       0x4a54                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\code\2008\Trc2008\serial_ports.c
004a4e   98ab     BCF       0xab,0x4,0x0   			RCSTA1bits.CREN = 0;                                                          C:\code\2008\Trc2008\serial_ports.c
                                           			                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           			// ...turn it back on                                                         C:\code\2008\Trc2008\serial_ports.c
004a50   88ab     BSF       0xab,0x4,0x0   			RCSTA1bits.CREN = 1;                                                          C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           			// indicate that we've had an error                                           C:\code\2008\Trc2008\serial_ports.c
004a52   2b37     INCF      0x37,0x1,0x1   			RX_1_Overrun_Errors++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\code\2008\Trc2008\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\code\2008\Trc2008\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\code\2008\Trc2008\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\code\2008\Trc2008\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\code\2008\Trc2008\serial_ports.c
004a54   b4ab     BTFSC     0xab,0x2,0x0   		if(RCSTA1bits.FERR)                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004a56   2b38     INCF      0x38,0x1,0x1   			RX_1_Framing_Errors++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
004a58   2b36     INCF      0x36,0x1,0x1   		Rx_1_Queue_Byte_Count++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                           	                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the write pointer                                                 C:\code\2008\Trc2008\serial_ports.c
004a5a   2b35     INCF      0x35,0x1,0x1   		Rx_1_Queue_Write_Index++;                                                      C:\code\2008\Trc2008\serial_ports.c
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
004a5c   0e1f     MOVLW     0x1f           		Rx_1_Queue_Write_Index &= RX_1_QUEUE_INDEX_MASK;                               C:\code\2008\Trc2008\serial_ports.c
004a5e   1735     ANDWF     0x35,0x1,0x1                                                                                    
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now full?                                             C:\code\2008\Trc2008\serial_ports.c
004a60   5135     MOVF      0x35,0x0,0x1   		if(Rx_1_Queue_Read_Index == Rx_1_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004a62   5d34     SUBWF     0x34,0x0,0x1                                                                                    
004a64   e102     BNZ       0x4a6a                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004a66   0e01     MOVLW     0x1            			Rx_1_Queue_Full = TRUE;                                                       C:\code\2008\Trc2008\serial_ports.c
004a68   6f32     MOVWF     0x32,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
004a6a   6b33     CLRF      0x33,0x1       		Rx_1_Queue_Empty = FALSE;                                                      C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004a6c   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Rx_2_Int_Handler()                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Serial port two new data interrupt handler.		                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Trc2008\serial_ports.c
                                           *					function will be called every time a new byte of data                      C:\code\2008\Trc2008\serial_ports.c
                                           *					is received by serial port two.                                            C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_RX is #define'd in serial_ports.h 		                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_RX                                                 C:\code\2008\Trc2008\serial_ports.c
                                           void Rx_2_Int_Handler(void)                                                      C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
004a6e   0102     MOVLB     0x2            	if(Rx_2_Queue_Full)                                                             C:\code\2008\Trc2008\serial_ports.c
004a70   513e     MOVF      0x3e,0x0,0x1                                                                                    
004a72   e002     BZ        0x4a78                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we can't store any more data.    C:\code\2008\Trc2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Receive_Byte() function when    C:\code\2008\Trc2008\serial_ports.c
                                           		// more data is read.                                                          C:\code\2008\Trc2008\serial_ports.c
004a74   9aa3     BCF       0xa3,0x5,0x0   		PIE3bits.RC2IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004a76   d019     BRA       0x4aaa         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// put the byte on the circular queue                                          C:\code\2008\Trc2008\serial_ports.c
004a78   5141     MOVF      0x41,0x0,0x1   		Rx_2_Queue[Rx_2_Queue_Write_Index] = RCREG2;                                   C:\code\2008\Trc2008\serial_ports.c
004a7a   6aea     CLRF      0xea,0x0                                                                                        
004a7c   0f40     ADDLW     0x40                                                                                            
004a7e   6ee9     MOVWF     0xe9,0x0                                                                                        
004a80   0e01     MOVLW     0x1                                                                                             
004a82   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a84   cf6e     MOVFF     0xf6e,0xfef                                                                                     
004a86   ffef                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// if the interrupt handler was disabled while data was being received,        C:\code\2008\Trc2008\serial_ports.c
                                           		// data may have backed-up in the receiver circuitry, causing an overrun       C:\code\2008\Trc2008\serial_ports.c
                                           		// condition. So let's check the OERR bit to see if this has happened          C:\code\2008\Trc2008\serial_ports.c
                                           		// and if it has, we'll need to reset the serial port receiver circuitry       C:\code\2008\Trc2008\serial_ports.c
                                           		// to get data flowing again.                                                  C:\code\2008\Trc2008\serial_ports.c
004a88   a26b     BTFSS     0x6b,0x1,0x0   		if(RCSTA2bits.OERR)                                                            C:\code\2008\Trc2008\serial_ports.c
004a8a   d003     BRA       0x4a92                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           			// reset by turning off the receiver circuitry, then...                       C:\code\2008\Trc2008\serial_ports.c
004a8c   986b     BCF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 0;                                                          C:\code\2008\Trc2008\serial_ports.c
                                           			                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           			// ...turn it back on                                                         C:\code\2008\Trc2008\serial_ports.c
004a8e   886b     BSF       0x6b,0x4,0x0   			RCSTA2bits.CREN = 1;                                                          C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           			// indicate that we've had an error                                           C:\code\2008\Trc2008\serial_ports.c
004a90   2b43     INCF      0x43,0x1,0x1   			RX_2_Overrun_Errors++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// if incoming data gets misaligned and the receiver doesn't receive a         C:\code\2008\Trc2008\serial_ports.c
                                           		// stop bit where it expects to detect it, the receiver circuitry will         C:\code\2008\Trc2008\serial_ports.c
                                           		// set the FERR bit to indicate that it's received corrupted data. The         C:\code\2008\Trc2008\serial_ports.c
                                           		// likely reason for this is an incorrectly set baud rate on either the        C:\code\2008\Trc2008\serial_ports.c
                                           		// receiver or transmitter end.                                                C:\code\2008\Trc2008\serial_ports.c
004a92   b46b     BTFSC     0x6b,0x2,0x0   		if(RCSTA2bits.FERR)                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004a94   2b44     INCF      0x44,0x1,0x1   			RX_2_Framing_Errors++;                                                        C:\code\2008\Trc2008\serial_ports.c
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
004a96   2b42     INCF      0x42,0x1,0x1   		Rx_2_Queue_Byte_Count++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                           	                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the write pointer                                                 C:\code\2008\Trc2008\serial_ports.c
004a98   2b41     INCF      0x41,0x1,0x1   		Rx_2_Queue_Write_Index++;                                                      C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
004a9a   0e1f     MOVLW     0x1f           		Rx_2_Queue_Write_Index &= RX_2_QUEUE_INDEX_MASK;                               C:\code\2008\Trc2008\serial_ports.c
004a9c   1741     ANDWF     0x41,0x1,0x1                                                                                    
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now full?                                             C:\code\2008\Trc2008\serial_ports.c
004a9e   5141     MOVF      0x41,0x0,0x1   		if(Rx_2_Queue_Read_Index == Rx_2_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004aa0   5d40     SUBWF     0x40,0x0,0x1                                                                                    
004aa2   e102     BNZ       0x4aa8                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004aa4   0e01     MOVLW     0x1            			Rx_2_Queue_Full = TRUE;                                                       C:\code\2008\Trc2008\serial_ports.c
004aa6   6f3e     MOVWF     0x3e,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                           		                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// Since we've just added a byte to the queue, it can't possibly be empty.     C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
004aa8   6b3f     CLRF      0x3f,0x1       		Rx_2_Queue_Empty = FALSE;                                                      C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004aaa   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Tx_1_Int_Handler()                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Serial port one empty transmit buffer interrupt handler.             C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Trc2008\serial_ports.c
                                           *					function will be called every time serial port one is                      C:\code\2008\Trc2008\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_ONE_TX is #define'd in serial_ports.h 		                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_ONE_TX                                                 C:\code\2008\Trc2008\serial_ports.c
                                           void Tx_1_Int_Handler(void)                                                      C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
004aac   0102     MOVLB     0x2            	if(Tx_1_Queue_Empty)                                                            C:\code\2008\Trc2008\serial_ports.c
004aae   513a     MOVF      0x3a,0x0,0x1                                                                                    
004ab0   e002     BZ        0x4ab6                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\code\2008\Trc2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\code\2008\Trc2008\serial_ports.c
                                           		// more data is sent.                                                          C:\code\2008\Trc2008\serial_ports.c
004ab2   989d     BCF       0x9d,0x4,0x0   		PIE1bits.TX1IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004ab4   d012     BRA       0x4ada         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\code\2008\Trc2008\serial_ports.c
004ab6   513b     MOVF      0x3b,0x0,0x1   		TXREG1 = Tx_1_Queue[Tx_1_Queue_Read_Index];                                    C:\code\2008\Trc2008\serial_ports.c
004ab8   6aea     CLRF      0xea,0x0                                                                                        
004aba   0f20     ADDLW     0x20                                                                                            
004abc   6ee9     MOVWF     0xe9,0x0                                                                                        
004abe   0e01     MOVLW     0x1                                                                                             
004ac0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004ac2   50ef     MOVF      0xef,0x0,0x0                                                                                    
004ac4   6ead     MOVWF     0xad,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
004ac6   073d     DECF      0x3d,0x1,0x1   		Tx_1_Queue_Byte_Count--;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Trc2008\serial_ports.c
004ac8   2b3b     INCF      0x3b,0x1,0x1   		Tx_1_Queue_Read_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
004aca   0e1f     MOVLW     0x1f           		Tx_1_Queue_Read_Index &= TX_1_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
004acc   173b     ANDWF     0x3b,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Trc2008\serial_ports.c
004ace   513c     MOVF      0x3c,0x0,0x1   		if(Tx_1_Queue_Read_Index == Tx_1_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004ad0   5d3b     SUBWF     0x3b,0x0,0x1                                                                                    
004ad2   e102     BNZ       0x4ad8                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004ad4   0e01     MOVLW     0x1            			Tx_1_Queue_Empty = TRUE;                                                      C:\code\2008\Trc2008\serial_ports.c
004ad6   6f3a     MOVWF     0x3a,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
004ad8   6b39     CLRF      0x39,0x1       		Tx_1_Queue_Full = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004ada   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		Tx_2_Int_Handler()                                                  C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		Serial port two empty transmit buffer interrupt handler.		           C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:	user_routines_fast()                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:		If the interrupt handler was installed correctly, this              C:\code\2008\Trc2008\serial_ports.c
                                           *					function will be called every time serial port two is                      C:\code\2008\Trc2008\serial_ports.c
                                           *					ready to start sending a byte of data.                                     C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *					This function will not be included in the build unless                     C:\code\2008\Trc2008\serial_ports.c
                                           *					ENABLE_SERIAL_PORT_TWO_TX is #define'd in serial_ports.h 			               C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
                                           #ifdef ENABLE_SERIAL_PORT_TWO_TX                                                 C:\code\2008\Trc2008\serial_ports.c
                                           void Tx_2_Int_Handler(void)                                                      C:\code\2008\Trc2008\serial_ports.c
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
004adc   0102     MOVLB     0x2            	if(Tx_2_Queue_Empty)                                                            C:\code\2008\Trc2008\serial_ports.c
004ade   5146     MOVF      0x46,0x0,0x1                                                                                    
004ae0   e002     BZ        0x4ae6                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// just turn off the serial port interrupt if we don't have data to send.      C:\code\2008\Trc2008\serial_ports.c
                                           		// the interrupt will be re-enabled within the Send_Byte() function when       C:\code\2008\Trc2008\serial_ports.c
                                           		// more data is sent.                                                          C:\code\2008\Trc2008\serial_ports.c
004ae2   98a3     BCF       0xa3,0x4,0x0   		PIE3bits.TX2IE = 0;                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004ae4   d012     BRA       0x4b0a         	else                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// get a byte from the circular queue and send it to the USART                 C:\code\2008\Trc2008\serial_ports.c
004ae6   5147     MOVF      0x47,0x0,0x1   		TXREG2 = Tx_2_Queue[Tx_2_Queue_Read_Index];                                    C:\code\2008\Trc2008\serial_ports.c
004ae8   6aea     CLRF      0xea,0x0                                                                                        
004aea   0f60     ADDLW     0x60                                                                                            
004aec   6ee9     MOVWF     0xe9,0x0                                                                                        
004aee   0e01     MOVLW     0x1                                                                                             
004af0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004af2   50ef     MOVF      0xef,0x0,0x0                                                                                    
004af4   6e6d     MOVWF     0x6d,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// decrement the queue byte count                                              C:\code\2008\Trc2008\serial_ports.c
004af6   0749     DECF      0x49,0x1,0x1   		Tx_2_Queue_Byte_Count--;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// increment the read pointer                                                  C:\code\2008\Trc2008\serial_ports.c
004af8   2b47     INCF      0x47,0x1,0x1   		Tx_2_Queue_Read_Index++;                                                       C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// If the index pointer overflowed, cut-off the high-order bit. Doing this     C:\code\2008\Trc2008\serial_ports.c
                                           		// every time is quicker than checking for overflow every time with an if()    C:\code\2008\Trc2008\serial_ports.c
                                           		// statement and only then occasionally setting it back to zero. For this      C:\code\2008\Trc2008\serial_ports.c
                                           		// to work, the queue size must be a power of 2 (e.g., 16,32,64,128...).       C:\code\2008\Trc2008\serial_ports.c
004afa   0e1f     MOVLW     0x1f           		Tx_2_Queue_Read_Index &= TX_2_QUEUE_INDEX_MASK;                                C:\code\2008\Trc2008\serial_ports.c
004afc   1747     ANDWF     0x47,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           		// is the circular queue now empty?                                            C:\code\2008\Trc2008\serial_ports.c
004afe   5148     MOVF      0x48,0x0,0x1   		if(Tx_2_Queue_Read_Index == Tx_2_Queue_Write_Index)                            C:\code\2008\Trc2008\serial_ports.c
004b00   5d47     SUBWF     0x47,0x0,0x1                                                                                    
004b02   e102     BNZ       0x4b08                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\serial_ports.c
004b04   0e01     MOVLW     0x1            			Tx_2_Queue_Empty = TRUE;                                                      C:\code\2008\Trc2008\serial_ports.c
004b06   6f46     MOVWF     0x46,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                            		// Since we've just removed a byte from the queue, it can't possibly be full. C:\code\2008\Trc2008\serial_ports.c
                                           		// Again, this is quicker than using an if() statement every time              C:\code\2008\Trc2008\serial_ports.c
004b08   6b45     CLRF      0x45,0x1       		Tx_2_Queue_Full = FALSE;                                                       C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
004b0a   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           #endif                                                                           C:\code\2008\Trc2008\serial_ports.c
                                                                                                                            C:\code\2008\Trc2008\serial_ports.c
                                           /******************************************************************************* C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	FUNCTION:		_user_putc()                                                        C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PURPOSE:		putc() interface to C18 2.4 output stream functions		                C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *	COMMENTS:			                                                                   C:\code\2008\Trc2008\serial_ports.c
                                           *                                                                                C:\code\2008\Trc2008\serial_ports.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\serial_ports.c
004b0c   cfd9     MOVFF     0xfd9,0xfe6    void _user_putc(unsigned char byte)                                              C:\code\2008\Trc2008\serial_ports.c
004b0e   ffe6                                                                                                               
004b10   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b12   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\serial_ports.c
004b14   0102     MOVLB     0x2            	if(stdout_serial_port == NUL)                                                   C:\code\2008\Trc2008\serial_ports.c
004b16   5131     MOVF      0x31,0x0,0x1                                                                                    
004b18   e101     BNZ       0x4b1c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// send the data to the bit bucket                                             C:\code\2008\Trc2008\serial_ports.c
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_ONE_TX                                                C:\code\2008\Trc2008\serial_ports.c
004b1a   d010     BRA       0x4b3c         	else if(stdout_serial_port == SERIAL_PORT_ONE)                                  C:\code\2008\Trc2008\serial_ports.c
004b1c   0531     DECF      0x31,0x0,0x1                                                                                    
004b1e   e106     BNZ       0x4b2c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// send the data to serial port one                                            C:\code\2008\Trc2008\serial_ports.c
004b20   0efe     MOVLW     0xfe           		Write_Serial_Port_One(byte);                                                   C:\code\2008\Trc2008\serial_ports.c
004b22   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b24   ffe6                                                                                                               
004b26   df42     RCALL     0x49ac                                                                                          
004b28   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           	#endif                                                                          C:\code\2008\Trc2008\serial_ports.c
                                           	#ifdef ENABLE_SERIAL_PORT_TWO_TX                                                C:\code\2008\Trc2008\serial_ports.c
004b2a   d008     BRA       0x4b3c         	else if(stdout_serial_port == SERIAL_PORT_TWO)                                  C:\code\2008\Trc2008\serial_ports.c
004b2c   0e02     MOVLW     0x2                                                                                             
004b2e   5d31     SUBWF     0x31,0x0,0x1                                                                                    
004b30   e105     BNZ       0x4b3c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           		// send the data to serial port two                                            C:\code\2008\Trc2008\serial_ports.c
004b32   0efe     MOVLW     0xfe           		Write_Serial_Port_Two(byte);                                                   C:\code\2008\Trc2008\serial_ports.c
004b34   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b36   ffe6                                                                                                               
004b38   df5a     RCALL     0x49ee                                                                                          
004b3a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\serial_ports.c
                                           	#endif                                                                          C:\code\2008\Trc2008\serial_ports.c
004b3c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\serial_ports.c
004b3e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b40   ffd9                                                                                                               
004b42   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	TITLE:		terminal.c                                                             C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	DATE:		21-Feb-2006                                                             C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\terminal.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Trc2008\terminal.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\terminal.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Trc2008\terminal.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           ******************************************************************************** C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\terminal.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\terminal.c
                                           *	25-Nov-2005  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\terminal.c
                                           *	21-Feb-2006  0.2  RKW - Added "no camera data" diagnostic information.         C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\terminal.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\terminal.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\terminal.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\terminal.c
                                           #include "camera.h"                                                              C:\code\2008\Trc2008\terminal.c
                                           #include "tracking.h"                                                            C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           /******************************************************************************* C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	FUNCTION:		Tracking_Info_Terminal()                                            C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	PURPOSE:		This function is designed to send tracking information               C:\code\2008\Trc2008\terminal.c
                                           *					to a terminal attached to your robot controller's                          C:\code\2008\Trc2008\terminal.c
                                           *					programming port.                                                          C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *	COMMENTS:		This code assumes that the terminal serial port is                  C:\code\2008\Trc2008\terminal.c
                                           *					properly set in camera.h                                                   C:\code\2008\Trc2008\terminal.c
                                           *                                                                                C:\code\2008\Trc2008\terminal.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\terminal.c
                                           void Tracking_Info_Terminal(void)                                                C:\code\2008\Trc2008\terminal.c
                                           {                                                                                C:\code\2008\Trc2008\terminal.c
                                           	static unsigned char i = 0;                                                     C:\code\2008\Trc2008\terminal.c
                                           	static unsigned char j = 0;                                                     C:\code\2008\Trc2008\terminal.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           	// has a new camera tracking packet arrived since we last checked?              C:\code\2008\Trc2008\terminal.c
004dec   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\code\2008\Trc2008\terminal.c
004dee   519e     MOVF      0x9e,0x0,0x1                                                                                    
004df0   0102     MOVLB     0x2                                                                                             
004df2   1980     XORWF     0x80,0x0,0x1                                                                                    
004df4   e104     BNZ       0x4dfe                                                                                          
004df6   0102     MOVLB     0x2                                                                                             
004df8   519f     MOVF      0x9f,0x0,0x1                                                                                    
004dfa   0102     MOVLB     0x2                                                                                             
004dfc   1981     XORWF     0x81,0x0,0x1                                                                                    
004dfe   e101     BNZ       0x4e02                                                                                          
004e00   d0f8     BRA       0x4ff2                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\terminal.c
                                           		// increment the t-packet counter                                              C:\code\2008\Trc2008\terminal.c
004e02   0102     MOVLB     0x2            		i++;                                                                           C:\code\2008\Trc2008\terminal.c
004e04   2b9c     INCF      0x9c,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           		// reset the "no camera data" loop counter                                     C:\code\2008\Trc2008\terminal.c
004e06   6b9d     CLRF      0x9d,0x1       		j = 0;                                                                         C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           		// only show data on every twenty t-packets                                    C:\code\2008\Trc2008\terminal.c
004e08   0e14     MOVLW     0x14           		if(i >= 20)                                                                    C:\code\2008\Trc2008\terminal.c
004e0a   5d9c     SUBWF     0x9c,0x0,0x1                                                                                    
004e0c   e201     BC        0x4e10                                                                                          
004e0e   d0f0     BRA       0x4ff0                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\terminal.c
                                           			// reset the local t-packet counter                                           C:\code\2008\Trc2008\terminal.c
004e10   6b9c     CLRF      0x9c,0x1       			i = 0;                                                                        C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           			// does the camera have a tracking solution?                                  C:\code\2008\Trc2008\terminal.c
004e12   ec39     CALL      0x3c72,0x0     			if(Get_Tracking_State() == SEARCHING)                                         C:\code\2008\Trc2008\terminal.c
004e14   f01e                                                                                                               
004e16   0900     IORLW     0x0                                                                                             
004e18   e111     BNZ       0x4e3c                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\terminal.c
004e1a   0ec5     MOVLW     0xc5           				printf("Searching...\r\n");                                                  C:\code\2008\Trc2008\terminal.c
004e1c   6e00     MOVWF     0x0,0x0                                                                                         
004e1e   0e54     MOVLW     0x54                                                                                            
004e20   6e01     MOVWF     0x1,0x0                                                                                         
004e22   6a02     CLRF      0x2,0x0                                                                                         
004e24   c000     MOVFF     0x0,0xfe6                                                                                       
004e26   ffe6                                                                                                               
004e28   c001     MOVFF     0x1,0xfe6                                                                                       
004e2a   ffe6                                                                                                               
004e2c   c002     MOVFF     0x2,0xfe6                                                                                       
004e2e   ffe6                                                                                                               
004e30   ec8c     CALL      0x5918,0x0                                                                                      
004e32   f02c                                                                                                               
004e34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Trc2008\terminal.c
004e3a   d0da     BRA       0x4ff0         			else                                                                          C:\code\2008\Trc2008\terminal.c
                                           			{                                                                             C:\code\2008\Trc2008\terminal.c
004e3c   0ec2     MOVLW     0xc2           				printf("\r\n");                                                              C:\code\2008\Trc2008\terminal.c
004e3e   6e00     MOVWF     0x0,0x0                                                                                         
004e40   0e54     MOVLW     0x54                                                                                            
004e42   6e01     MOVWF     0x1,0x0                                                                                         
004e44   6a02     CLRF      0x2,0x0                                                                                         
004e46   c000     MOVFF     0x0,0xfe6                                                                                       
004e48   ffe6                                                                                                               
004e4a   c001     MOVFF     0x1,0xfe6                                                                                       
004e4c   ffe6                                                                                                               
004e4e   c002     MOVFF     0x2,0xfe6                                                                                       
004e50   ffe6                                                                                                               
004e52   ec8c     CALL      0x5918,0x0                                                                                      
004e54   f02c                                                                                                               
004e56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e5a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           				// pan angle = ((current pan PWM) - (pan center PWM)) * degrees/pan PWM step C:\code\2008\Trc2008\terminal.c
004e5c   0101     MOVLB     0x1            				printf(" Pan Angle (degrees) = %d\r\n", (((int)PAN_SERVO - 124) * 65)/124);  C:\code\2008\Trc2008\terminal.c
004e5e   5184     MOVF      0x84,0x0,0x1                                                                                    
004e60   6e00     MOVWF     0x0,0x0                                                                                         
004e62   6a01     CLRF      0x1,0x0                                                                                         
004e64   0e7c     MOVLW     0x7c                                                                                            
004e66   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004e68   0e00     MOVLW     0x0                                                                                             
004e6a   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004e6c   0e41     MOVLW     0x41                                                                                            
004e6e   0201     MULWF     0x1,0x0                                                                                         
004e70   cff3     MOVFF     0xff3,0x1                                                                                       
004e72   f001                                                                                                               
004e74   0200     MULWF     0x0,0x0                                                                                         
004e76   cff3     MOVFF     0xff3,0x0                                                                                       
004e78   f000                                                                                                               
004e7a   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004e7c   2601     ADDWF     0x1,0x1,0x0                                                                                     
004e7e   0e7c     MOVLW     0x7c                                                                                            
004e80   6e46     MOVWF     0x46,0x0                                                                                        
004e82   6a47     CLRF      0x47,0x0                                                                                        
004e84   c000     MOVFF     0x0,0x41                                                                                        
004e86   f041                                                                                                               
004e88   c001     MOVFF     0x1,0x42                                                                                        
004e8a   f042                                                                                                               
004e8c   ec3c     CALL      0x3e78,0x0                                                                                      
004e8e   f01f                                                                                                               
004e90   c041     MOVFF     0x41,0x0                                                                                        
004e92   f000                                                                                                               
004e94   c042     MOVFF     0x42,0x1                                                                                        
004e96   f001                                                                                                               
004e98   c000     MOVFF     0x0,0xfe6                                                                                       
004e9a   ffe6                                                                                                               
004e9c   c001     MOVFF     0x1,0xfe6                                                                                       
004e9e   ffe6                                                                                                               
004ea0   0ea6     MOVLW     0xa6                                                                                            
004ea2   6e02     MOVWF     0x2,0x0                                                                                         
004ea4   0e54     MOVLW     0x54                                                                                            
004ea6   6e03     MOVWF     0x3,0x0                                                                                         
004ea8   6a04     CLRF      0x4,0x0                                                                                         
004eaa   c002     MOVFF     0x2,0xfe6                                                                                       
004eac   ffe6                                                                                                               
004eae   c003     MOVFF     0x3,0xfe6                                                                                       
004eb0   ffe6                                                                                                               
004eb2   c004     MOVFF     0x4,0xfe6                                                                                       
004eb4   ffe6                                                                                                               
004eb6   ec8c     CALL      0x5918,0x0                                                                                      
004eb8   f02c                                                                                                               
004eba   6ef5     MOVWF     0xf5,0x0                                                                                        
004ebc   0e05     MOVLW     0x5                                                                                             
004ebe   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004ec0   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           				// tilt angle = ((current tilt PWM) - (tilt center PWM)) * degrees/tilt PWM step C:\code\2008\Trc2008\terminal.c
004ec2   0101     MOVLB     0x1            				printf("Tilt Angle (degrees) = %d\r\n", (((int)TILT_SERVO - 144) * 25)/50);  C:\code\2008\Trc2008\terminal.c
004ec4   5185     MOVF      0x85,0x0,0x1                                                                                    
004ec6   6e00     MOVWF     0x0,0x0                                                                                         
004ec8   6a01     CLRF      0x1,0x0                                                                                         
004eca   0e90     MOVLW     0x90                                                                                            
004ecc   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004ece   0e00     MOVLW     0x0                                                                                             
004ed0   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004ed2   0e19     MOVLW     0x19                                                                                            
004ed4   0201     MULWF     0x1,0x0                                                                                         
004ed6   cff3     MOVFF     0xff3,0x1                                                                                       
004ed8   f001                                                                                                               
004eda   0200     MULWF     0x0,0x0                                                                                         
004edc   cff3     MOVFF     0xff3,0x0                                                                                       
004ede   f000                                                                                                               
004ee0   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004ee2   2601     ADDWF     0x1,0x1,0x0                                                                                     
004ee4   0e32     MOVLW     0x32                                                                                            
004ee6   6e46     MOVWF     0x46,0x0                                                                                        
004ee8   6a47     CLRF      0x47,0x0                                                                                        
004eea   c000     MOVFF     0x0,0x41                                                                                        
004eec   f041                                                                                                               
004eee   c001     MOVFF     0x1,0x42                                                                                        
004ef0   f042                                                                                                               
004ef2   ec3c     CALL      0x3e78,0x0                                                                                      
004ef4   f01f                                                                                                               
004ef6   c041     MOVFF     0x41,0x0                                                                                        
004ef8   f000                                                                                                               
004efa   c042     MOVFF     0x42,0x1                                                                                        
004efc   f001                                                                                                               
004efe   c000     MOVFF     0x0,0xfe6                                                                                       
004f00   ffe6                                                                                                               
004f02   c001     MOVFF     0x1,0xfe6                                                                                       
004f04   ffe6                                                                                                               
004f06   0e8a     MOVLW     0x8a                                                                                            
004f08   6e02     MOVWF     0x2,0x0                                                                                         
004f0a   0e54     MOVLW     0x54                                                                                            
004f0c   6e03     MOVWF     0x3,0x0                                                                                         
004f0e   6a04     CLRF      0x4,0x0                                                                                         
004f10   c002     MOVFF     0x2,0xfe6                                                                                       
004f12   ffe6                                                                                                               
004f14   c003     MOVFF     0x3,0xfe6                                                                                       
004f16   ffe6                                                                                                               
004f18   c004     MOVFF     0x4,0xfe6                                                                                       
004f1a   ffe6                                                                                                               
004f1c   ec8c     CALL      0x5918,0x0                                                                                      
004f1e   f02c                                                                                                               
004f20   6ef5     MOVWF     0xf5,0x0                                                                                        
004f22   0e05     MOVLW     0x5                                                                                             
004f24   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004f26   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\terminal.c
004f28   0102     MOVLB     0x2            				printf(" Pan Error (Pixels)  = %d\r\n", (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT); C:\code\2008\Trc2008\terminal.c
004f2a   5100     MOVF      0x0,0x0,0x1                                                                                     
004f2c   6e00     MOVWF     0x0,0x0                                                                                         
004f2e   6a01     CLRF      0x1,0x0                                                                                         
004f30   0e4f     MOVLW     0x4f                                                                                            
004f32   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004f34   0e00     MOVLW     0x0                                                                                             
004f36   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004f38   c000     MOVFF     0x0,0xfe6                                                                                       
004f3a   ffe6                                                                                                               
004f3c   c001     MOVFF     0x1,0xfe6                                                                                       
004f3e   ffe6                                                                                                               
004f40   0e6e     MOVLW     0x6e                                                                                            
004f42   6e02     MOVWF     0x2,0x0                                                                                         
004f44   0e54     MOVLW     0x54                                                                                            
004f46   6e03     MOVWF     0x3,0x0                                                                                         
004f48   6a04     CLRF      0x4,0x0                                                                                         
004f4a   c002     MOVFF     0x2,0xfe6                                                                                       
004f4c   ffe6                                                                                                               
004f4e   c003     MOVFF     0x3,0xfe6                                                                                       
004f50   ffe6                                                                                                               
004f52   c004     MOVFF     0x4,0xfe6                                                                                       
004f54   ffe6                                                                                                               
004f56   ec8c     CALL      0x5918,0x0                                                                                      
004f58   f02c                                                                                                               
004f5a   6ef5     MOVWF     0xf5,0x0                                                                                        
004f5c   0e05     MOVLW     0x5                                                                                             
004f5e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004f60   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004f62   0102     MOVLB     0x2            				printf("Tilt Error (Pixels)  = %d\r\n", (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT); C:\code\2008\Trc2008\terminal.c
004f64   5101     MOVF      0x1,0x0,0x1                                                                                     
004f66   6e00     MOVWF     0x0,0x0                                                                                         
004f68   6a01     CLRF      0x1,0x0                                                                                         
004f6a   0e77     MOVLW     0x77                                                                                            
004f6c   5e00     SUBWF     0x0,0x1,0x0                                                                                     
004f6e   0e00     MOVLW     0x0                                                                                             
004f70   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
004f72   c000     MOVFF     0x0,0xfe6                                                                                       
004f74   ffe6                                                                                                               
004f76   c001     MOVFF     0x1,0xfe6                                                                                       
004f78   ffe6                                                                                                               
004f7a   0e52     MOVLW     0x52                                                                                            
004f7c   6e02     MOVWF     0x2,0x0                                                                                         
004f7e   0e54     MOVLW     0x54                                                                                            
004f80   6e03     MOVWF     0x3,0x0                                                                                         
004f82   6a04     CLRF      0x4,0x0                                                                                         
004f84   c002     MOVFF     0x2,0xfe6                                                                                       
004f86   ffe6                                                                                                               
004f88   c003     MOVFF     0x3,0xfe6                                                                                       
004f8a   ffe6                                                                                                               
004f8c   c004     MOVFF     0x4,0xfe6                                                                                       
004f8e   ffe6                                                                                                               
004f90   ec8c     CALL      0x5918,0x0                                                                                      
004f92   f02c                                                                                                               
004f94   6ef5     MOVWF     0xf5,0x0                                                                                        
004f96   0e05     MOVLW     0x5                                                                                             
004f98   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004f9a   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004f9c   0102     MOVLB     0x2            				printf(" Blob Size (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.pixels); C:\code\2008\Trc2008\terminal.c
004f9e   5106     MOVF      0x6,0x0,0x1                                                                                     
004fa0   6ee6     MOVWF     0xe6,0x0                                                                                        
004fa2   6ae6     CLRF      0xe6,0x0                                                                                        
004fa4   0e36     MOVLW     0x36                                                                                            
004fa6   6e00     MOVWF     0x0,0x0                                                                                         
004fa8   0e54     MOVLW     0x54                                                                                            
004faa   6e01     MOVWF     0x1,0x0                                                                                         
004fac   6a02     CLRF      0x2,0x0                                                                                         
004fae   c000     MOVFF     0x0,0xfe6                                                                                       
004fb0   ffe6                                                                                                               
004fb2   c001     MOVFF     0x1,0xfe6                                                                                       
004fb4   ffe6                                                                                                               
004fb6   c002     MOVFF     0x2,0xfe6                                                                                       
004fb8   ffe6                                                                                                               
004fba   ec8c     CALL      0x5918,0x0                                                                                      
004fbc   f02c                                                                                                               
004fbe   6ef5     MOVWF     0xf5,0x0                                                                                        
004fc0   0e05     MOVLW     0x5                                                                                             
004fc2   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004fc4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004fc6   0102     MOVLB     0x2            				printf("Confidence (Pixels)  = %u\r\n", (unsigned int)T_Packet_Data.confidence); C:\code\2008\Trc2008\terminal.c
004fc8   5107     MOVF      0x7,0x0,0x1                                                                                     
004fca   6ee6     MOVWF     0xe6,0x0                                                                                        
004fcc   6ae6     CLRF      0xe6,0x0                                                                                        
004fce   0e1a     MOVLW     0x1a                                                                                            
004fd0   6e00     MOVWF     0x0,0x0                                                                                         
004fd2   0e54     MOVLW     0x54                                                                                            
004fd4   6e01     MOVWF     0x1,0x0                                                                                         
004fd6   6a02     CLRF      0x2,0x0                                                                                         
004fd8   c000     MOVFF     0x0,0xfe6                                                                                       
004fda   ffe6                                                                                                               
004fdc   c001     MOVFF     0x1,0xfe6                                                                                       
004fde   ffe6                                                                                                               
004fe0   c002     MOVFF     0x2,0xfe6                                                                                       
004fe2   ffe6                                                                                                               
004fe4   ec8c     CALL      0x5918,0x0                                                                                      
004fe6   f02c                                                                                                               
004fe8   6ef5     MOVWF     0xf5,0x0                                                                                        
004fea   0e05     MOVLW     0x5                                                                                             
004fec   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004fee   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Trc2008\terminal.c
                                           		}                                                                              C:\code\2008\Trc2008\terminal.c
                                           	}                                                                               C:\code\2008\Trc2008\terminal.c
004ff0   d016     BRA       0x501e         	else                                                                            C:\code\2008\Trc2008\terminal.c
                                           	{                                                                               C:\code\2008\Trc2008\terminal.c
004ff2   0102     MOVLB     0x2            		j++;                                                                           C:\code\2008\Trc2008\terminal.c
004ff4   2b9d     INCF      0x9d,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\terminal.c
                                           		// display a "no camera data" warning if we haven't received                   C:\code\2008\Trc2008\terminal.c
                                           		// a t-packet in 26 loops, which is about 1 second                             C:\code\2008\Trc2008\terminal.c
004ff6   0e1a     MOVLW     0x1a           		if(j >= 26)                                                                    C:\code\2008\Trc2008\terminal.c
004ff8   5d9d     SUBWF     0x9d,0x0,0x1                                                                                    
004ffa   e311     BNC       0x501e                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\terminal.c
                                           			// reset the "no camera data" loop counter                                    C:\code\2008\Trc2008\terminal.c
004ffc   6b9d     CLRF      0x9d,0x1       			j = 0;                                                                        C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
004ffe   0e06     MOVLW     0x6            			printf("No camera data...\r\n");                                              C:\code\2008\Trc2008\terminal.c
005000   6e00     MOVWF     0x0,0x0                                                                                         
005002   0e54     MOVLW     0x54                                                                                            
005004   6e01     MOVWF     0x1,0x0                                                                                         
005006   6a02     CLRF      0x2,0x0                                                                                         
005008   c000     MOVFF     0x0,0xfe6                                                                                       
00500a   ffe6                                                                                                               
00500c   c001     MOVFF     0x1,0xfe6                                                                                       
00500e   ffe6                                                                                                               
005010   c002     MOVFF     0x2,0xfe6                                                                                       
005012   ffe6                                                                                                               
005014   ec8c     CALL      0x5918,0x0                                                                                      
005016   f02c                                                                                                               
005018   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00501a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00501c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\terminal.c
                                           	}                                                                               C:\code\2008\Trc2008\terminal.c
                                                                                                                            C:\code\2008\Trc2008\terminal.c
00501e   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\terminal.c
                                           /******************************************************************************* C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	TITLE:		tracking.c                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	VERSION:	0.2 (Beta)                                                            C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	DATE:		21-Feb-2006                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\tracking.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	COMMENTS:	This is the "streamlined" version of tracking.c                      C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *				You are free to use this source code for any non-commercial                 C:\code\2008\Trc2008\tracking.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\tracking.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Trc2008\tracking.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *				Copyright ©2005-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           ******************************************************************************** C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\tracking.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\tracking.c
                                           *	01-Jan-2006  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\tracking.c
                                           *	21-Feb-2006  0.2  RKW - Provided two new functions to set the pan and          C:\code\2008\Trc2008\tracking.c
                                           *	                  tilt servo position. This was done to provide a level        C:\code\2008\Trc2008\tracking.c
                                           *	                  of indirection so that the servos could be commanded         C:\code\2008\Trc2008\tracking.c
                                           *	                  from the robot controller or the CMUcam2.                    C:\code\2008\Trc2008\tracking.c
                                           *	                  RKW - Fixed bug in search initialization code where          C:\code\2008\Trc2008\tracking.c
                                           *	                  temp_pan_servo was initialized to zero instead of            C:\code\2008\Trc2008\tracking.c
                                           *	                  Tracking_Config_Data.Pan_Min_PWM.                            C:\code\2008\Trc2008\tracking.c
                                           *	                  RKW - Altered tracking algorithm to use the t-packet         C:\code\2008\Trc2008\tracking.c
                                           *	                  confidence value to determine whether the code should        C:\code\2008\Trc2008\tracking.c
                                           *	                  track or search.                                             C:\code\2008\Trc2008\tracking.c
                                           *	                  RKW - Added Get_Tracking_State() function, which can         C:\code\2008\Trc2008\tracking.c
                                           *	                  be used to determine if the camera is on target.             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\tracking.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\tracking.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\tracking.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\tracking.c
                                           #include "camera.h"                                                              C:\code\2008\Trc2008\tracking.c
                                           #include "tracking.h"                                                            C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           // This variable is used to signal whether or not the camera                     C:\code\2008\Trc2008\tracking.c
                                           // is pointed at the target. See Get_Tracking_State(), below.                    C:\code\2008\Trc2008\tracking.c
                                           unsigned char Tracking_State = STATE_SEARCHING;                                  C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	FUNCTION:		Servo_Track()                                                       C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PURPOSE:		This function reads data placed in the T_Packet_Data                 C:\code\2008\Trc2008\tracking.c
                                           *					structure by the Camera_Handler() function and if new                      C:\code\2008\Trc2008\tracking.c
                                           *					tracking data is available, attempts to keep the center                    C:\code\2008\Trc2008\tracking.c
                                           *					of the tracked object in the center of the camera's                        C:\code\2008\Trc2008\tracking.c
                                           *					image using two servos that drive a pan/tilt platform.                     C:\code\2008\Trc2008\tracking.c
                                           *					If the camera doesn't have the object within it's field                    C:\code\2008\Trc2008\tracking.c
                                           *					of view, this function will execute a search algorithm                     C:\code\2008\Trc2008\tracking.c
                                           *					in an attempt to find the object.		                                        C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	COMMENTS:		This version of the tracking code uses a proportional               C:\code\2008\Trc2008\tracking.c
                                           *					feedback controller to track the object.                                   C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\tracking.c
003812   cfd9     MOVFF     0xfd9,0xfe6    void Servo_Track(void)                                                           C:\code\2008\Trc2008\tracking.c
003814   ffe6                                                                                                               
003816   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003818   ffd9                                                                                                               
00381a   0e0a     MOVLW     0xa                                                                                             
00381c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\tracking.c
                                           	static unsigned char Tracking_Initialized = 0;                                  C:\code\2008\Trc2008\tracking.c
                                           	static unsigned int old_camera_t_packets = 0;                                   C:\code\2008\Trc2008\tracking.c
                                           	static unsigned char new_search = 1;                                            C:\code\2008\Trc2008\tracking.c
                                           	static unsigned char loop_count = 0;                                            C:\code\2008\Trc2008\tracking.c
                                           	static unsigned char pan_servo_position;                                        C:\code\2008\Trc2008\tracking.c
                                           	static unsigned char tilt_servo_position;                                       C:\code\2008\Trc2008\tracking.c
                                           	int temp_pan_servo;                                                             C:\code\2008\Trc2008\tracking.c
                                           	int temp_tilt_servo;                                                            C:\code\2008\Trc2008\tracking.c
                                           	int servo_step;                                                                 C:\code\2008\Trc2008\tracking.c
                                           	int pan_error;                                                                  C:\code\2008\Trc2008\tracking.c
                                           	int tilt_error;                                                                 C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           	// if needed, initialize the tracking code                                      C:\code\2008\Trc2008\tracking.c
00381e   0102     MOVLB     0x2            	if(Tracking_Initialized == 0)                                                   C:\code\2008\Trc2008\tracking.c
003820   5193     MOVF      0x93,0x0,0x1                                                                                    
003822   e10f     BNZ       0x3842                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\tracking.c
003824   0e01     MOVLW     0x1            		Tracking_Initialized = 1;                                                      C:\code\2008\Trc2008\tracking.c
003826   6f93     MOVWF     0x93,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           		// get center values for the servos                                            C:\code\2008\Trc2008\tracking.c
003828   0102     MOVLB     0x2            		pan_servo_position = PAN_CENTER_PWM_DEFAULT;                                   C:\code\2008\Trc2008\tracking.c
00382a   0e7c     MOVLW     0x7c                                                                                            
00382c   6fa4     MOVWF     0xa4,0x1                                                                                        
00382e   0e90     MOVLW     0x90           		tilt_servo_position = TILT_CENTER_PWM_DEFAULT;                                 C:\code\2008\Trc2008\tracking.c
003830   6fa5     MOVWF     0xa5,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           		// command servos to center position                                           C:\code\2008\Trc2008\tracking.c
003832   c2a4     MOVFF     0x2a4,0xfe6    		Set_Pan_Servo_Position(pan_servo_position);                                    C:\code\2008\Trc2008\tracking.c
003834   ffe6                                                                                                               
003836   da39     RCALL     0x3caa                                                                                          
003838   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00383a   c2a5     MOVFF     0x2a5,0xfe6    		Set_Tilt_Servo_Position(tilt_servo_position);                                  C:\code\2008\Trc2008\tracking.c
00383c   ffe6                                                                                                               
00383e   da40     RCALL     0x3cc0                                                                                          
003840   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           	// Has a new camera t-packet arrived since we last checked?                     C:\code\2008\Trc2008\tracking.c
003842   0102     MOVLB     0x2            	if(camera_t_packets != old_camera_t_packets)                                    C:\code\2008\Trc2008\tracking.c
003844   5194     MOVF      0x94,0x0,0x1                                                                                    
003846   0102     MOVLB     0x2                                                                                             
003848   1980     XORWF     0x80,0x0,0x1                                                                                    
00384a   e104     BNZ       0x3854                                                                                          
00384c   0102     MOVLB     0x2                                                                                             
00384e   5195     MOVF      0x95,0x0,0x1                                                                                    
003850   0102     MOVLB     0x2                                                                                             
003852   1981     XORWF     0x81,0x0,0x1                                                                                    
003854   e101     BNZ       0x3858                                                                                          
003856   d207     BRA       0x3c66                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\tracking.c
003858   c280     MOVFF     0x280,0x294    		old_camera_t_packets = camera_t_packets;                                       C:\code\2008\Trc2008\tracking.c
00385a   f294                                                                                                               
00385c   c281     MOVFF     0x281,0x295                                                                                     
00385e   f295                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           		// Reset the Tracking_State variable to indicate that                          C:\code\2008\Trc2008\tracking.c
                                           		// we're in the searching state. If it turns out the                           C:\code\2008\Trc2008\tracking.c
                                           		// target is in view, Tracking_State will be updated                           C:\code\2008\Trc2008\tracking.c
                                           		// to reflect this below.                                                      C:\code\2008\Trc2008\tracking.c
003860   0102     MOVLB     0x2            		Tracking_State = SEARCHING;                                                    C:\code\2008\Trc2008\tracking.c
003862   6b92     CLRF      0x92,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           		// Does the camera have a tracking solution? If so,                            C:\code\2008\Trc2008\tracking.c
                                           		// do we need to move the servos to keep the center                            C:\code\2008\Trc2008\tracking.c
                                           		// of the tracked object centered within the image?                            C:\code\2008\Trc2008\tracking.c
                                           		// If not, we need to drop down below to start or                              C:\code\2008\Trc2008\tracking.c
                                           		// continue a search.                                                          C:\code\2008\Trc2008\tracking.c
003864   0e14     MOVLW     0x14           		if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT)                   C:\code\2008\Trc2008\tracking.c
003866   0102     MOVLB     0x2                                                                                             
003868   5d07     SUBWF     0x7,0x0,0x1                                                                                     
00386a   e201     BC        0x386e                                                                                          
00386c   d176     BRA       0x3b5a                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\tracking.c
                                           			// if we're tracking, reset the search                                        C:\code\2008\Trc2008\tracking.c
                                           			// algorithm so that a new search pattern                                     C:\code\2008\Trc2008\tracking.c
                                           			// will start should we lose tracking lock                                    C:\code\2008\Trc2008\tracking.c
00386e   0102     MOVLB     0x2            			new_search = 1;                                                               C:\code\2008\Trc2008\tracking.c
003870   0e01     MOVLW     0x1                                                                                             
003872   6f96     MOVWF     0x96,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// update Tracking_State to indicate that the target                          C:\code\2008\Trc2008\tracking.c
                                           			// is at least in view of the camera                                          C:\code\2008\Trc2008\tracking.c
003874   6f92     MOVWF     0x92,0x1       			Tracking_State = TARGET_IN_VIEW;                                              C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			////////////////////////////////                                              C:\code\2008\Trc2008\tracking.c
                                           			//                            //                                              C:\code\2008\Trc2008\tracking.c
                                           			//	x-axis/pan tracking code  //                                               C:\code\2008\Trc2008\tracking.c
                                           			//                            //                                              C:\code\2008\Trc2008\tracking.c
                                           			////////////////////////////////                                              C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// save the current pan servo PWM value into a local                          C:\code\2008\Trc2008\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\code\2008\Trc2008\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\code\2008\Trc2008\tracking.c
                                           			// the pan servo PWM value with a new value                                   C:\code\2008\Trc2008\tracking.c
003876   0102     MOVLB     0x2            			temp_pan_servo = (int)pan_servo_position;                                     C:\code\2008\Trc2008\tracking.c
003878   51a4     MOVF      0xa4,0x0,0x1                                                                                    
00387a   6ede     MOVWF     0xde,0x0                                                                                        
00387c   6add     CLRF      0xdd,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\code\2008\Trc2008\tracking.c
                                           			// vertical center line.                                                      C:\code\2008\Trc2008\tracking.c
00387e   0102     MOVLB     0x2            			pan_error = (int)T_Packet_Data.mx - PAN_TARGET_PIXEL_DEFAULT;                 C:\code\2008\Trc2008\tracking.c
003880   5100     MOVF      0x0,0x0,0x1                                                                                     
003882   6e00     MOVWF     0x0,0x0                                                                                         
003884   6a01     CLRF      0x1,0x0                                                                                         
003886   0e4f     MOVLW     0x4f                                                                                            
003888   5e00     SUBWF     0x0,0x1,0x0                                                                                     
00388a   0e00     MOVLW     0x0                                                                                             
00388c   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
00388e   0e06     MOVLW     0x6                                                                                             
003890   c000     MOVFF     0x0,0xfdb                                                                                       
003892   ffdb                                                                                                               
003894   0e07     MOVLW     0x7                                                                                             
003896   c001     MOVFF     0x1,0xfdb                                                                                       
003898   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// Are we too far to the left or right of the vertical                        C:\code\2008\Trc2008\tracking.c
                                           			// center line? If so, calculate how far we should step                       C:\code\2008\Trc2008\tracking.c
                                           			// the pan servo to reduce the error.                                         C:\code\2008\Trc2008\tracking.c
00389a   0e06     MOVLW     0x6            			if(pan_error > PAN_ALLOWABLE_ERROR_DEFAULT)                                   C:\code\2008\Trc2008\tracking.c
00389c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00389e   f000                                                                                                               
0038a0   0e07     MOVLW     0x7                                                                                             
0038a2   cfdb     MOVFF     0xfdb,0x1                                                                                       
0038a4   f001                                                                                                               
0038a6   3401     RLCF      0x1,0x0,0x0                                                                                     
0038a8   e204     BC        0x38b2                                                                                          
0038aa   5000     MOVF      0x0,0x0,0x0                                                                                     
0038ac   0806     SUBLW     0x6                                                                                             
0038ae   0e00     MOVLW     0x0                                                                                             
0038b0   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0038b2   e225     BC        0x38fe                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\code\2008\Trc2008\tracking.c
0038b4   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\code\2008\Trc2008\tracking.c
0038b6   6e00     MOVWF     0x0,0x0                                                                                         
0038b8   6a01     CLRF      0x1,0x0                                                                                         
0038ba   0e06     MOVLW     0x6                                                                                             
0038bc   cfdb     MOVFF     0xfdb,0x41                                                                                      
0038be   f041                                                                                                               
0038c0   0e07     MOVLW     0x7                                                                                             
0038c2   cfdb     MOVFF     0xfdb,0x42                                                                                      
0038c4   f042                                                                                                               
0038c6   c000     MOVFF     0x0,0x46                                                                                        
0038c8   f046                                                                                                               
0038ca   c001     MOVFF     0x1,0x47                                                                                        
0038cc   f047                                                                                                               
0038ce   ec3c     CALL      0x3e78,0x0                                                                                      
0038d0   f01f                                                                                                               
0038d2   0e04     MOVLW     0x4                                                                                             
0038d4   c041     MOVFF     0x41,0xfdb                                                                                      
0038d6   ffdb                                                                                                               
0038d8   0e05     MOVLW     0x5                                                                                             
0038da   c042     MOVFF     0x42,0xfdb                                                                                      
0038dc   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Trc2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Trc2008\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\code\2008\Trc2008\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\code\2008\Trc2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Trc2008\tracking.c
0038de   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Trc2008\tracking.c
0038e0   0f04     ADDLW     0x4                                                                                             
0038e2   6ee9     MOVWF     0xe9,0x0                                                                                        
0038e4   cfda     MOVFF     0xfda,0xfea                                                                                     
0038e6   ffea                                                                                                               
0038e8   50ee     MOVF      0xee,0x0,0x0                                                                                    
0038ea   10ed     IORWF     0xed,0x0,0x0                                                                                    
0038ec   e107     BNZ       0x38fc                                                                                          
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
0038ee   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\code\2008\Trc2008\tracking.c
0038f0   6ef3     MOVWF     0xf3,0x0                                                                                        
0038f2   0e04     MOVLW     0x4                                                                                             
0038f4   cff3     MOVFF     0xff3,0xfdb                                                                                     
0038f6   ffdb                                                                                                               
0038f8   0e05     MOVLW     0x5                                                                                             
0038fa   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
0038fc   d037     BRA       0x396c         			else if(pan_error < -1 * PAN_ALLOWABLE_ERROR_DEFAULT)                         C:\code\2008\Trc2008\tracking.c
0038fe   0e06     MOVLW     0x6                                                                                             
003900   cfdb     MOVFF     0xfdb,0x0                                                                                       
003902   f000                                                                                                               
003904   0e07     MOVLW     0x7                                                                                             
003906   cfdb     MOVFF     0xfdb,0x1                                                                                       
003908   f001                                                                                                               
00390a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00390c   5001     MOVF      0x1,0x0,0x0                                                                                     
00390e   e704     BNN       0x3918                                                                                          
003910   0efa     MOVLW     0xfa                                                                                            
003912   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003914   0eff     MOVLW     0xff                                                                                            
003916   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003918   e222     BC        0x395e                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// calculate how far we need to step the pan servo                           C:\code\2008\Trc2008\tracking.c
00391a   0e03     MOVLW     0x3            				servo_step = pan_error / PAN_GAIN_DEFAULT;                                   C:\code\2008\Trc2008\tracking.c
00391c   6e00     MOVWF     0x0,0x0                                                                                         
00391e   6a01     CLRF      0x1,0x0                                                                                         
003920   0e06     MOVLW     0x6                                                                                             
003922   cfdb     MOVFF     0xfdb,0x41                                                                                      
003924   f041                                                                                                               
003926   0e07     MOVLW     0x7                                                                                             
003928   cfdb     MOVFF     0xfdb,0x42                                                                                      
00392a   f042                                                                                                               
00392c   c000     MOVFF     0x0,0x46                                                                                        
00392e   f046                                                                                                               
003930   c001     MOVFF     0x1,0x47                                                                                        
003932   f047                                                                                                               
003934   ec3c     CALL      0x3e78,0x0                                                                                      
003936   f01f                                                                                                               
003938   0e04     MOVLW     0x4                                                                                             
00393a   c041     MOVFF     0x41,0xfdb                                                                                      
00393c   ffdb                                                                                                               
00393e   0e05     MOVLW     0x5                                                                                             
003940   c042     MOVFF     0x42,0xfdb                                                                                      
003942   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Trc2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Trc2008\tracking.c
                                           				// impossible to converge on the target when pan_error is                    C:\code\2008\Trc2008\tracking.c
                                           				// smaller than PAN_GAIN_DEFAULT. To get around this problem,                C:\code\2008\Trc2008\tracking.c
                                           				// we just test for the zero case and set the step size to one               C:\code\2008\Trc2008\tracking.c
003944   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Trc2008\tracking.c
003946   0f04     ADDLW     0x4                                                                                             
003948   6ee9     MOVWF     0xe9,0x0                                                                                        
00394a   cfda     MOVFF     0xfda,0xfea                                                                                     
00394c   ffea                                                                                                               
00394e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003950   10ed     IORWF     0xed,0x0,0x0                                                                                    
003952   e104     BNZ       0x395c                                                                                          
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
003954   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\code\2008\Trc2008\tracking.c
003956   68db     SETF      0xdb,0x0                                                                                        
003958   0e05     MOVLW     0x5                                                                                             
00395a   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
00395c   d007     BRA       0x396c         			else                                                                          C:\code\2008\Trc2008\tracking.c
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\code\2008\Trc2008\tracking.c
                                           				// neither too far to the left or too far to the right                       C:\code\2008\Trc2008\tracking.c
                                           				// of the vertical center line of the image and don't                        C:\code\2008\Trc2008\tracking.c
                                           				// need to move the servo                                                    C:\code\2008\Trc2008\tracking.c
00395e   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\code\2008\Trc2008\tracking.c
003960   6adb     CLRF      0xdb,0x0                                                                                        
003962   0e05     MOVLW     0x5                                                                                             
003964   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// signal that the pan servo is on target                                    C:\code\2008\Trc2008\tracking.c
003966   0e02     MOVLW     0x2            				Tracking_State += STATE_PAN_ON_TARGET;                                       C:\code\2008\Trc2008\tracking.c
003968   0102     MOVLB     0x2                                                                                             
00396a   2792     ADDWF     0x92,0x1,0x1                                                                                    
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\code\2008\Trc2008\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\code\2008\Trc2008\tracking.c
00396c   6841     SETF      0x41,0x0       			temp_pan_servo += (PAN_ROTATION_SIGN_DEFAULT * servo_step);                   C:\code\2008\Trc2008\tracking.c
00396e   6842     SETF      0x42,0x0                                                                                        
003970   0e04     MOVLW     0x4                                                                                             
003972   cfdb     MOVFF     0xfdb,0x46                                                                                      
003974   f046                                                                                                               
003976   0e05     MOVLW     0x5                                                                                             
003978   cfdb     MOVFF     0xfdb,0x47                                                                                      
00397a   f047                                                                                                               
00397c   ec96     CALL      0x3f2c,0x0                                                                                      
00397e   f01f                                                                                                               
003980   c03f     MOVFF     0x3f,0x0                                                                                        
003982   f000                                                                                                               
003984   c040     MOVFF     0x40,0x1                                                                                        
003986   f001                                                                                                               
003988   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
00398a   ffe9                                                                                                               
00398c   cfda     MOVFF     0xfda,0xfea                                                                                     
00398e   ffea                                                                                                               
003990   5000     MOVF      0x0,0x0,0x0                                                                                     
003992   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003994   5001     MOVF      0x1,0x0,0x0                                                                                     
003996   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// check the pan servo PWM value for under/overflow                           C:\code\2008\Trc2008\tracking.c
003998   cfde     MOVFF     0xfde,0x0      			if(temp_pan_servo < PAN_MIN_PWM_DEFAULT)                                      C:\code\2008\Trc2008\tracking.c
00399a   f000                                                                                                               
00399c   cfdd     MOVFF     0xfdd,0x1                                                                                       
00399e   f001                                                                                                               
0039a0   0100     MOVLB     0x0                                                                                             
0039a2   0e80     MOVLW     0x80                                                                                            
0039a4   1401     ANDWF     0x1,0x0,0x0                                                                                     
0039a6   e003     BZ        0x39ae                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
0039a8   6ade     CLRF      0xde,0x0       				temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                        C:\code\2008\Trc2008\tracking.c
0039aa   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
0039ac   d00e     BRA       0x39ca         			else if(temp_pan_servo > PAN_MAX_PWM_DEFAULT)                                 C:\code\2008\Trc2008\tracking.c
0039ae   cfde     MOVFF     0xfde,0x0                                                                                       
0039b0   f000                                                                                                               
0039b2   cfdd     MOVFF     0xfdd,0x1                                                                                       
0039b4   f001                                                                                                               
0039b6   3401     RLCF      0x1,0x0,0x0                                                                                     
0039b8   e204     BC        0x39c2                                                                                          
0039ba   5000     MOVF      0x0,0x0,0x0                                                                                     
0039bc   08f8     SUBLW     0xf8                                                                                            
0039be   0e00     MOVLW     0x0                                                                                             
0039c0   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0039c2   e203     BC        0x39ca                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
0039c4   0ef8     MOVLW     0xf8           				temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                        C:\code\2008\Trc2008\tracking.c
0039c6   6ede     MOVWF     0xde,0x0                                                                                        
0039c8   6add     CLRF      0xdd,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
0039ca   cfdf     MOVFF     0xfdf,0x2a4    			pan_servo_position = (unsigned char)temp_pan_servo;                           C:\code\2008\Trc2008\tracking.c
0039cc   f2a4                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// update pan servo PWM value                                                 C:\code\2008\Trc2008\tracking.c
0039ce   c2a4     MOVFF     0x2a4,0xfe6    			Set_Pan_Servo_Position(pan_servo_position);                                   C:\code\2008\Trc2008\tracking.c
0039d0   ffe6                                                                                                               
0039d2   d96b     RCALL     0x3caa                                                                                          
0039d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			/////////////////////////////////                                             C:\code\2008\Trc2008\tracking.c
                                           			//                             //                                             C:\code\2008\Trc2008\tracking.c
                                           			//	y-axis/tilt tracking code  //                                              C:\code\2008\Trc2008\tracking.c
                                           			//                             //                                             C:\code\2008\Trc2008\tracking.c
                                           			/////////////////////////////////                                             C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// save the current tilt servo PWM value into a local                         C:\code\2008\Trc2008\tracking.c
                                           			// integer variable so that we can detect and correct                         C:\code\2008\Trc2008\tracking.c
                                           			// underflow and overflow conditions before we update                         C:\code\2008\Trc2008\tracking.c
                                           			// the tilt servo PWM value with a new value                                  C:\code\2008\Trc2008\tracking.c
0039d6   0102     MOVLB     0x2            			temp_tilt_servo = (int)tilt_servo_position;                                   C:\code\2008\Trc2008\tracking.c
0039d8   51a5     MOVF      0xa5,0x0,0x1                                                                                    
0039da   6ee6     MOVWF     0xe6,0x0                                                                                        
0039dc   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0039de   0f02     ADDLW     0x2                                                                                             
0039e0   6ee9     MOVWF     0xe9,0x0                                                                                        
0039e2   cfda     MOVFF     0xfda,0xfea                                                                                     
0039e4   ffea                                                                                                               
0039e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0039e8   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0039ea   6eee     MOVWF     0xee,0x0                                                                                        
0039ec   6aed     CLRF      0xed,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// calculate how many image pixels we're away from the                        C:\code\2008\Trc2008\tracking.c
                                           			// horizontal center line.                                                    C:\code\2008\Trc2008\tracking.c
0039ee   0102     MOVLB     0x2            			tilt_error = (int)T_Packet_Data.my - TILT_TARGET_PIXEL_DEFAULT;               C:\code\2008\Trc2008\tracking.c
0039f0   5101     MOVF      0x1,0x0,0x1                                                                                     
0039f2   6e00     MOVWF     0x0,0x0                                                                                         
0039f4   6a01     CLRF      0x1,0x0                                                                                         
0039f6   0e77     MOVLW     0x77                                                                                            
0039f8   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0039fa   0e00     MOVLW     0x0                                                                                             
0039fc   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0039fe   0e08     MOVLW     0x8                                                                                             
003a00   c000     MOVFF     0x0,0xfdb                                                                                       
003a02   ffdb                                                                                                               
003a04   0e09     MOVLW     0x9                                                                                             
003a06   c001     MOVFF     0x1,0xfdb                                                                                       
003a08   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// Are we too far above or below the horizontal center line?                  C:\code\2008\Trc2008\tracking.c
                                           			// If so, calculate how far we should step the tilt servo to                  C:\code\2008\Trc2008\tracking.c
                                           			// reduce the error.                                                          C:\code\2008\Trc2008\tracking.c
003a0a   0e08     MOVLW     0x8            			if(tilt_error > TILT_ALLOWABLE_ERROR_DEFAULT)                                 C:\code\2008\Trc2008\tracking.c
003a0c   cfdb     MOVFF     0xfdb,0x0                                                                                       
003a0e   f000                                                                                                               
003a10   0e09     MOVLW     0x9                                                                                             
003a12   cfdb     MOVFF     0xfdb,0x1                                                                                       
003a14   f001                                                                                                               
003a16   3401     RLCF      0x1,0x0,0x0                                                                                     
003a18   e204     BC        0x3a22                                                                                          
003a1a   5000     MOVF      0x0,0x0,0x0                                                                                     
003a1c   0806     SUBLW     0x6                                                                                             
003a1e   0e00     MOVLW     0x0                                                                                             
003a20   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003a22   e224     BC        0x3a6c                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\code\2008\Trc2008\tracking.c
003a24   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\code\2008\Trc2008\tracking.c
003a26   6e00     MOVWF     0x0,0x0                                                                                         
003a28   6a01     CLRF      0x1,0x0                                                                                         
003a2a   cfdb     MOVFF     0xfdb,0x41                                                                                      
003a2c   f041                                                                                                               
003a2e   0e09     MOVLW     0x9                                                                                             
003a30   cfdb     MOVFF     0xfdb,0x42                                                                                      
003a32   f042                                                                                                               
003a34   c000     MOVFF     0x0,0x46                                                                                        
003a36   f046                                                                                                               
003a38   c001     MOVFF     0x1,0x47                                                                                        
003a3a   f047                                                                                                               
003a3c   ec3c     CALL      0x3e78,0x0                                                                                      
003a3e   f01f                                                                                                               
003a40   0e04     MOVLW     0x4                                                                                             
003a42   c041     MOVFF     0x41,0xfdb                                                                                      
003a44   ffdb                                                                                                               
003a46   0e05     MOVLW     0x5                                                                                             
003a48   c042     MOVFF     0x42,0xfdb                                                                                      
003a4a   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Trc2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Trc2008\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\code\2008\Trc2008\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\code\2008\Trc2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Trc2008\tracking.c
003a4c   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Trc2008\tracking.c
003a4e   0f04     ADDLW     0x4                                                                                             
003a50   6ee9     MOVWF     0xe9,0x0                                                                                        
003a52   cfda     MOVFF     0xfda,0xfea                                                                                     
003a54   ffea                                                                                                               
003a56   50ee     MOVF      0xee,0x0,0x0                                                                                    
003a58   10ed     IORWF     0xed,0x0,0x0                                                                                    
003a5a   e107     BNZ       0x3a6a                                                                                          
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
003a5c   0e01     MOVLW     0x1            					servo_step = 1;                                                             C:\code\2008\Trc2008\tracking.c
003a5e   6ef3     MOVWF     0xf3,0x0                                                                                        
003a60   0e04     MOVLW     0x4                                                                                             
003a62   cff3     MOVFF     0xff3,0xfdb                                                                                     
003a64   ffdb                                                                                                               
003a66   0e05     MOVLW     0x5                                                                                             
003a68   6adb     CLRF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
003a6a   d036     BRA       0x3ad8         			else if (tilt_error < -1 * TILT_ALLOWABLE_ERROR_DEFAULT)                      C:\code\2008\Trc2008\tracking.c
003a6c   0e08     MOVLW     0x8                                                                                             
003a6e   cfdb     MOVFF     0xfdb,0x0                                                                                       
003a70   f000                                                                                                               
003a72   0e09     MOVLW     0x9                                                                                             
003a74   cfdb     MOVFF     0xfdb,0x1                                                                                       
003a76   f001                                                                                                               
003a78   80d8     BSF       0xd8,0x0,0x0                                                                                    
003a7a   5001     MOVF      0x1,0x0,0x0                                                                                     
003a7c   e704     BNN       0x3a86                                                                                          
003a7e   0efa     MOVLW     0xfa                                                                                            
003a80   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003a82   0eff     MOVLW     0xff                                                                                            
003a84   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003a86   e221     BC        0x3aca                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// calculate how far we need to step the tilt servo                          C:\code\2008\Trc2008\tracking.c
003a88   0e08     MOVLW     0x8            				servo_step = tilt_error / TILT_GAIN_DEFAULT;                                 C:\code\2008\Trc2008\tracking.c
003a8a   6e00     MOVWF     0x0,0x0                                                                                         
003a8c   6a01     CLRF      0x1,0x0                                                                                         
003a8e   cfdb     MOVFF     0xfdb,0x41                                                                                      
003a90   f041                                                                                                               
003a92   0e09     MOVLW     0x9                                                                                             
003a94   cfdb     MOVFF     0xfdb,0x42                                                                                      
003a96   f042                                                                                                               
003a98   c000     MOVFF     0x0,0x46                                                                                        
003a9a   f046                                                                                                               
003a9c   c001     MOVFF     0x1,0x47                                                                                        
003a9e   f047                                                                                                               
003aa0   ec3c     CALL      0x3e78,0x0                                                                                      
003aa2   f01f                                                                                                               
003aa4   0e04     MOVLW     0x4                                                                                             
003aa6   c041     MOVFF     0x41,0xfdb                                                                                      
003aa8   ffdb                                                                                                               
003aaa   0e05     MOVLW     0x5                                                                                             
003aac   c042     MOVFF     0x42,0xfdb                                                                                      
003aae   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// Due to rounding error in the division calculation above,                  C:\code\2008\Trc2008\tracking.c
                                           				// the step may be calculated as zero, which will make it                    C:\code\2008\Trc2008\tracking.c
                                           				// impossible to converge on the target when tilt_error is                   C:\code\2008\Trc2008\tracking.c
                                           				// smaller than TILT_GAIN_DEFAULT. To get around this problem,               C:\code\2008\Trc2008\tracking.c
                                           				// we just test for the zero case and set the step size to one.              C:\code\2008\Trc2008\tracking.c
003ab0   50d9     MOVF      0xd9,0x0,0x0   				if(servo_step == 0)                                                          C:\code\2008\Trc2008\tracking.c
003ab2   0f04     ADDLW     0x4                                                                                             
003ab4   6ee9     MOVWF     0xe9,0x0                                                                                        
003ab6   cfda     MOVFF     0xfda,0xfea                                                                                     
003ab8   ffea                                                                                                               
003aba   50ee     MOVF      0xee,0x0,0x0                                                                                    
003abc   10ed     IORWF     0xed,0x0,0x0                                                                                    
003abe   e104     BNZ       0x3ac8                                                                                          
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
003ac0   0e04     MOVLW     0x4            					servo_step = -1;                                                            C:\code\2008\Trc2008\tracking.c
003ac2   68db     SETF      0xdb,0x0                                                                                        
003ac4   0e05     MOVLW     0x5                                                                                             
003ac6   68db     SETF      0xdb,0x0                                                                                        
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
003ac8   d007     BRA       0x3ad8         			else                                                                          C:\code\2008\Trc2008\tracking.c
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// if we've fallen through to here, it means that we're                      C:\code\2008\Trc2008\tracking.c
                                           				// neither too far below or to far above the horizontal                      C:\code\2008\Trc2008\tracking.c
                                           				// center line of the image and don't need to move the                       C:\code\2008\Trc2008\tracking.c
                                           				// servo                                                                     C:\code\2008\Trc2008\tracking.c
003aca   0e04     MOVLW     0x4            				servo_step = 0;                                                              C:\code\2008\Trc2008\tracking.c
003acc   6adb     CLRF      0xdb,0x0                                                                                        
003ace   0e05     MOVLW     0x5                                                                                             
003ad0   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// signal that the tilt servo is on target                                   C:\code\2008\Trc2008\tracking.c
003ad2   0e04     MOVLW     0x4            				Tracking_State += STATE_TILT_ON_TARGET;                                      C:\code\2008\Trc2008\tracking.c
003ad4   0102     MOVLB     0x2                                                                                             
003ad6   2792     ADDWF     0x92,0x1,0x1                                                                                    
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// add the step to the current servo position, taking into                    C:\code\2008\Trc2008\tracking.c
                                           			// account the direction set by the user in tracking.h                        C:\code\2008\Trc2008\tracking.c
003ad8   0e04     MOVLW     0x4            			temp_tilt_servo += (TILT_ROTATION_SIGN_DEFAULT * servo_step);                 C:\code\2008\Trc2008\tracking.c
003ada   cfdb     MOVFF     0xfdb,0x0                                                                                       
003adc   f000                                                                                                               
003ade   0e05     MOVLW     0x5                                                                                             
003ae0   cfdb     MOVFF     0xfdb,0x1                                                                                       
003ae2   f001                                                                                                               
003ae4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ae6   0f02     ADDLW     0x2                                                                                             
003ae8   6ee9     MOVWF     0xe9,0x0                                                                                        
003aea   cfda     MOVFF     0xfda,0xfea                                                                                     
003aec   ffea                                                                                                               
003aee   5000     MOVF      0x0,0x0,0x0                                                                                     
003af0   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003af2   5001     MOVF      0x1,0x0,0x0                                                                                     
003af4   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// check the tilt PWM value for under/overflow                                C:\code\2008\Trc2008\tracking.c
003af6   0e02     MOVLW     0x2            			if(temp_tilt_servo < TILT_MIN_PWM_DEFAULT)                                    C:\code\2008\Trc2008\tracking.c
003af8   cfdb     MOVFF     0xfdb,0x0                                                                                       
003afa   f000                                                                                                               
003afc   0e03     MOVLW     0x3                                                                                             
003afe   cfdb     MOVFF     0xfdb,0x1                                                                                       
003b00   f001                                                                                                               
003b02   90d8     BCF       0xd8,0x0,0x0                                                                                    
003b04   5001     MOVF      0x1,0x0,0x0                                                                                     
003b06   e604     BN        0x3b10                                                                                          
003b08   0e5e     MOVLW     0x5e                                                                                            
003b0a   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003b0c   0e00     MOVLW     0x0                                                                                             
003b0e   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003b10   e208     BC        0x3b22                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
003b12   0e5e     MOVLW     0x5e           				temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                      C:\code\2008\Trc2008\tracking.c
003b14   6ef3     MOVWF     0xf3,0x0                                                                                        
003b16   0e02     MOVLW     0x2                                                                                             
003b18   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b1a   ffdb                                                                                                               
003b1c   0e03     MOVLW     0x3                                                                                             
003b1e   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
003b20   d014     BRA       0x3b4a         			else if(temp_tilt_servo > TILT_MAX_PWM_DEFAULT)                               C:\code\2008\Trc2008\tracking.c
003b22   0e02     MOVLW     0x2                                                                                             
003b24   cfdb     MOVFF     0xfdb,0x0                                                                                       
003b26   f000                                                                                                               
003b28   0e03     MOVLW     0x3                                                                                             
003b2a   cfdb     MOVFF     0xfdb,0x1                                                                                       
003b2c   f001                                                                                                               
003b2e   3401     RLCF      0x1,0x0,0x0                                                                                     
003b30   e204     BC        0x3b3a                                                                                          
003b32   5000     MOVF      0x0,0x0,0x0                                                                                     
003b34   08c2     SUBLW     0xc2                                                                                            
003b36   0e00     MOVLW     0x0                                                                                             
003b38   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003b3a   e207     BC        0x3b4a                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
003b3c   0ec2     MOVLW     0xc2           				temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                      C:\code\2008\Trc2008\tracking.c
003b3e   6ef3     MOVWF     0xf3,0x0                                                                                        
003b40   0e02     MOVLW     0x2                                                                                             
003b42   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b44   ffdb                                                                                                               
003b46   0e03     MOVLW     0x3                                                                                             
003b48   6adb     CLRF      0xdb,0x0                                                                                        
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
003b4a   0e02     MOVLW     0x2            			tilt_servo_position = (unsigned char)temp_tilt_servo;                         C:\code\2008\Trc2008\tracking.c
003b4c   cfdb     MOVFF     0xfdb,0x2a5                                                                                     
003b4e   f2a5                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// update tilt servo PWM value                                                C:\code\2008\Trc2008\tracking.c
003b50   c2a5     MOVFF     0x2a5,0xfe6    			Set_Tilt_Servo_Position(tilt_servo_position);                                 C:\code\2008\Trc2008\tracking.c
003b52   ffe6                                                                                                               
003b54   d8b5     RCALL     0x3cc0                                                                                          
003b56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\tracking.c
003b58   d086     BRA       0x3c66         		else // matching else to if(T_Packet_Data.confidence >= CONFIDENCE_THRESHOLD_DEFAULT) above C:\code\2008\Trc2008\tracking.c
                                           		{                                                                              C:\code\2008\Trc2008\tracking.c
                                           			///////////////////                                                           C:\code\2008\Trc2008\tracking.c
                                           			//               //                                                           C:\code\2008\Trc2008\tracking.c
                                           			//  search code  //                                                           C:\code\2008\Trc2008\tracking.c
                                           			//               //                                                           C:\code\2008\Trc2008\tracking.c
                                           			///////////////////                                                           C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           			// To provide a delay for the camera to lock onto the                         C:\code\2008\Trc2008\tracking.c
                                           			// target between position changes, we only step the camera                   C:\code\2008\Trc2008\tracking.c
                                           			// to a new position every SEARCH_DELAY times while we're                     C:\code\2008\Trc2008\tracking.c
                                           			// in search mode. SEARCH_DELAY_DEFAULT is #define'd in                       C:\code\2008\Trc2008\tracking.c
                                           			// tracking.h                                                                 C:\code\2008\Trc2008\tracking.c
003b5a   0102     MOVLB     0x2            			loop_count++;                                                                 C:\code\2008\Trc2008\tracking.c
003b5c   2b97     INCF      0x97,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\tracking.c
003b5e   5197     MOVF      0x97,0x0,0x1   			if(loop_count > SEARCH_DELAY_DEFAULT)                                         C:\code\2008\Trc2008\tracking.c
003b60   0806     SUBLW     0x6                                                                                             
003b62   e301     BNC       0x3b66                                                                                          
003b64   d080     BRA       0x3c66                                                                                          
                                           			{                                                                             C:\code\2008\Trc2008\tracking.c
                                           				// reset the loop counter                                                    C:\code\2008\Trc2008\tracking.c
003b66   6b97     CLRF      0x97,0x1       				loop_count = 0;                                                              C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// If we're starting a new search, initialize the pan                        C:\code\2008\Trc2008\tracking.c
                                           				// and tilt servos to the search starting point.                             C:\code\2008\Trc2008\tracking.c
                                           				// Otherwise, just continue the search pattern from                          C:\code\2008\Trc2008\tracking.c
                                           				// where we left off. The variable new_search is reset                       C:\code\2008\Trc2008\tracking.c
                                           				// to one each time the tracking code (above) executes.                      C:\code\2008\Trc2008\tracking.c
003b68   0596     DECF      0x96,0x0,0x1   				if(new_search == 1)                                                          C:\code\2008\Trc2008\tracking.c
003b6a   e10b     BNZ       0x3b82                                                                                          
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
003b6c   6b96     CLRF      0x96,0x1       					new_search = 0;                                                             C:\code\2008\Trc2008\tracking.c
003b6e   6ade     CLRF      0xde,0x0       					temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                       C:\code\2008\Trc2008\tracking.c
003b70   6add     CLRF      0xdd,0x0                                                                                        
003b72   0e90     MOVLW     0x90           					temp_tilt_servo = TILT_CENTER_PWM_DEFAULT;                                  C:\code\2008\Trc2008\tracking.c
003b74   6ef3     MOVWF     0xf3,0x0                                                                                        
003b76   0e02     MOVLW     0x2                                                                                             
003b78   cff3     MOVFF     0xff3,0xfdb                                                                                     
003b7a   ffdb                                                                                                               
003b7c   0e03     MOVLW     0x3                                                                                             
003b7e   6adb     CLRF      0xdb,0x0                                                                                        
                                           										                                                                       C:\code\2008\Trc2008\tracking.c
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
003b80   d065     BRA       0x3c4c         				else                                                                         C:\code\2008\Trc2008\tracking.c
                                           				{                                                                            C:\code\2008\Trc2008\tracking.c
                                           					// calculate new servo position(s) based upon our                           C:\code\2008\Trc2008\tracking.c
                                           					// current servo position(s)                                                C:\code\2008\Trc2008\tracking.c
003b82   0102     MOVLB     0x2            					temp_pan_servo = (int)pan_servo_position;                                   C:\code\2008\Trc2008\tracking.c
003b84   51a4     MOVF      0xa4,0x0,0x1                                                                                    
003b86   6ede     MOVWF     0xde,0x0                                                                                        
003b88   6add     CLRF      0xdd,0x0                                                                                        
003b8a   51a5     MOVF      0xa5,0x0,0x1   					temp_tilt_servo = (int)tilt_servo_position;                                 C:\code\2008\Trc2008\tracking.c
003b8c   6ee6     MOVWF     0xe6,0x0                                                                                        
003b8e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003b90   0f02     ADDLW     0x2                                                                                             
003b92   6ee9     MOVWF     0xe9,0x0                                                                                        
003b94   cfda     MOVFF     0xfda,0xfea                                                                                     
003b96   ffea                                                                                                               
003b98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b9a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
003b9c   6eee     MOVWF     0xee,0x0                                                                                        
003b9e   6aed     CLRF      0xed,0x0                                                                                        
                                           	                                                                                C:\code\2008\Trc2008\tracking.c
                                           					// if the pan servo is at the end of its travel,                            C:\code\2008\Trc2008\tracking.c
                                           					// send it back to the start and step the tilt                              C:\code\2008\Trc2008\tracking.c
                                           					// servo to its next position                                               C:\code\2008\Trc2008\tracking.c
003ba0   cfde     MOVFF     0xfde,0x0      					if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                   C:\code\2008\Trc2008\tracking.c
003ba2   f000                                                                                                               
003ba4   cfdd     MOVFF     0xfdd,0x1                                                                                       
003ba6   f001                                                                                                               
003ba8   90d8     BCF       0xd8,0x0,0x0                                                                                    
003baa   5001     MOVF      0x1,0x0,0x0                                                                                     
003bac   e604     BN        0x3bb6                                                                                          
003bae   0ef8     MOVLW     0xf8                                                                                            
003bb0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003bb2   0e00     MOVLW     0x0                                                                                             
003bb4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003bb6   e337     BNC       0x3c26                                                                                          
                                           					{                                                                           C:\code\2008\Trc2008\tracking.c
003bb8   6ade     CLRF      0xde,0x0       						temp_pan_servo = PAN_MIN_PWM_DEFAULT;                                      C:\code\2008\Trc2008\tracking.c
003bba   6add     CLRF      0xdd,0x0                                                                                        
                                           		                                                                               C:\code\2008\Trc2008\tracking.c
                                           						// if the tilt servo is at the end of its                                  C:\code\2008\Trc2008\tracking.c
                                           						// travel, send it back to the start                                       C:\code\2008\Trc2008\tracking.c
003bbc   0e02     MOVLW     0x2            						if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                                C:\code\2008\Trc2008\tracking.c
003bbe   cfdb     MOVFF     0xfdb,0x0                                                                                       
003bc0   f000                                                                                                               
003bc2   0e03     MOVLW     0x3                                                                                             
003bc4   cfdb     MOVFF     0xfdb,0x1                                                                                       
003bc6   f001                                                                                                               
003bc8   90d8     BCF       0xd8,0x0,0x0                                                                                    
003bca   5001     MOVF      0x1,0x0,0x0                                                                                     
003bcc   e604     BN        0x3bd6                                                                                          
003bce   0ec2     MOVLW     0xc2                                                                                            
003bd0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003bd2   0e00     MOVLW     0x0                                                                                             
003bd4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003bd6   e308     BNC       0x3be8                                                                                          
                                           						{                                                                          C:\code\2008\Trc2008\tracking.c
003bd8   0e5e     MOVLW     0x5e           							temp_tilt_servo = TILT_MIN_PWM_DEFAULT;                                   C:\code\2008\Trc2008\tracking.c
003bda   6ef3     MOVWF     0xf3,0x0                                                                                        
003bdc   0e02     MOVLW     0x2                                                                                             
003bde   cff3     MOVFF     0xff3,0xfdb                                                                                     
003be0   ffdb                                                                                                               
003be2   0e03     MOVLW     0x3                                                                                             
003be4   6adb     CLRF      0xdb,0x0                                                                                        
                                           						}                                                                          C:\code\2008\Trc2008\tracking.c
003be6   d01e     BRA       0x3c24         						else                                                                       C:\code\2008\Trc2008\tracking.c
                                           						{                                                                          C:\code\2008\Trc2008\tracking.c
                                           							// step the tilt servo to its next destination                            C:\code\2008\Trc2008\tracking.c
003be8   50d9     MOVF      0xd9,0x0,0x0   							temp_tilt_servo += TILT_SEARCH_STEP_SIZE_DEFAULT;                         C:\code\2008\Trc2008\tracking.c
003bea   0f02     ADDLW     0x2                                                                                             
003bec   6ee9     MOVWF     0xe9,0x0                                                                                        
003bee   cfda     MOVFF     0xfda,0xfea                                                                                     
003bf0   ffea                                                                                                               
003bf2   0e32     MOVLW     0x32                                                                                            
003bf4   26ee     ADDWF     0xee,0x1,0x0                                                                                    
003bf6   0e00     MOVLW     0x0                                                                                             
003bf8   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           			                                                                              C:\code\2008\Trc2008\tracking.c
                                           							// make sure its new position isn't beyond                                C:\code\2008\Trc2008\tracking.c
                                           							// the maximum value set in tracking.h                                    C:\code\2008\Trc2008\tracking.c
003bfa   0e02     MOVLW     0x2            							if(temp_tilt_servo >= TILT_MAX_PWM_DEFAULT)                               C:\code\2008\Trc2008\tracking.c
003bfc   cfdb     MOVFF     0xfdb,0x0                                                                                       
003bfe   f000                                                                                                               
003c00   0e03     MOVLW     0x3                                                                                             
003c02   cfdb     MOVFF     0xfdb,0x1                                                                                       
003c04   f001                                                                                                               
003c06   90d8     BCF       0xd8,0x0,0x0                                                                                    
003c08   5001     MOVF      0x1,0x0,0x0                                                                                     
003c0a   e604     BN        0x3c14                                                                                          
003c0c   0ec2     MOVLW     0xc2                                                                                            
003c0e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003c10   0e00     MOVLW     0x0                                                                                             
003c12   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003c14   e307     BNC       0x3c24                                                                                          
                                           							{                                                                         C:\code\2008\Trc2008\tracking.c
003c16   0ec2     MOVLW     0xc2           								temp_tilt_servo = TILT_MAX_PWM_DEFAULT;                                  C:\code\2008\Trc2008\tracking.c
003c18   6ef3     MOVWF     0xf3,0x0                                                                                        
003c1a   0e02     MOVLW     0x2                                                                                             
003c1c   cff3     MOVFF     0xff3,0xfdb                                                                                     
003c1e   ffdb                                                                                                               
003c20   0e03     MOVLW     0x3                                                                                             
003c22   6adb     CLRF      0xdb,0x0                                                                                        
                                           							}                                                                         C:\code\2008\Trc2008\tracking.c
                                           						}                                                                          C:\code\2008\Trc2008\tracking.c
                                           					}                                                                           C:\code\2008\Trc2008\tracking.c
003c24   d013     BRA       0x3c4c         					else                                                                        C:\code\2008\Trc2008\tracking.c
                                           					{                                                                           C:\code\2008\Trc2008\tracking.c
                                           						// step the pan servo to its next destination                              C:\code\2008\Trc2008\tracking.c
003c26   0e3e     MOVLW     0x3e           						temp_pan_servo += PAN_SEARCH_STEP_SIZE_DEFAULT;                            C:\code\2008\Trc2008\tracking.c
003c28   26de     ADDWF     0xde,0x1,0x0                                                                                    
003c2a   0e00     MOVLW     0x0                                                                                             
003c2c   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                           		                                                                               C:\code\2008\Trc2008\tracking.c
                                           						// make sure its new position isn't beyond                                 C:\code\2008\Trc2008\tracking.c
                                           						// the maximum value set in tracking.h                                     C:\code\2008\Trc2008\tracking.c
003c2e   cfde     MOVFF     0xfde,0x0      						if(temp_pan_servo >= PAN_MAX_PWM_DEFAULT)                                  C:\code\2008\Trc2008\tracking.c
003c30   f000                                                                                                               
003c32   cfdd     MOVFF     0xfdd,0x1                                                                                       
003c34   f001                                                                                                               
003c36   90d8     BCF       0xd8,0x0,0x0                                                                                    
003c38   5001     MOVF      0x1,0x0,0x0                                                                                     
003c3a   e604     BN        0x3c44                                                                                          
003c3c   0ef8     MOVLW     0xf8                                                                                            
003c3e   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003c40   0e00     MOVLW     0x0                                                                                             
003c42   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003c44   e303     BNC       0x3c4c                                                                                          
                                           						{                                                                          C:\code\2008\Trc2008\tracking.c
003c46   0ef8     MOVLW     0xf8           							temp_pan_servo = PAN_MAX_PWM_DEFAULT;                                     C:\code\2008\Trc2008\tracking.c
003c48   6ede     MOVWF     0xde,0x0                                                                                        
003c4a   6add     CLRF      0xdd,0x0                                                                                        
                                           						}                                                                          C:\code\2008\Trc2008\tracking.c
                                           					}                                                                           C:\code\2008\Trc2008\tracking.c
                                           				}                                                                            C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
003c4c   cfdf     MOVFF     0xfdf,0x2a4    				pan_servo_position = (int)temp_pan_servo;                                    C:\code\2008\Trc2008\tracking.c
003c4e   f2a4                                                                                                               
003c50   0e02     MOVLW     0x2            				tilt_servo_position = (int)temp_tilt_servo;                                  C:\code\2008\Trc2008\tracking.c
003c52   cfdb     MOVFF     0xfdb,0x2a5                                                                                     
003c54   f2a5                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           				// update the pan and tilt servo PWM value                                   C:\code\2008\Trc2008\tracking.c
003c56   c2a4     MOVFF     0x2a4,0xfe6    				Set_Pan_Servo_Position((unsigned char)pan_servo_position);                   C:\code\2008\Trc2008\tracking.c
003c58   ffe6                                                                                                               
003c5a   d827     RCALL     0x3caa                                                                                          
003c5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c5e   c2a5     MOVFF     0x2a5,0xfe6    				Set_Tilt_Servo_Position((unsigned char)tilt_servo_position);                 C:\code\2008\Trc2008\tracking.c
003c60   ffe6                                                                                                               
003c62   d82e     RCALL     0x3cc0                                                                                          
003c64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           			}                                                                             C:\code\2008\Trc2008\tracking.c
                                           		}                                                                              C:\code\2008\Trc2008\tracking.c
                                           	}                                                                               C:\code\2008\Trc2008\tracking.c
003c66   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\tracking.c
003c68   ffe1                                                                                                               
003c6a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003c6c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003c6e   ffd9                                                                                                               
003c70   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	FUNCTION:		Get_Tracking_State()                                                C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PURPOSE:		This function can be used to determine if both the pan               C:\code\2008\Trc2008\tracking.c
                                           *					and tilt servos have the camera positioned such that the                   C:\code\2008\Trc2008\tracking.c
                                           *					centroid (center) of the green light is located at the                     C:\code\2008\Trc2008\tracking.c
                                           *					center of the camera's imager.                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	CALLED FROM:	User code.                                                        C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	RETURNS:		SEARCHING if in search mode.                                         C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *					TARGET_IN_VIEW if the target is in view of the camera                      C:\code\2008\Trc2008\tracking.c
                                           *					but not locked on.                                                         C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *					CAMERA_ON_TARGET if the camera is locked onto the                          C:\code\2008\Trc2008\tracking.c
                                           *					target                                                                     C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	COMMENTS:		The return values are defined in tracking.h.                        C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\tracking.c
003c72   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_Tracking_State(void)                                           C:\code\2008\Trc2008\tracking.c
003c74   ffe6                                                                                                               
003c76   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003c78   ffd9                                                                                                               
003c7a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\tracking.c
                                           	unsigned char return_value;                                                     C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
003c7c   0102     MOVLB     0x2            	if(Tracking_State == STATE_SEARCHING)                                           C:\code\2008\Trc2008\tracking.c
003c7e   5192     MOVF      0x92,0x0,0x1                                                                                    
003c80   e102     BNZ       0x3c86                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\tracking.c
003c82   6adf     CLRF      0xdf,0x0       		return_value = SEARCHING;                                                      C:\code\2008\Trc2008\tracking.c
                                           	}                                                                               C:\code\2008\Trc2008\tracking.c
003c84   d00b     BRA       0x3c9c         	else if(Tracking_State < STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\code\2008\Trc2008\tracking.c
003c86   0e07     MOVLW     0x7                                                                                             
003c88   5d92     SUBWF     0x92,0x0,0x1                                                                                    
003c8a   e203     BC        0x3c92                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\tracking.c
003c8c   0e01     MOVLW     0x1            		return_value = TARGET_IN_VIEW;                                                 C:\code\2008\Trc2008\tracking.c
003c8e   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\tracking.c
003c90   d005     BRA       0x3c9c         	else if(Tracking_State == STATE_TARGET_IN_VIEW + STATE_PAN_ON_TARGET + STATE_TILT_ON_TARGET) C:\code\2008\Trc2008\tracking.c
003c92   0e07     MOVLW     0x7                                                                                             
003c94   5d92     SUBWF     0x92,0x0,0x1                                                                                    
003c96   e102     BNZ       0x3c9c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\tracking.c
003c98   0e02     MOVLW     0x2            		return_value = CAMERA_ON_TARGET;                                               C:\code\2008\Trc2008\tracking.c
003c9a   6edf     MOVWF     0xdf,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\tracking.c
                                                                                                                            C:\code\2008\Trc2008\tracking.c
003c9c   50df     MOVF      0xdf,0x0,0x0   	return(return_value);                                                           C:\code\2008\Trc2008\tracking.c
003c9e   d000     BRA       0x3ca0                                                                                          
003ca0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\tracking.c
003ca2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003ca4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003ca6   ffd9                                                                                                               
003ca8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	FUNCTION:		Set_Pan_Servo_Position()                                            C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PURPOSE:		Commands the pan servo to a new position                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\tracking.c
003caa   cfd9     MOVFF     0xfd9,0xfe6    void Set_Pan_Servo_Position(unsigned char new_pan_position)                      C:\code\2008\Trc2008\tracking.c
003cac   ffe6                                                                                                               
003cae   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003cb0   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\tracking.c
003cb2   0efe     MOVLW     0xfe           	PAN_SERVO = new_pan_position;                                                   C:\code\2008\Trc2008\tracking.c
003cb4   cfdb     MOVFF     0xfdb,0x184                                                                                     
003cb6   f184                                                                                                               
003cb8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\tracking.c
003cba   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cbc   ffd9                                                                                                               
003cbe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\tracking.c
                                           /******************************************************************************* C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	FUNCTION:		Set_Tilt_Servo_Position()                                           C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PURPOSE:		Commands the tilt servo to a new position                            C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	CALLED FROM:	Servo_Track(), above.                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\tracking.c
                                           *                                                                                C:\code\2008\Trc2008\tracking.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\tracking.c
003cc0   cfd9     MOVFF     0xfd9,0xfe6    void Set_Tilt_Servo_Position(unsigned char new_tilt_position)                    C:\code\2008\Trc2008\tracking.c
003cc2   ffe6                                                                                                               
003cc4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003cc6   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\tracking.c
003cc8   0efe     MOVLW     0xfe           	TILT_SERVO = new_tilt_position;                                                 C:\code\2008\Trc2008\tracking.c
003cca   cfdb     MOVFF     0xfdb,0x185                                                                                     
003ccc   f185                                                                                                               
003cce   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\tracking.c
003cd0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003cd2   ffd9                                                                                                               
003cd4   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\code\2008\Trc2008\user_routines.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\code\2008\Trc2008\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\code\2008\Trc2008\user_routines.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines.c
                                           * USAGE:                                                                         C:\code\2008\Trc2008\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\code\2008\Trc2008\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\code\2008\Trc2008\user_routines.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\user_routines.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Trc2008\user_routines.c
                                           #include "user_routines.h"                                                       C:\code\2008\Trc2008\user_routines.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Trc2008\user_routines.c
                                           #include "pwm.h"                                                                 C:\code\2008\Trc2008\user_routines.c
                                           #include "camera.h"                                                              C:\code\2008\Trc2008\user_routines.c
                                           #include "tracking.h"                                                            C:\code\2008\Trc2008\user_routines.c
                                           #include "terminal.h"                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #include "adc.h"                                                                 C:\code\2008\Trc2008\user_routines.c
                                           #include "encoder.h"                                                             C:\code\2008\Trc2008\user_routines.c
                                           #include "gyro.h"                                                                C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           extern unsigned char aBreakerWasTripped;                                         C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\code\2008\Trc2008\user_routines.c
                                           /* EXAMPLES: (see MPLAB C18 User's Guide, p.9 for all types)                     C:\code\2008\Trc2008\user_routines.c
                                           unsigned char wheel_revolutions = 0; (can vary from 0 to 255)                    C:\code\2008\Trc2008\user_routines.c
                                           unsigned int  delay_count = 7;       (can vary from 0 to 65,535)                 C:\code\2008\Trc2008\user_routines.c
                                           int           angle_deviation = 142; (can vary from -32,768 to 32,767)           C:\code\2008\Trc2008\user_routines.c
                                           unsigned long very_big_counter = 0;  (can vary from 0 to 4,294,967,295)          C:\code\2008\Trc2008\user_routines.c
                                           */                                                                               C:\code\2008\Trc2008\user_routines.c
                                           //		                                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           //				       velLim,Kp,Kvp,Ki,Ko                                                 C:\code\2008\Trc2008\user_routines.c
                                           VelServo Left =  {0,0,0,0,50, 4, 55, 2, 10, 127};                                C:\code\2008\Trc2008\user_routines.c
                                           VelServo Right = {0,0,0,0,50, 4, 55, 2, 10, 127};                                C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Max                                                C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it exceeds 127 and the     C:\code\2008\Trc2008\user_routines.c
                                           *                limit switch is on.                                             C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Trc2008\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Trc2008\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\code\2008\Trc2008\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
002a74   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Max(unsigned char switch_state, unsigned char *input_value)    C:\code\2008\Trc2008\user_routines.c
002a76   ffe6                                                                                                               
002a78   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002a7a   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
002a7c   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\code\2008\Trc2008\user_routines.c
002a7e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002a80   e111     BNZ       0x2aa4                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002a82   0efc     MOVLW     0xfc               if(*input_value > 127)                                                       C:\code\2008\Trc2008\user_routines.c
002a84   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002a86   ffe9                                                                                                               
002a88   0efd     MOVLW     0xfd                                                                                            
002a8a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002a8c   ffea                                                                                                               
002a8e   50ef     MOVF      0xef,0x0,0x0                                                                                    
002a90   087f     SUBLW     0x7f                                                                                            
002a92   e208     BC        0x2aa4                                                                                          
002a94   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\code\2008\Trc2008\user_routines.c
002a96   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002a98   ffe9                                                                                                               
002a9a   0efd     MOVLW     0xfd                                                                                            
002a9c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002a9e   ffea                                                                                                               
002aa0   0e7f     MOVLW     0x7f                                                                                            
002aa2   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
002aa4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\user_routines.c
002aa6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002aa8   ffd9                                                                                                               
002aaa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: Limit_Switch_Min                                                C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       Sets a PWM value to neutral (127) if it's less than 127 and the C:\code\2008\Trc2008\user_routines.c
                                           *                limit switch is on.                                             C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   this file                                                       C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\user_routines.c
                                           *     Argument       Type             IO   Description                           C:\code\2008\Trc2008\user_routines.c
                                           *     --------       -------------    --   -----------                           C:\code\2008\Trc2008\user_routines.c
                                           *     switch_state   unsigned char    I    limit switch state                    C:\code\2008\Trc2008\user_routines.c
                                           *     *input_value   pointer           O   points to PWM byte value to be limited C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
002aac   cfd9     MOVFF     0xfd9,0xfe6    void Limit_Switch_Min(unsigned char switch_state, unsigned char *input_value)    C:\code\2008\Trc2008\user_routines.c
002aae   ffe6                                                                                                               
002ab0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002ab2   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
002ab4   0efe     MOVLW     0xfe             if (switch_state == CLOSED)                                                    C:\code\2008\Trc2008\user_routines.c
002ab6   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ab8   e113     BNZ       0x2ae0                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002aba   0efc     MOVLW     0xfc               if(*input_value < 127)                                                       C:\code\2008\Trc2008\user_routines.c
002abc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002abe   ffe9                                                                                                               
002ac0   0efd     MOVLW     0xfd                                                                                            
002ac2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002ac4   ffea                                                                                                               
002ac6   cfef     MOVFF     0xfef,0x0                                                                                       
002ac8   f000                                                                                                               
002aca   0e7f     MOVLW     0x7f                                                                                            
002acc   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002ace   e208     BC        0x2ae0                                                                                          
002ad0   0efc     MOVLW     0xfc                 *input_value = 127;                                                        C:\code\2008\Trc2008\user_routines.c
002ad2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002ad4   ffe9                                                                                                               
002ad6   0efd     MOVLW     0xfd                                                                                            
002ad8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002ada   ffea                                                                                                               
002adc   0e7f     MOVLW     0x7f                                                                                            
002ade   6eef     MOVWF     0xef,0x0                                                                                        
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
002ae0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\user_routines.c
002ae2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002ae4   ffd9                                                                                                               
002ae6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: Limit_Mix                                                       C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       Limits the mixed value for one joystick drive.                  C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   Default_Routine, this file                                      C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:                                                                     C:\code\2008\Trc2008\user_routines.c
                                           *     Argument             Type    IO   Description                              C:\code\2008\Trc2008\user_routines.c
                                           *     --------             ----    --   -----------                              C:\code\2008\Trc2008\user_routines.c
                                           *     intermediate_value    int    I                                             C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       unsigned char                                                   C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
002ae8   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Limit_Mix (int intermediate_value)                                 C:\code\2008\Trc2008\user_routines.c
002aea   ffe6                                                                                                               
002aec   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002aee   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
                                             static int limited_value;                                                      C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002af0   0efd     MOVLW     0xfd             if (intermediate_value < 2000)                                                 C:\code\2008\Trc2008\user_routines.c
002af2   cfdb     MOVFF     0xfdb,0x0                                                                                       
002af4   f000                                                                                                               
002af6   0efe     MOVLW     0xfe                                                                                            
002af8   cfdb     MOVFF     0xfdb,0x1                                                                                       
002afa   f001                                                                                                               
002afc   90d8     BCF       0xd8,0x0,0x0                                                                                    
002afe   5001     MOVF      0x1,0x0,0x0                                                                                     
002b00   e604     BN        0x2b0a                                                                                          
002b02   0ed0     MOVLW     0xd0                                                                                            
002b04   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002b06   0e07     MOVLW     0x7                                                                                             
002b08   5801     SUBWFB    0x1,0x0,0x0                                                                                     
002b0a   e206     BC        0x2b18                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002b0c   0101     MOVLB     0x1                limited_value = 2000;                                                        C:\code\2008\Trc2008\user_routines.c
002b0e   0ed0     MOVLW     0xd0                                                                                            
002b10   6ffd     MOVWF     0xfd,0x1                                                                                        
002b12   0e07     MOVLW     0x7                                                                                             
002b14   6ffe     MOVWF     0xfe,0x1                                                                                        
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
002b16   d019     BRA       0x2b4a           else if (intermediate_value > 2254)                                            C:\code\2008\Trc2008\user_routines.c
002b18   0efd     MOVLW     0xfd                                                                                            
002b1a   cfdb     MOVFF     0xfdb,0x0                                                                                       
002b1c   f000                                                                                                               
002b1e   0efe     MOVLW     0xfe                                                                                            
002b20   cfdb     MOVFF     0xfdb,0x1                                                                                       
002b22   f001                                                                                                               
002b24   3401     RLCF      0x1,0x0,0x0                                                                                     
002b26   e204     BC        0x2b30                                                                                          
002b28   5000     MOVF      0x0,0x0,0x0                                                                                     
002b2a   08ce     SUBLW     0xce                                                                                            
002b2c   0e08     MOVLW     0x8                                                                                             
002b2e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
002b30   e206     BC        0x2b3e                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002b32   0101     MOVLB     0x1                limited_value = 2254;                                                        C:\code\2008\Trc2008\user_routines.c
002b34   0ece     MOVLW     0xce                                                                                            
002b36   6ffd     MOVWF     0xfd,0x1                                                                                        
002b38   0e08     MOVLW     0x8                                                                                             
002b3a   6ffe     MOVWF     0xfe,0x1                                                                                        
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
002b3c   d006     BRA       0x2b4a           else                                                                           C:\code\2008\Trc2008\user_routines.c
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002b3e   0efd     MOVLW     0xfd               limited_value = intermediate_value;                                          C:\code\2008\Trc2008\user_routines.c
002b40   cfdb     MOVFF     0xfdb,0x1fd                                                                                     
002b42   f1fd                                                                                                               
002b44   0efe     MOVLW     0xfe                                                                                            
002b46   cfdb     MOVFF     0xfdb,0x1fe                                                                                     
002b48   f1fe                                                                                                               
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
002b4a   c1fd     MOVFF     0x1fd,0x0        return (unsigned char) (limited_value - 2000);                                 C:\code\2008\Trc2008\user_routines.c
002b4c   f000                                                                                                               
002b4e   c1fe     MOVFF     0x1fe,0x1                                                                                       
002b50   f001                                                                                                               
002b52   0ed0     MOVLW     0xd0                                                                                            
002b54   5e00     SUBWF     0x0,0x1,0x0                                                                                     
002b56   0e07     MOVLW     0x7                                                                                             
002b58   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002b5a   5000     MOVF      0x0,0x0,0x0                                                                                     
002b5c   d000     BRA       0x2b5e                                                                                          
002b5e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\user_routines.c
002b60   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002b62   ffd9                                                                                                               
002b64   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\code\2008\Trc2008\user_routines.c
                                           *                You may modify and add to this function.                        C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
                                           void User_Initialization (void)                                                  C:\code\2008\Trc2008\user_routines.c
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
                                             //Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */ /*Dumped for adc.c support--read the instructions*/ C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\code\2008\Trc2008\user_routines.c
002b66   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\code\2008\Trc2008\user_routines.c
002b68   8893     BSF       0x93,0x4,0x0                                                                                    
002b6a   8693     BSF       0x93,0x3,0x0                                                                                    
002b6c   8493     BSF       0x93,0x2,0x0                                                                                    
002b6e   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\code\2008\Trc2008\user_routines.c
002b70   8099     BSF       0x99,0x0,0x0                                                                                    
002b72   8e93     BSF       0x93,0x7,0x0                                                                                    
002b74   8c93     BSF       0x93,0x6,0x0                                                                                    
002b76   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\code\2008\Trc2008\user_routines.c
002b78   829a     BSF       0x9a,0x1,0x0                                                                                    
002b7a   8699     BSF       0x99,0x3,0x0                                                                                    
002b7c   8499     BSF       0x99,0x2,0x0                                                                                    
002b7e   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\code\2008\Trc2008\user_routines.c
002b80   889a     BSF       0x9a,0x4,0x0                                                                                    
002b82   8094     BSF       0x94,0x0,0x0                                                                                    
002b84   869a     BSF       0x9a,0x3,0x0                                                                                    
002b86   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\code\2008\Trc2008\user_routines.c
                                               /*                                                                           C:\code\2008\Trc2008\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\code\2008\Trc2008\user_routines.c
                                                      is the same as the following:                                         C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\code\2008\Trc2008\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\code\2008\Trc2008\user_routines.c
                                                      ...                                                                   C:\code\2008\Trc2008\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\code\2008\Trc2008\user_routines.c
                                               */                                                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\code\2008\Trc2008\user_routines.c
002b88   9c9a     BCF       0x9a,0x6,0x0     digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\code\2008\Trc2008\user_routines.c
002b8a   9c91     BCF       0x91,0x6,0x0     rc_dig_out17 = 0;                                                              C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\code\2008\Trc2008\user_routines.c
002b8c   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\code\2008\Trc2008\user_routines.c
002b8e   0e7f     MOVLW     0x7f                                                                                            
002b90   6f8b     MOVWF     0x8b,0x1                                                                                        
002b92   c18b     MOVFF     0x18b,0x18a                                                                                     
002b94   f18a                                                                                                               
002b96   c18b     MOVFF     0x18b,0x189                                                                                     
002b98   f189                                                                                                               
002b9a   c18b     MOVFF     0x18b,0x188                                                                                     
002b9c   f188                                                                                                               
002b9e   c18b     MOVFF     0x18b,0x187                                                                                     
002ba0   f187                                                                                                               
002ba2   c18b     MOVFF     0x18b,0x186                                                                                     
002ba4   f186                                                                                                               
002ba6   c18b     MOVFF     0x18b,0x185                                                                                     
002ba8   f185                                                                                                               
002baa   c18b     MOVFF     0x18b,0x184                                                                                     
002bac   f184                                                                                                               
002bae   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\code\2008\Trc2008\user_routines.c
002bb0   c193     MOVFF     0x193,0x192                                                                                     
002bb2   f192                                                                                                               
002bb4   c193     MOVFF     0x193,0x191                                                                                     
002bb6   f191                                                                                                               
002bb8   c193     MOVFF     0x193,0x190                                                                                     
002bba   f190                                                                                                               
002bbc   c193     MOVFF     0x193,0x18f                                                                                     
002bbe   f18f                                                                                                               
002bc0   c193     MOVFF     0x193,0x18e                                                                                     
002bc2   f18e                                                                                                               
002bc4   c193     MOVFF     0x193,0x18d                                                                                     
002bc6   f18d                                                                                                               
002bc8   c193     MOVFF     0x193,0x18c                                                                                     
002bca   f18c                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\code\2008\Trc2008\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\code\2008\Trc2008\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\code\2008\Trc2008\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\code\2008\Trc2008\user_routines.c
                                           //  Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                      C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             // changed so PWM() can control PWM outputs 13 through 16                      C:\code\2008\Trc2008\user_routines.c
002bcc   0e01     MOVLW     0x1              Setup_PWM_Output_Type(USER_CCP,USER_CCP,USER_CCP,USER_CCP);                    C:\code\2008\Trc2008\user_routines.c
002bce   6ee6     MOVWF     0xe6,0x0                                                                                        
002bd0   6ae6     CLRF      0xe6,0x0                                                                                        
002bd2   6ee6     MOVWF     0xe6,0x0                                                                                        
002bd4   6ae6     CLRF      0xe6,0x0                                                                                        
002bd6   6ee6     MOVWF     0xe6,0x0                                                                                        
002bd8   6ae6     CLRF      0xe6,0x0                                                                                        
002bda   6ee6     MOVWF     0xe6,0x0                                                                                        
002bdc   6ae6     CLRF      0xe6,0x0                                                                                        
002bde   ec0b     CALL      0x2616,0x0                                                                                      
002be0   f013                                                                                                               
002be2   6ef5     MOVWF     0xf5,0x0                                                                                        
002be4   0e08     MOVLW     0x8                                                                                             
002be6   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002be8   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             /*                                                                             C:\code\2008\Trc2008\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\code\2008\Trc2008\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\code\2008\Trc2008\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\code\2008\Trc2008\user_routines.c
                                                    T2CON = 0;                                                              C:\code\2008\Trc2008\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\code\2008\Trc2008\user_routines.c
                                             */                                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             /* Add any other initialization code here. */                                  C:\code\2008\Trc2008\user_routines.c
002bea   ec70     CALL      0x40e0,0x0       Initialize_ADC();                                                              C:\code\2008\Trc2008\user_routines.c
002bec   f020                                                                                                               
002bee   ecba     CALL      0x5774,0x0       Initialize_Encoders();                                                         C:\code\2008\Trc2008\user_routines.c
002bf0   f02b                                                                                                               
002bf2   eca2     CALL      0x4b44,0x0       Initialize_Gyro();                                                             C:\code\2008\Trc2008\user_routines.c
002bf4   f025                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             // initialize the CCP PWM hardware                                             C:\code\2008\Trc2008\user_routines.c
002bf6   ece4     CALL      0x55c8,0x0       Initialize_PWM();                                                              C:\code\2008\Trc2008\user_routines.c
002bf8   f02a                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             // initialize the serial ports                                                 C:\code\2008\Trc2008\user_routines.c
002bfa   ec38     CALL      0x4870,0x0       Init_Serial_Port_One();                                                        C:\code\2008\Trc2008\user_routines.c
002bfc   f024                                                                                                               
002bfe   ec51     CALL      0x48a2,0x0       Init_Serial_Port_Two();                                                        C:\code\2008\Trc2008\user_routines.c
002c00   f024                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_1                                                    C:\code\2008\Trc2008\user_routines.c
002c02   0102     MOVLB     0x2              stdout_serial_port = SERIAL_PORT_ONE;                                          C:\code\2008\Trc2008\user_routines.c
002c04   0e01     MOVLW     0x1                                                                                             
002c06   6f31     MOVWF     0x31,0x1                                                                                        
                                           #endif                                                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           #ifdef TERMINAL_SERIAL_PORT_2                                                    C:\code\2008\Trc2008\user_routines.c
                                             stdout_serial_port = SERIAL_PORT_TWO;                                          C:\code\2008\Trc2008\user_routines.c
                                           #endif                                                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002c08   0e80     MOVLW     0x80             Putdata(&txdata);            /* DO NOT CHANGE! */                              C:\code\2008\Trc2008\user_routines.c
002c0a   6ee6     MOVWF     0xe6,0x0                                                                                        
002c0c   0e01     MOVLW     0x1                                                                                             
002c0e   6ee6     MOVWF     0xe6,0x0                                                                                        
002c10   ecc9     CALL      0x2592,0x0                                                                                      
002c12   f012                                                                                                               
002c14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           //  ***  IFI Code Starts Here***                                                 C:\code\2008\Trc2008\user_routines.c
                                           //                                                                               C:\code\2008\Trc2008\user_routines.c
                                           //  Serial_Driver_Initialize();                                                  C:\code\2008\Trc2008\user_routines.c
                                           //                                                                               C:\code\2008\Trc2008\user_routines.c
                                           //  printf("IFI 2006 User Processor Initialized ...\r");  /* Optional - Print initialization message. */ C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002c18   ec50     CALL      0x24a0,0x0       User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\code\2008\Trc2008\user_routines.c
002c1a   f012                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002c1c   0ef4     MOVLW     0xf4             printf("---TRC Robot Code 2008 Ver. 0.1.2 Initialized---\r\n");                C:\code\2008\Trc2008\user_routines.c
002c1e   6e00     MOVWF     0x0,0x0                                                                                         
002c20   0e54     MOVLW     0x54                                                                                            
002c22   6e01     MOVWF     0x1,0x0                                                                                         
002c24   6a02     CLRF      0x2,0x0                                                                                         
002c26   c000     MOVFF     0x0,0xfe6                                                                                       
002c28   ffe6                                                                                                               
002c2a   c001     MOVFF     0x1,0xfe6                                                                                       
002c2c   ffe6                                                                                                               
002c2e   c002     MOVFF     0x2,0xfe6                                                                                       
002c30   ffe6                                                                                                               
002c32   ec8c     CALL      0x5918,0x0                                                                                      
002c34   f02c                                                                                                               
002c36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c3a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c3c   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\code\2008\Trc2008\user_routines.c
                                           *                microprocessor.                                                 C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
002c3e   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\code\2008\Trc2008\user_routines.c
002c40   ffe6                                                                                                               
002c42   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002c44   ffd9                                                                                                               
002c46   0e0e     MOVLW     0xe                                                                                             
002c48   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
                                           	static unsigned char count = 0;                                                 C:\code\2008\Trc2008\user_routines.c
                                           	static unsigned char camera_menu_active = 0;                                    C:\code\2008\Trc2008\user_routines.c
                                           	static unsigned char tracking_menu_active = 0;                                  C:\code\2008\Trc2008\user_routines.c
                                           	unsigned char terminal_char;                                                    C:\code\2008\Trc2008\user_routines.c
                                           	unsigned char returned_value;                                                   C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		//Encoder Velocity Calculation; Oversampling                                   C:\code\2008\Trc2008\user_routines.c
                                           	static char samplesCount = 0;		//Samples out of 10                              C:\code\2008\Trc2008\user_routines.c
                                           	//static long enc1PrevCount = 0;                                                C:\code\2008\Trc2008\user_routines.c
                                           	//static long enc2PrevCount = 0;                                                C:\code\2008\Trc2008\user_routines.c
                                           	//long enc1Vel, enc2Vel;                                                        C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                               	//PID Incremented Vars                                                      C:\code\2008\Trc2008\user_routines.c
                                           	//static int leftPwm  = 127;                                                    C:\code\2008\Trc2008\user_routines.c
                                           	//static int rightPwm = 127;                                                    C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	int x, y;                                                                       C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           		//Some gyro bias stuff here...looks intesting                                  C:\code\2008\Trc2008\user_routines.c
                                           	static unsigned int i = 0;                                                      C:\code\2008\Trc2008\user_routines.c
                                           	static unsigned int j = 0;                                                      C:\code\2008\Trc2008\user_routines.c
                                           	int temp_gyro_rate;                                                             C:\code\2008\Trc2008\user_routines.c
                                           	long temp_gyro_angle;                                                           C:\code\2008\Trc2008\user_routines.c
                                           	int temp_gyro_bias;                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\code\2008\Trc2008\user_routines.c
                                           		//I moved it to match the gyro code                                            C:\code\2008\Trc2008\user_routines.c
002c4a   0ea0     MOVLW     0xa0           	Getdata(&rxdata);                                                               C:\code\2008\Trc2008\user_routines.c
002c4c   6ee6     MOVWF     0xe6,0x0                                                                                        
002c4e   0e01     MOVLW     0x1                                                                                             
002c50   6ee6     MOVWF     0xe6,0x0                                                                                        
002c52   ecb0     CALL      0x2560,0x0                                                                                      
002c54   f012                                                                                                               
002c56   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c58   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           	//printf("Test: %d\r\n", rc_dig_in02);                                          C:\code\2008\Trc2008\user_routines.c
                                           	//printf("enc1=%ld enc2=%ld\r\n",Get_Encoder_1_Count(),Get_Encoder_2_Count());  C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	if(1)  //Set this to 1 to run the gyro bias calculation code. Otherwise, set it to 0  C:\code\2008\Trc2008\user_routines.c
                                           	{                                                                               C:\code\2008\Trc2008\user_routines.c
002c5a   0101     MOVLB     0x1            		i++;                                                                           C:\code\2008\Trc2008\user_routines.c
002c5c   2bf9     INCF      0xf9,0x1,0x1                                                                                    
002c5e   0e00     MOVLW     0x0                                                                                             
002c60   23fa     ADDWFC    0xfa,0x1,0x1                                                                                    
002c62   2bfb     INCF      0xfb,0x1,0x1   		j++; // this will rollover every ~1000 seconds                                 C:\code\2008\Trc2008\user_routines.c
002c64   23fc     ADDWFC    0xfc,0x1,0x1                                                                                    
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
002c66   0e0a     MOVLW     0xa            		if(j == 10)                                                                    C:\code\2008\Trc2008\user_routines.c
002c68   19fb     XORWF     0xfb,0x0,0x1                                                                                    
002c6a   e101     BNZ       0x2c6e                                                                                          
002c6c   51fc     MOVF      0xfc,0x0,0x1                                                                                    
002c6e   e110     BNZ       0x2c90                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines.c
002c70   0eda     MOVLW     0xda           			printf("\rCalculating Gyro Bias...");                                         C:\code\2008\Trc2008\user_routines.c
002c72   6e00     MOVWF     0x0,0x0                                                                                         
002c74   0e54     MOVLW     0x54                                                                                            
002c76   6e01     MOVWF     0x1,0x0                                                                                         
002c78   6a02     CLRF      0x2,0x0                                                                                         
002c7a   c000     MOVFF     0x0,0xfe6                                                                                       
002c7c   ffe6                                                                                                               
002c7e   c001     MOVFF     0x1,0xfe6                                                                                       
002c80   ffe6                                                                                                               
002c82   c002     MOVFF     0x2,0xfe6                                                                                       
002c84   ffe6                                                                                                               
002c86   ec8c     CALL      0x5918,0x0                                                                                      
002c88   f02c                                                                                                               
002c8a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002c8e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
002c90   0101     MOVLB     0x1            		if(j == 60)                                                                    C:\code\2008\Trc2008\user_routines.c
002c92   0e3c     MOVLW     0x3c                                                                                            
002c94   19fb     XORWF     0xfb,0x0,0x1                                                                                    
002c96   e101     BNZ       0x2c9a                                                                                          
002c98   51fc     MOVF      0xfc,0x0,0x1                                                                                    
002c9a   e102     BNZ       0x2ca0                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines.c
                                           			// start a gyro bias calculation                                              C:\code\2008\Trc2008\user_routines.c
002c9c   ec48     CALL      0x4c90,0x0     			Start_Gyro_Bias_Calc();                                                       C:\code\2008\Trc2008\user_routines.c
002c9e   f026                                                                                                               
                                           		}                                                                              C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
002ca0   0e2c     MOVLW     0x2c           		if(j == 300)                                                                   C:\code\2008\Trc2008\user_routines.c
002ca2   0101     MOVLB     0x1                                                                                             
002ca4   19fb     XORWF     0xfb,0x0,0x1                                                                                    
002ca6   e102     BNZ       0x2cac                                                                                          
002ca8   0e01     MOVLW     0x1                                                                                             
002caa   19fc     XORWF     0xfc,0x0,0x1                                                                                    
002cac   e114     BNZ       0x2cd6                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines.c
                                           			// terminate the gyro bias calculation                                        C:\code\2008\Trc2008\user_routines.c
002cae   ec54     CALL      0x4ca8,0x0     			Stop_Gyro_Bias_Calc();                                                        C:\code\2008\Trc2008\user_routines.c
002cb0   f026                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           			// reset the gyro heading angle                                               C:\code\2008\Trc2008\user_routines.c
002cb2   ec8a     CALL      0x4d14,0x0     			Reset_Gyro_Angle();                                                           C:\code\2008\Trc2008\user_routines.c
002cb4   f026                                                                                                               
                                           		                                                                               C:\code\2008\Trc2008\user_routines.c
002cb6   0ed4     MOVLW     0xd4           			printf("Done\r");                                                             C:\code\2008\Trc2008\user_routines.c
002cb8   6e00     MOVWF     0x0,0x0                                                                                         
002cba   0e54     MOVLW     0x54                                                                                            
002cbc   6e01     MOVWF     0x1,0x0                                                                                         
002cbe   6a02     CLRF      0x2,0x0                                                                                         
002cc0   c000     MOVFF     0x0,0xfe6                                                                                       
002cc2   ffe6                                                                                                               
002cc4   c001     MOVFF     0x1,0xfe6                                                                                       
002cc6   ffe6                                                                                                               
002cc8   c002     MOVFF     0x2,0xfe6                                                                                       
002cca   ffe6                                                                                                               
002ccc   ec8c     CALL      0x5918,0x0                                                                                      
002cce   f02c                                                                                                               
002cd0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cd2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002cd4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
002cd6   0101     MOVLB     0x1            		if(i >= 30 && j >= 300)                                                        C:\code\2008\Trc2008\user_routines.c
002cd8   0e1e     MOVLW     0x1e                                                                                            
002cda   5df9     SUBWF     0xf9,0x0,0x1                                                                                    
002cdc   0e00     MOVLW     0x0                                                                                             
002cde   59fa     SUBWFB    0xfa,0x0,0x1                                                                                    
002ce0   e326     BNC       0x2d2e                                                                                          
002ce2   0e2c     MOVLW     0x2c                                                                                            
002ce4   5dfb     SUBWF     0xfb,0x0,0x1                                                                                    
002ce6   0e01     MOVLW     0x1                                                                                             
002ce8   59fc     SUBWFB    0xfc,0x0,0x1                                                                                    
002cea   e321     BNC       0x2d2e                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines.c
002cec   ec76     CALL      0x4cec,0x0     			temp_gyro_bias = Get_Gyro_Bias();                                             C:\code\2008\Trc2008\user_routines.c
002cee   f026                                                                                                               
002cf0   0e0c     MOVLW     0xc                                                                                             
002cf2   cff3     MOVFF     0xff3,0xfdb                                                                                     
002cf4   ffdb                                                                                                               
002cf6   0e0d     MOVLW     0xd                                                                                             
002cf8   cff4     MOVFF     0xff4,0xfdb                                                                                     
002cfa   ffdb                                                                                                               
002cfc   eca9     CALL      0x4b52,0x0     			temp_gyro_rate = Get_Gyro_Rate();                                             C:\code\2008\Trc2008\user_routines.c
002cfe   f025                                                                                                               
002d00   0e06     MOVLW     0x6                                                                                             
002d02   cff3     MOVFF     0xff3,0xfdb                                                                                     
002d04   ffdb                                                                                                               
002d06   0e07     MOVLW     0x7                                                                                             
002d08   cff4     MOVFF     0xff4,0xfdb                                                                                     
002d0a   ffdb                                                                                                               
002d0c   ecff     CALL      0x4bfe,0x0     			temp_gyro_angle = Get_Gyro_Angle();                                           C:\code\2008\Trc2008\user_routines.c
002d0e   f025                                                                                                               
002d10   0e08     MOVLW     0x8                                                                                             
002d12   c03f     MOVFF     0x3f,0xfdb                                                                                      
002d14   ffdb                                                                                                               
002d16   0e09     MOVLW     0x9                                                                                             
002d18   c040     MOVFF     0x40,0xfdb                                                                                      
002d1a   ffdb                                                                                                               
002d1c   0e0a     MOVLW     0xa                                                                                             
002d1e   c041     MOVFF     0x41,0xfdb                                                                                      
002d20   ffdb                                                                                                               
002d22   0e0b     MOVLW     0xb                                                                                             
002d24   c042     MOVFF     0x42,0xfdb                                                                                      
002d26   ffdb                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           			//printf(" Gyro Bias=%d\r\n", temp_gyro_bias);                                C:\code\2008\Trc2008\user_routines.c
                                           		//	printf(" Gyro Rate=%d\r\n", temp_gyro_rate);                                C:\code\2008\Trc2008\user_routines.c
                                           		//printf("Gyro Angle=%d\r\n\r\n", (int)temp_gyro_angle);		                     C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
002d28   0101     MOVLB     0x1            			i = 0;                                                                        C:\code\2008\Trc2008\user_routines.c
002d2a   6bf9     CLRF      0xf9,0x1                                                                                        
002d2c   6bfa     CLRF      0xfa,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\user_routines.c
002d2e   d008     BRA       0x2d40         	} else {                                                                        C:\code\2008\Trc2008\user_routines.c
002d30   0eed     MOVLW     0xed           		Set_Gyro_Bias(GYRO_BIAS);                                                      C:\code\2008\Trc2008\user_routines.c
002d32   6ee6     MOVWF     0xe6,0x0                                                                                        
002d34   0e03     MOVLW     0x3                                                                                             
002d36   6ee6     MOVWF     0xe6,0x0                                                                                        
002d38   ec7c     CALL      0x4cf8,0x0                                                                                      
002d3a   f026                                                                                                               
002d3c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d3e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// send diagnostic information to the terminal                                  C:\code\2008\Trc2008\user_routines.c
                                           		//comment me to stop spamming the serial port                                  C:\code\2008\Trc2008\user_routines.c
                                           	//Tracking_Info_Terminal();                                                     C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// This function is responsable for camera initialization                       C:\code\2008\Trc2008\user_routines.c
                                           	// and camera serial data interpretation. Once the camera                       C:\code\2008\Trc2008\user_routines.c
                                           	// is initialized and starts sending tracking data, this                        C:\code\2008\Trc2008\user_routines.c
                                           	// function will continuously update the global T_Packet_Data                   C:\code\2008\Trc2008\user_routines.c
                                           	// structure with the received tracking information.                            C:\code\2008\Trc2008\user_routines.c
002d40   ecc7     CALL      0x318e,0x0     	Camera_Handler();                                                               C:\code\2008\Trc2008\user_routines.c
002d42   f018                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// This function reads data placed in the T_Packet_Data                         C:\code\2008\Trc2008\user_routines.c
                                           	// structure by the Camera_Handler() function and if new                        C:\code\2008\Trc2008\user_routines.c
                                           	// tracking data is available, attempts to keep the center                      C:\code\2008\Trc2008\user_routines.c
                                           	// of the tracked object in the center of the camera's                          C:\code\2008\Trc2008\user_routines.c
                                           	// image using two servos that drive a pan/tilt platform.                       C:\code\2008\Trc2008\user_routines.c
                                           	// If the camera doesn't have the object within it's field                      C:\code\2008\Trc2008\user_routines.c
                                           	// of view, this function will execute a search algorithm                       C:\code\2008\Trc2008\user_routines.c
                                           	// in an attempt to find the object.                                            C:\code\2008\Trc2008\user_routines.c
002d44   ec09     CALL      0x3812,0x0     	Servo_Track();                                                                  C:\code\2008\Trc2008\user_routines.c
002d46   f01c                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// Turn on the "Switch 3" LED on the operator interface if                      C:\code\2008\Trc2008\user_routines.c
                                           	// the camera is pointed at the green light target. The                         C:\code\2008\Trc2008\user_routines.c
                                           	// Switch3_LED variable is also used by the Default_Routine()                   C:\code\2008\Trc2008\user_routines.c
                                           	// function below, so disable it inside Default_Routine()                       C:\code\2008\Trc2008\user_routines.c
                                           	// if you want to keep this functionality.                                      C:\code\2008\Trc2008\user_routines.c
002d48   ec39     CALL      0x3c72,0x0     	if(Get_Tracking_State() == CAMERA_ON_TARGET)                                    C:\code\2008\Trc2008\user_routines.c
002d4a   f01e                                                                                                               
002d4c   0802     SUBLW     0x2                                                                                             
002d4e   e103     BNZ       0x2d56                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines.c
002d50   0101     MOVLB     0x1            		Switch3_LED = 1;                                                               C:\code\2008\Trc2008\user_routines.c
002d52   8581     BSF       0x81,0x2,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\user_routines.c
002d54   d002     BRA       0x2d5a         	else                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	{                                                                               C:\code\2008\Trc2008\user_routines.c
002d56   0101     MOVLB     0x1            		Switch3_LED = 0;                                                               C:\code\2008\Trc2008\user_routines.c
002d58   9581     BCF       0x81,0x2,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// IFI's default routine is commented out for safety reasons                    C:\code\2008\Trc2008\user_routines.c
                                           	// and because it also tries to use PWM outputs one and two,                    C:\code\2008\Trc2008\user_routines.c
                                           	// which conflicts with the default assignment for the pan                      C:\code\2008\Trc2008\user_routines.c
                                           	// and tilt servos.                                                             C:\code\2008\Trc2008\user_routines.c
                                           //  Default_Routine();                                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //-----------------------------------------Mappings----------------------      C:\code\2008\Trc2008\user_routines.c
                                             //This is some of my code, put here because Default_Routine() is commented out C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002d5a   0e08     MOVLW     0x8              x = deadBandInput(p2_x + YAW_OFFSET, YAW_DB);			//Centered at 0                C:\code\2008\Trc2008\user_routines.c
002d5c   6ee6     MOVWF     0xe6,0x0                                                                                        
002d5e   6ae6     CLRF      0xe6,0x0                                                                                        
002d60   0ecb     MOVLW     0xcb                                                                                            
002d62   0101     MOVLB     0x1                                                                                             
002d64   25ab     ADDWF     0xab,0x0,0x1                                                                                    
002d66   6ee6     MOVWF     0xe6,0x0                                                                                        
002d68   6ae6     CLRF      0xe6,0x0                                                                                        
002d6a   ec02     CALL      0x1604,0x0                                                                                      
002d6c   f00b                                                                                                               
002d6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d70   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d74   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d76   0e02     MOVLW     0x2                                                                                             
002d78   cff3     MOVFF     0xff3,0xfdb                                                                                     
002d7a   ffdb                                                                                                               
002d7c   0e03     MOVLW     0x3                                                                                             
002d7e   cff4     MOVFF     0xff4,0xfdb                                                                                     
002d80   ffdb                                                                                                               
002d82   0e08     MOVLW     0x8              y = deadBandInput(p1_y + SPEED_OFFSET, SPEED_DB);		//Centered at 0             C:\code\2008\Trc2008\user_routines.c
002d84   6ee6     MOVWF     0xe6,0x0                                                                                        
002d86   6ae6     CLRF      0xe6,0x0                                                                                        
002d88   0efd     MOVLW     0xfd                                                                                            
002d8a   0101     MOVLB     0x1                                                                                             
002d8c   25a6     ADDWF     0xa6,0x0,0x1                                                                                    
002d8e   6ee6     MOVWF     0xe6,0x0                                                                                        
002d90   6ae6     CLRF      0xe6,0x0                                                                                        
002d92   ec02     CALL      0x1604,0x0                                                                                      
002d94   f00b                                                                                                               
002d96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d98   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002d9e   0e04     MOVLW     0x4                                                                                             
002da0   cff3     MOVFF     0xff3,0xfdb                                                                                     
002da2   ffdb                                                                                                               
002da4   0e05     MOVLW     0x5                                                                                             
002da6   cff4     MOVFF     0xff4,0xfdb                                                                                     
002da8   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             /*                                                                             C:\code\2008\Trc2008\user_routines.c
                                             printf("x:%d y:%d\r\n", x, y);                                                 C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             pwm13 = pwm14 = y - x + 127;                                                   C:\code\2008\Trc2008\user_routines.c
                                             pwm15 = pwm16 = y + x + 127;*/                                                 C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //Left.Setpoint = y - x;	//These control velocity, make sure they equal 0 when neutral (hint: deadband offsets) C:\code\2008\Trc2008\user_routines.c
                                             //Right.Setpoint = y + x;                                                      C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //Left.Vsetpoint = 0;                                                          C:\code\2008\Trc2008\user_routines.c
                                             //Right.Vsetpoint = 0;                                                         C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //printf("x:%d y:%d rawX:%d rawY:%d\r\n", x, y, p1_x + YAW_OFFSET, p1_y + SPEED_OFFSET ); C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //Encoder Velocity Calculation; Oversampling                                   C:\code\2008\Trc2008\user_routines.c
002daa   0e01     MOVLW     0x1              if(samplesCount > 1)										                                                 C:\code\2008\Trc2008\user_routines.c
002dac   0101     MOVLB     0x1                                                                                             
002dae   6ee7     MOVWF     0xe7,0x0                                                                                        
002db0   19f8     XORWF     0xf8,0x0,0x1                                                                                    
002db2   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
002db4   d002     BRA       0x2dba                                                                                          
002db6   35f8     RLCF      0xf8,0x0,0x1                                                                                    
002db8   d003     BRA       0x2dc0                                                                                          
002dba   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002dbc   80d8     BSF       0xd8,0x0,0x0                                                                                    
002dbe   55f8     SUBFWB    0xf8,0x0,0x1                                                                                    
002dc0   e301     BNC       0x2dc4                                                                                          
002dc2   d0b7     BRA       0x2f32                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
002dc4   0e04     MOVLW     0x4            		Left.Psetpoint  += (50*(y - x))/127;                                           C:\code\2008\Trc2008\user_routines.c
002dc6   cfdb     MOVFF     0xfdb,0x6                                                                                       
002dc8   f006                                                                                                               
002dca   0e05     MOVLW     0x5                                                                                             
002dcc   cfdb     MOVFF     0xfdb,0x7                                                                                       
002dce   f007                                                                                                               
002dd0   0e02     MOVLW     0x2                                                                                             
002dd2   50db     MOVF      0xdb,0x0,0x0                                                                                    
002dd4   5c06     SUBWF     0x6,0x0,0x0                                                                                     
002dd6   6e04     MOVWF     0x4,0x0                                                                                         
002dd8   0e03     MOVLW     0x3                                                                                             
002dda   50db     MOVF      0xdb,0x0,0x0                                                                                    
002ddc   5807     SUBWFB    0x7,0x0,0x0                                                                                     
002dde   6e05     MOVWF     0x5,0x0                                                                                         
002de0   0e32     MOVLW     0x32                                                                                            
002de2   6e41     MOVWF     0x41,0x0                                                                                        
002de4   6a42     CLRF      0x42,0x0                                                                                        
002de6   c004     MOVFF     0x4,0x46                                                                                        
002de8   f046                                                                                                               
002dea   c005     MOVFF     0x5,0x47                                                                                        
002dec   f047                                                                                                               
002dee   ec96     CALL      0x3f2c,0x0                                                                                      
002df0   f01f                                                                                                               
002df2   c03f     MOVFF     0x3f,0x0                                                                                        
002df4   f000                                                                                                               
002df6   c040     MOVFF     0x40,0x1                                                                                        
002df8   f001                                                                                                               
002dfa   0e7f     MOVLW     0x7f                                                                                            
002dfc   6e46     MOVWF     0x46,0x0                                                                                        
002dfe   6a47     CLRF      0x47,0x0                                                                                        
002e00   c000     MOVFF     0x0,0x41                                                                                        
002e02   f041                                                                                                               
002e04   c001     MOVFF     0x1,0x42                                                                                        
002e06   f042                                                                                                               
002e08   ec3c     CALL      0x3e78,0x0                                                                                      
002e0a   f01f                                                                                                               
002e0c   c041     MOVFF     0x41,0x0                                                                                        
002e0e   f000                                                                                                               
002e10   c042     MOVFF     0x42,0x1                                                                                        
002e12   f001                                                                                                               
002e14   6a02     CLRF      0x2,0x0                                                                                         
002e16   6a03     CLRF      0x3,0x0                                                                                         
002e18   ae01     BTFSS     0x1,0x7,0x0                                                                                     
002e1a   d002     BRA       0x2e20                                                                                          
002e1c   6802     SETF      0x2,0x0                                                                                         
002e1e   6803     SETF      0x3,0x0                                                                                         
002e20   5000     MOVF      0x0,0x0,0x0                                                                                     
002e22   0101     MOVLB     0x1                                                                                             
002e24   27c1     ADDWF     0xc1,0x1,0x1                                                                                    
002e26   5001     MOVF      0x1,0x0,0x0                                                                                     
002e28   23c2     ADDWFC    0xc2,0x1,0x1                                                                                    
002e2a   5002     MOVF      0x2,0x0,0x0                                                                                     
002e2c   23c3     ADDWFC    0xc3,0x1,0x1                                                                                    
002e2e   5003     MOVF      0x3,0x0,0x0                                                                                     
002e30   23c4     ADDWFC    0xc4,0x1,0x1                                                                                    
002e32   0e02     MOVLW     0x2              		Right.Psetpoint += (50*(y + x))/127;                                         C:\code\2008\Trc2008\user_routines.c
002e34   cfdb     MOVFF     0xfdb,0x6                                                                                       
002e36   f006                                                                                                               
002e38   0e03     MOVLW     0x3                                                                                             
002e3a   cfdb     MOVFF     0xfdb,0x7                                                                                       
002e3c   f007                                                                                                               
002e3e   0e04     MOVLW     0x4                                                                                             
002e40   50db     MOVF      0xdb,0x0,0x0                                                                                    
002e42   2406     ADDWF     0x6,0x0,0x0                                                                                     
002e44   6e04     MOVWF     0x4,0x0                                                                                         
002e46   0e05     MOVLW     0x5                                                                                             
002e48   50db     MOVF      0xdb,0x0,0x0                                                                                    
002e4a   2007     ADDWFC    0x7,0x0,0x0                                                                                     
002e4c   6e05     MOVWF     0x5,0x0                                                                                         
002e4e   0e32     MOVLW     0x32                                                                                            
002e50   6e41     MOVWF     0x41,0x0                                                                                        
002e52   6a42     CLRF      0x42,0x0                                                                                        
002e54   c004     MOVFF     0x4,0x46                                                                                        
002e56   f046                                                                                                               
002e58   c005     MOVFF     0x5,0x47                                                                                        
002e5a   f047                                                                                                               
002e5c   ec96     CALL      0x3f2c,0x0                                                                                      
002e5e   f01f                                                                                                               
002e60   c03f     MOVFF     0x3f,0x0                                                                                        
002e62   f000                                                                                                               
002e64   c040     MOVFF     0x40,0x1                                                                                        
002e66   f001                                                                                                               
002e68   0e7f     MOVLW     0x7f                                                                                            
002e6a   6e46     MOVWF     0x46,0x0                                                                                        
002e6c   6a47     CLRF      0x47,0x0                                                                                        
002e6e   c000     MOVFF     0x0,0x41                                                                                        
002e70   f041                                                                                                               
002e72   c001     MOVFF     0x1,0x42                                                                                        
002e74   f042                                                                                                               
002e76   ec3c     CALL      0x3e78,0x0                                                                                      
002e78   f01f                                                                                                               
002e7a   c041     MOVFF     0x41,0x0                                                                                        
002e7c   f000                                                                                                               
002e7e   c042     MOVFF     0x42,0x1                                                                                        
002e80   f001                                                                                                               
002e82   6a02     CLRF      0x2,0x0                                                                                         
002e84   6a03     CLRF      0x3,0x0                                                                                         
002e86   ae01     BTFSS     0x1,0x7,0x0                                                                                     
002e88   d002     BRA       0x2e8e                                                                                          
002e8a   6802     SETF      0x2,0x0                                                                                         
002e8c   6803     SETF      0x3,0x0                                                                                         
002e8e   5000     MOVF      0x0,0x0,0x0                                                                                     
002e90   0101     MOVLB     0x1                                                                                             
002e92   27db     ADDWF     0xdb,0x1,0x1                                                                                    
002e94   5001     MOVF      0x1,0x0,0x0                                                                                     
002e96   23dc     ADDWFC    0xdc,0x1,0x1                                                                                    
002e98   5002     MOVF      0x2,0x0,0x0                                                                                     
002e9a   23dd     ADDWFC    0xdd,0x1,0x1                                                                                    
002e9c   5003     MOVF      0x3,0x0,0x0                                                                                     
002e9e   23de     ADDWFC    0xde,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             		//printf("LPSet:%ld RPSet:%ld x:%d y:%d L:%d R:%d\r\n", Left.Psetpoint, Right.Psetpoint, x, y, (80*(y - x))/127, (80*(y + x))/127); C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002ea0   0e01     MOVLW     0x1            		pwm15 = pwm16 = doVelPid(&Left, Get_Encoder_1_Count(), L_MOTOR_DIR);           C:\code\2008\Trc2008\user_routines.c
002ea2   6ee6     MOVWF     0xe6,0x0                                                                                        
002ea4   6ae6     CLRF      0xe6,0x0                                                                                        
002ea6   ecc5     CALL      0x578a,0x0                                                                                      
002ea8   f02b                                                                                                               
002eaa   c03f     MOVFF     0x3f,0x0                                                                                        
002eac   f000                                                                                                               
002eae   c040     MOVFF     0x40,0x1                                                                                        
002eb0   f001                                                                                                               
002eb2   c041     MOVFF     0x41,0x2                                                                                        
002eb4   f002                                                                                                               
002eb6   c042     MOVFF     0x42,0x3                                                                                        
002eb8   f003                                                                                                               
002eba   c000     MOVFF     0x0,0xfe6                                                                                       
002ebc   ffe6                                                                                                               
002ebe   c001     MOVFF     0x1,0xfe6                                                                                       
002ec0   ffe6                                                                                                               
002ec2   c002     MOVFF     0x2,0xfe6                                                                                       
002ec4   ffe6                                                                                                               
002ec6   c003     MOVFF     0x3,0xfe6                                                                                       
002ec8   ffe6                                                                                                               
002eca   0ec1     MOVLW     0xc1                                                                                            
002ecc   6ee6     MOVWF     0xe6,0x0                                                                                        
002ece   0e01     MOVLW     0x1                                                                                             
002ed0   6ee6     MOVWF     0xe6,0x0                                                                                        
002ed2   ec03     CALL      0xe06,0x0                                                                                       
002ed4   f007                                                                                                               
002ed6   6ef5     MOVWF     0xf5,0x0                                                                                        
002ed8   0e08     MOVLW     0x8                                                                                             
002eda   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002edc   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002ede   cff3     MOVFF     0xff3,0x193                                                                                     
002ee0   f193                                                                                                               
002ee2   cff3     MOVFF     0xff3,0x192                                                                                     
002ee4   f192                                                                                                               
002ee6   0e01     MOVLW     0x1                    pwm13 = pwm14 = doVelPid(&Right, Get_Encoder_2_Count(), R_MOTOR_DIR);    C:\code\2008\Trc2008\user_routines.c
002ee8   6ee6     MOVWF     0xe6,0x0                                                                                        
002eea   6ae6     CLRF      0xe6,0x0                                                                                        
002eec   ec01     CALL      0x5802,0x0                                                                                      
002eee   f02c                                                                                                               
002ef0   c03f     MOVFF     0x3f,0x0                                                                                        
002ef2   f000                                                                                                               
002ef4   c040     MOVFF     0x40,0x1                                                                                        
002ef6   f001                                                                                                               
002ef8   c041     MOVFF     0x41,0x2                                                                                        
002efa   f002                                                                                                               
002efc   c042     MOVFF     0x42,0x3                                                                                        
002efe   f003                                                                                                               
002f00   c000     MOVFF     0x0,0xfe6                                                                                       
002f02   ffe6                                                                                                               
002f04   c001     MOVFF     0x1,0xfe6                                                                                       
002f06   ffe6                                                                                                               
002f08   c002     MOVFF     0x2,0xfe6                                                                                       
002f0a   ffe6                                                                                                               
002f0c   c003     MOVFF     0x3,0xfe6                                                                                       
002f0e   ffe6                                                                                                               
002f10   0edb     MOVLW     0xdb                                                                                            
002f12   6ee6     MOVWF     0xe6,0x0                                                                                        
002f14   0e01     MOVLW     0x1                                                                                             
002f16   6ee6     MOVWF     0xe6,0x0                                                                                        
002f18   ec03     CALL      0xe06,0x0                                                                                       
002f1a   f007                                                                                                               
002f1c   6ef5     MOVWF     0xf5,0x0                                                                                        
002f1e   0e08     MOVLW     0x8                                                                                             
002f20   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002f22   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002f24   cff3     MOVFF     0xff3,0x191                                                                                     
002f26   f191                                                                                                               
002f28   cff3     MOVFF     0xff3,0x190                                                                                     
002f2a   f190                                                                                                               
                                           /*                                                                               C:\code\2008\Trc2008\user_routines.c
                                           		enc1Vel = Get_Encoder_1_Count() - enc1PrevCount;                               C:\code\2008\Trc2008\user_routines.c
                                           		enc2Vel = Get_Encoder_2_Count() - enc2PrevCount;		                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		enc1PrevCount = Get_Encoder_1_Count();				//Yes, it's sloppy to call a dynamic function again like this, but since the  C:\code\2008\Trc2008\user_routines.c
                                           		enc2PrevCount = Get_Encoder_2_Count();		    	//delay is so short I figured it would be okay C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		//leftPwm  += doPid(&Left, enc1Vel, L_MOTOR_DIR); 	//Integrate PID drive for velocity control C:\code\2008\Trc2008\user_routines.c
                                           		//rightPwm += doPid(&Right, enc2Vel, R_MOTOR_DIR);                             C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           		//doPid(&Left, enc1Vel, L_MOTOR_DIR);                                          C:\code\2008\Trc2008\user_routines.c
                                           		//doPid(&Right, enc2Vel, R_MOTOR_DIR);                                         C:\code\2008\Trc2008\user_routines.c
                                           		                                                                               C:\code\2008\Trc2008\user_routines.c
                                           	                                                                                C:\code\2008\Trc2008\user_routines.c
                                           		if(leftPwm > 255)									//Keep my integrated PID drives in proper limits     C:\code\2008\Trc2008\user_routines.c
                                           			leftPwm = 255;                                                                C:\code\2008\Trc2008\user_routines.c
                                           		if(leftPwm < 0)                                                                C:\code\2008\Trc2008\user_routines.c
                                           			leftPwm = 0;                                                                  C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		if(rightPwm > 255)                                                             C:\code\2008\Trc2008\user_routines.c
                                           			rightPwm = 255;                                                               C:\code\2008\Trc2008\user_routines.c
                                           		if(rightPwm < 0)                                                               C:\code\2008\Trc2008\user_routines.c
                                           			rightPwm = 0;                                                                 C:\code\2008\Trc2008\user_routines.c
                                           		                                                                               C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		//pwm15 = pwm16 = leftPwm;                                                     C:\code\2008\Trc2008\user_routines.c
                                           		//pwm13 = pwm14 = rightPwm;		                                                  C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	//	pwm15 = pwm16 = doPid(&Left, enc1Vel, L_MOTOR_DIR);                          C:\code\2008\Trc2008\user_routines.c
                                               //  pwm13 = pwm14 = doPid(&Right, enc2Vel, R_MOTOR_DIR);                     C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           		//printf("enc1Vel:%ld enc2Vel:%ld prev1:%ld prev2:%ld\r\n", enc1Vel, enc2Vel, enc1PrevCount, enc2PrevCount); C:\code\2008\Trc2008\user_routines.c
                                           	//	printf("enc1Vel:%ld enc2Vel:%ld\r\n", enc1Vel, enc2Vel);                     C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           */                                                                               C:\code\2008\Trc2008\user_routines.c
002f2c   0101     MOVLB     0x1            		samplesCount = 0;		                                                            C:\code\2008\Trc2008\user_routines.c
002f2e   6bf8     CLRF      0xf8,0x1                                                                                        
002f30   d001     BRA       0x2f34           } else {                                                                       C:\code\2008\Trc2008\user_routines.c
002f32   2bf8     INCF      0xf8,0x1,0x1   		samplesCount++;                                                                C:\code\2008\Trc2008\user_routines.c
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             //printf("enc1:%ld enc2:%ld\r\d", Get_Encoder_1_Count(), Get_Encoder_2_Count()); C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /*                                                                               C:\code\2008\Trc2008\user_routines.c
                                             if(encoder_check())                                                            C:\code\2008\Trc2008\user_routines.c
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
                                           	  pwm13 = pwm14 = doPid(&Right, Encoder_2_Vel(), R_MOTOR_DIR);                  C:\code\2008\Trc2008\user_routines.c
                                           	  pwm15 = pwm16 = doPid(&Left, Encoder_1_Vel(), L_MOTOR_DIR);                   C:\code\2008\Trc2008\user_routines.c
                                             } else {                                                                       C:\code\2008\Trc2008\user_routines.c
                                           	  pwm13 = pwm14 = 127;                                                          C:\code\2008\Trc2008\user_routines.c
                                           	  pwm15 = pwm16 = 127;                                                          C:\code\2008\Trc2008\user_routines.c
                                             }*/                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	//printf("LSet:%d LDrive:%d LPrevError:%d LEncVel:%d\r\n", Left.Setpoint, Left.Drive, Left.PrevErr, Encoder_1_Vel()); C:\code\2008\Trc2008\user_routines.c
                                           	//printf("Vel1:%d\r\n", Encoder_1_Vel());	                                      C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           //------------------------------------End Mappings-----------------------        C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// IFI's software based PWM pulse generator for PMW ouputs                      C:\code\2008\Trc2008\user_routines.c
                                           	// 13 through 16. This has been replaced with a hardware-                       C:\code\2008\Trc2008\user_routines.c
                                           	// based solution, PWM(), below.                                                C:\code\2008\Trc2008\user_routines.c
                                           //	Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                       C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// see pwm_readme.txt for information about PWM();                              C:\code\2008\Trc2008\user_routines.c
002f34   c193     MOVFF     0x193,0xfe6    	PWM(pwm13,pwm14,pwm15,pwm16);                                                   C:\code\2008\Trc2008\user_routines.c
002f36   ffe6                                                                                                               
002f38   c192     MOVFF     0x192,0xfe6                                                                                     
002f3a   ffe6                                                                                                               
002f3c   c191     MOVFF     0x191,0xfe6                                                                                     
002f3e   ffe6                                                                                                               
002f40   c190     MOVFF     0x190,0xfe6                                                                                     
002f42   ffe6                                                                                                               
002f44   ecf0     CALL      0x55e0,0x0                                                                                      
002f46   f02a                                                                                                               
002f48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f4a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	// don't move this unless you know what you're doing                            C:\code\2008\Trc2008\user_routines.c
002f50   0e80     MOVLW     0x80           	Putdata(&txdata);                                                               C:\code\2008\Trc2008\user_routines.c
002f52   6ee6     MOVWF     0xe6,0x0                                                                                        
002f54   0e01     MOVLW     0x1                                                                                             
002f56   6ee6     MOVWF     0xe6,0x0                                                                                        
002f58   ecc9     CALL      0x2592,0x0                                                                                      
002f5a   f012                                                                                                               
002f5c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f5e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f60   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\user_routines.c
002f62   ffe1                                                                                                               
002f64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f66   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f68   ffd9                                                                                                               
002f6a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines.c
                                           * FUNCTION NAME: Default_Routine                                                 C:\code\2008\Trc2008\user_routines.c
                                           * PURPOSE:       Performs the default mappings of inputs to outputs for the      C:\code\2008\Trc2008\user_routines.c
                                           *                Robot Controller.                                               C:\code\2008\Trc2008\user_routines.c
                                           * CALLED FROM:   this file, Process_Data_From_Master_uP routine                  C:\code\2008\Trc2008\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
002f6c   cfd9     MOVFF     0xfd9,0xfe6    void Default_Routine(void)                                                       C:\code\2008\Trc2008\user_routines.c
002f6e   ffe6                                                                                                               
002f70   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f72   ffd9                                                                                                               
002f74   0e04     MOVLW     0x4                                                                                             
002f76   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\user_routines.c
                                             int x, y;                                                                      C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                            /*---------- Analog Inputs (Joysticks) to PWM Outputs-----------------------    C:\code\2008\Trc2008\user_routines.c
                                             *--------------------------------------------------------------------------    C:\code\2008\Trc2008\user_routines.c
                                             *   This maps the joystick axes to specific PWM outputs.                       C:\code\2008\Trc2008\user_routines.c
                                             */                                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             	/* We don't really need this                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm01 = p1_y;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm02 = p2_y;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm03 = p3_y;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm04 = p4_y;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm05 = p1_x;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm06 = p2_x;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm07 = p3_x;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm08 = p4_x;                                                                  C:\code\2008\Trc2008\user_routines.c
                                             pwm09 = p1_wheel;                                                              C:\code\2008\Trc2008\user_routines.c
                                             pwm10 = p2_wheel;                                                              C:\code\2008\Trc2008\user_routines.c
                                             pwm11 = p3_wheel;                                                              C:\code\2008\Trc2008\user_routines.c
                                             pwm12 = p4_wheel; */                                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                            /*---------- 1 Joystick Drive ----------------------------------------------    C:\code\2008\Trc2008\user_routines.c
                                             *--------------------------------------------------------------------------    C:\code\2008\Trc2008\user_routines.c
                                             *  This code mixes the Y and X axis on Port 1 to allow one joystick drive.     C:\code\2008\Trc2008\user_routines.c
                                             *  Joystick forward  = Robot forward                                           C:\code\2008\Trc2008\user_routines.c
                                             *  Joystick backward = Robot backward                                          C:\code\2008\Trc2008\user_routines.c
                                             *  Joystick right    = Robot rotates right                                     C:\code\2008\Trc2008\user_routines.c
                                             *  Joystick left     = Robot rotates left                                      C:\code\2008\Trc2008\user_routines.c
                                             *  Connect the right drive motors to PWM13 and/or PWM14 on the RC.             C:\code\2008\Trc2008\user_routines.c
                                             *  Connect the left  drive motors to PWM15 and/or PWM16 on the RC.             C:\code\2008\Trc2008\user_routines.c
                                             */                                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           	/*Let's try it my way                                                           C:\code\2008\Trc2008\user_routines.c
                                             p1_x = 255 - p1_y;                                                             C:\code\2008\Trc2008\user_routines.c
                                             p1_y = 255 - pwm05;                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             pwm13 = pwm14 = Limit_Mix(2000 + p1_y + p1_x - 127);                           C:\code\2008\Trc2008\user_routines.c
                                             pwm15 = pwm16 = Limit_Mix(2000 + p1_y - p1_x + 127);                           C:\code\2008\Trc2008\user_routines.c
                                           	*/                                                                              C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                            /*---------- Buttons to Relays----------------------------------------------    C:\code\2008\Trc2008\user_routines.c
                                             *--------------------------------------------------------------------------    C:\code\2008\Trc2008\user_routines.c
                                             *  This default code maps the joystick buttons to specific relay outputs.      C:\code\2008\Trc2008\user_routines.c
                                             *  Relays 1 and 2 use limit switches to stop the movement in one direction.    C:\code\2008\Trc2008\user_routines.c
                                             *  The & used below is the C symbol for AND                                    C:\code\2008\Trc2008\user_routines.c
                                             */                                                                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                            	/* Don't need this...                                                          C:\code\2008\Trc2008\user_routines.c
                                             relay1_fwd = p1_sw_trig & rc_dig_in01;  /* FWD only if switch1 is not closed.  C:\code\2008\Trc2008\user_routines.c
                                             relay1_rev = p1_sw_top  & rc_dig_in02;  /* REV only if switch2 is not closed.  C:\code\2008\Trc2008\user_routines.c
                                             relay2_fwd = p2_sw_trig & rc_dig_in03;  /* FWD only if switch3 is not closed.  C:\code\2008\Trc2008\user_routines.c
                                             relay2_rev = p2_sw_top  & rc_dig_in04;  /* REV only if switch4 is not closed.  C:\code\2008\Trc2008\user_routines.c
                                             relay3_fwd = p3_sw_trig;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay3_rev = p3_sw_top;                                                        C:\code\2008\Trc2008\user_routines.c
                                             relay4_fwd = p4_sw_trig;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay4_rev = p4_sw_top;                                                        C:\code\2008\Trc2008\user_routines.c
                                             relay5_fwd = p1_sw_aux1;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay5_rev = p1_sw_aux2;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay6_fwd = p3_sw_aux1;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay6_rev = p3_sw_aux2;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay7_fwd = p4_sw_aux1;                                                       C:\code\2008\Trc2008\user_routines.c
                                             relay7_rev = p4_sw_aux2; */                                                    C:\code\2008\Trc2008\user_routines.c
002f78   5088     MOVF      0x88,0x0,0x0     relay8_fwd = !rc_dig_in18;  /* Power pump only if pressure switch is off. */   C:\code\2008\Trc2008\user_routines.c
002f7a   0b80     ANDLW     0x80                                                                                            
002f7c   e002     BZ        0x2f82                                                                                          
002f7e   9091     BCF       0x91,0x0,0x0                                                                                    
002f80   d001     BRA       0x2f84                                                                                          
002f82   8091     BSF       0x91,0x0,0x0                                                                                    
002f84   9e8c     BCF       0x8c,0x7,0x0     relay8_rev = 0;                                                                C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             /*---------- PWM outputs Limited by Limit Switches  ------------------------*/ C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             	/* Don't need this                                                            C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in05, &pwm03);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in06, &pwm03);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in07, &pwm04);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in08, &pwm04);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in09, &pwm09);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in10, &pwm09);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in11, &pwm10);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in12, &pwm10);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in13, &pwm11);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in14, &pwm11);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Max(rc_dig_in15, &pwm12);                                         C:\code\2008\Trc2008\user_routines.c
                                             Limit_Switch_Min(rc_dig_in16, &pwm12);                                         C:\code\2008\Trc2008\user_routines.c
                                           	*/                                                                              C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                            /*---------- ROBOT FEEDBACK LEDs------------------------------------------------ C:\code\2008\Trc2008\user_routines.c
                                             *------------------------------------------------------------------------------ C:\code\2008\Trc2008\user_routines.c
                                             *   This section drives the "ROBOT FEEDBACK" lights on the Operator Interface. C:\code\2008\Trc2008\user_routines.c
                                             *   The lights are green for joystick forward and red for joystick reverse.    C:\code\2008\Trc2008\user_routines.c
                                             *   Both red and green are on when the joystick is centered.  Use the          C:\code\2008\Trc2008\user_routines.c
                                             *   trim tabs on the joystick to adjust the center.                            C:\code\2008\Trc2008\user_routines.c
                                             *   These may be changed for any use that the user desires.                        C:\code\2008\Trc2008\user_routines.c
                                             */	                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
002f86   0101     MOVLB     0x1              if (user_display_mode == 0) /* User Mode is Off */                             C:\code\2008\Trc2008\user_routines.c
002f88   bba1     BTFSC     0xa1,0x5,0x1                                                                                    
002f8a   d0a9     BRA       0x30de                                                                                          
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             { /* Check position of Port 1 Joystick */                                      C:\code\2008\Trc2008\user_routines.c
002f8c   0e00     MOVLW     0x0                if (p1_y >= 0 && p1_y <= 56)                                                 C:\code\2008\Trc2008\user_routines.c
002f8e   5da6     SUBWF     0xa6,0x0,0x1                                                                                    
002f90   e307     BNC       0x2fa0                                                                                          
002f92   51a6     MOVF      0xa6,0x0,0x1                                                                                    
002f94   0838     SUBLW     0x38                                                                                            
002f96   e304     BNC       0x2fa0                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\code\2008\Trc2008\user_routines.c
002f98   0101     MOVLB     0x1                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\code\2008\Trc2008\user_routines.c
002f9a   9180     BCF       0x80,0x0,0x1                                                                                    
002f9c   8380     BSF       0x80,0x1,0x1         Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON  */                        C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
002f9e   d02d     BRA       0x2ffa             else if (p1_y >= 125 && p1_y <= 129)                                         C:\code\2008\Trc2008\user_routines.c
002fa0   0e7d     MOVLW     0x7d                                                                                            
002fa2   5da6     SUBWF     0xa6,0x0,0x1                                                                                    
002fa4   e30e     BNC       0x2fc2                                                                                          
002fa6   51a6     MOVF      0xa6,0x0,0x1                                                                                    
002fa8   6e00     MOVWF     0x0,0x0                                                                                         
002faa   6a01     CLRF      0x1,0x0                                                                                         
002fac   3401     RLCF      0x1,0x0,0x0                                                                                     
002fae   e204     BC        0x2fb8                                                                                          
002fb0   5000     MOVF      0x0,0x0,0x0                                                                                     
002fb2   0881     SUBLW     0x81                                                                                            
002fb4   0e00     MOVLW     0x0                                                                                             
002fb6   5401     SUBFWB    0x1,0x0,0x0                                                                                     
002fb8   e304     BNC       0x2fc2                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\code\2008\Trc2008\user_routines.c
002fba   0101     MOVLB     0x1                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON */                         C:\code\2008\Trc2008\user_routines.c
002fbc   8180     BSF       0x80,0x0,0x1                                                                                    
002fbe   8380     BSF       0x80,0x1,0x1         Pwm1_red  = 1;      /* Turn PWM1 red LED   - ON */                         C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
002fc0   d01c     BRA       0x2ffa             else if (p1_y >= 216 && p1_y <= 255)                                         C:\code\2008\Trc2008\user_routines.c
002fc2   51a6     MOVF      0xa6,0x0,0x1                                                                                    
002fc4   6e00     MOVWF     0x0,0x0                                                                                         
002fc6   6a01     CLRF      0x1,0x0                                                                                         
002fc8   90d8     BCF       0xd8,0x0,0x0                                                                                    
002fca   5001     MOVF      0x1,0x0,0x0                                                                                     
002fcc   e604     BN        0x2fd6                                                                                          
002fce   0ed8     MOVLW     0xd8                                                                                            
002fd0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
002fd2   0e00     MOVLW     0x0                                                                                             
002fd4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
002fd6   e30e     BNC       0x2ff4                                                                                          
002fd8   51a6     MOVF      0xa6,0x0,0x1                                                                                    
002fda   6e02     MOVWF     0x2,0x0                                                                                         
002fdc   6a03     CLRF      0x3,0x0                                                                                         
002fde   3403     RLCF      0x3,0x0,0x0                                                                                     
002fe0   e204     BC        0x2fea                                                                                          
002fe2   5002     MOVF      0x2,0x0,0x0                                                                                     
002fe4   08ff     SUBLW     0xff                                                                                            
002fe6   0e00     MOVLW     0x0                                                                                             
002fe8   5403     SUBFWB    0x3,0x0,0x0                                                                                     
002fea   e304     BNC       0x2ff4                                                                                          
                                               {                     /* Joystick is in full forward position*/              C:\code\2008\Trc2008\user_routines.c
002fec   0101     MOVLB     0x1                  Pwm1_green  = 1;    /* Turn PWM1 green LED - ON  */                        C:\code\2008\Trc2008\user_routines.c
002fee   8180     BSF       0x80,0x0,0x1                                                                                    
002ff0   9380     BCF       0x80,0x1,0x1         Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
002ff2   d003     BRA       0x2ffa             else                                                                         C:\code\2008\Trc2008\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\code\2008\Trc2008\user_routines.c
002ff4   0101     MOVLB     0x1                  Pwm1_green  = 0;    /* Turn PWM1 green LED - OFF */                        C:\code\2008\Trc2008\user_routines.c
002ff6   9180     BCF       0x80,0x0,0x1                                                                                    
002ff8   9380     BCF       0x80,0x1,0x1         Pwm1_red  = 0;      /* Turn PWM1 red LED   - OFF */                        C:\code\2008\Trc2008\user_routines.c
                                               }  /*END Check position of Port 1 Joystick                                   C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                               /* Check position of Port 2 Y Joystick                                       C:\code\2008\Trc2008\user_routines.c
                                                      (or Port 1 X in Single Joystick Drive Mode) */                        C:\code\2008\Trc2008\user_routines.c
002ffa   0e00     MOVLW     0x0                if (p2_y >= 0 && p2_y <= 56)                                                 C:\code\2008\Trc2008\user_routines.c
002ffc   0101     MOVLB     0x1                                                                                             
002ffe   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
003000   e307     BNC       0x3010                                                                                          
003002   51a7     MOVF      0xa7,0x0,0x1                                                                                    
003004   0838     SUBLW     0x38                                                                                            
003006   e304     BNC       0x3010                                                                                          
                                               {                     /* Joystick is in full reverse position */             C:\code\2008\Trc2008\user_routines.c
003008   0101     MOVLB     0x1                  Pwm2_green  = 0;    /* Turn pwm2 green LED - OFF */                        C:\code\2008\Trc2008\user_routines.c
00300a   9580     BCF       0x80,0x2,0x1                                                                                    
00300c   8780     BSF       0x80,0x3,0x1         Pwm2_red  = 1;      /* Turn pwm2 red LED   - ON  */                        C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
00300e   d02d     BRA       0x306a             else if (p2_y >= 125 && p2_y <= 129)                                         C:\code\2008\Trc2008\user_routines.c
003010   0e7d     MOVLW     0x7d                                                                                            
003012   5da7     SUBWF     0xa7,0x0,0x1                                                                                    
003014   e30e     BNC       0x3032                                                                                          
003016   51a7     MOVF      0xa7,0x0,0x1                                                                                    
003018   6e00     MOVWF     0x0,0x0                                                                                         
00301a   6a01     CLRF      0x1,0x0                                                                                         
00301c   3401     RLCF      0x1,0x0,0x0                                                                                     
00301e   e204     BC        0x3028                                                                                          
003020   5000     MOVF      0x0,0x0,0x0                                                                                     
003022   0881     SUBLW     0x81                                                                                            
003024   0e00     MOVLW     0x0                                                                                             
003026   5401     SUBFWB    0x1,0x0,0x0                                                                                     
003028   e304     BNC       0x3032                                                                                          
                                               {                     /* Joystick is in neutral position */                  C:\code\2008\Trc2008\user_routines.c
00302a   0101     MOVLB     0x1                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON */                         C:\code\2008\Trc2008\user_routines.c
00302c   8580     BSF       0x80,0x2,0x1                                                                                    
00302e   8780     BSF       0x80,0x3,0x1         Pwm2_red  = 1;      /* Turn PWM2 red LED   - ON */                         C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
003030   d01c     BRA       0x306a             else if (p2_y >= 216 && p2_y <= 255)                                         C:\code\2008\Trc2008\user_routines.c
003032   51a7     MOVF      0xa7,0x0,0x1                                                                                    
003034   6e00     MOVWF     0x0,0x0                                                                                         
003036   6a01     CLRF      0x1,0x0                                                                                         
003038   90d8     BCF       0xd8,0x0,0x0                                                                                    
00303a   5001     MOVF      0x1,0x0,0x0                                                                                     
00303c   e604     BN        0x3046                                                                                          
00303e   0ed8     MOVLW     0xd8                                                                                            
003040   5c00     SUBWF     0x0,0x0,0x0                                                                                     
003042   0e00     MOVLW     0x0                                                                                             
003044   5801     SUBWFB    0x1,0x0,0x0                                                                                     
003046   e30e     BNC       0x3064                                                                                          
003048   51a7     MOVF      0xa7,0x0,0x1                                                                                    
00304a   6e02     MOVWF     0x2,0x0                                                                                         
00304c   6a03     CLRF      0x3,0x0                                                                                         
00304e   3403     RLCF      0x3,0x0,0x0                                                                                     
003050   e204     BC        0x305a                                                                                          
003052   5002     MOVF      0x2,0x0,0x0                                                                                     
003054   08ff     SUBLW     0xff                                                                                            
003056   0e00     MOVLW     0x0                                                                                             
003058   5403     SUBFWB    0x3,0x0,0x0                                                                                     
00305a   e304     BNC       0x3064                                                                                          
                                               {                     /* Joystick is in full forward position */             C:\code\2008\Trc2008\user_routines.c
00305c   0101     MOVLB     0x1                  Pwm2_green  = 1;    /* Turn PWM2 green LED - ON  */                        C:\code\2008\Trc2008\user_routines.c
00305e   8580     BSF       0x80,0x2,0x1                                                                                    
003060   9780     BCF       0x80,0x3,0x1         Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\code\2008\Trc2008\user_routines.c
                                               }                                                                            C:\code\2008\Trc2008\user_routines.c
003062   d003     BRA       0x306a             else                                                                         C:\code\2008\Trc2008\user_routines.c
                                               {                     /* In either forward or reverse position */            C:\code\2008\Trc2008\user_routines.c
003064   0101     MOVLB     0x1                  Pwm2_green  = 0;    /* Turn PWM2 green LED - OFF */                        C:\code\2008\Trc2008\user_routines.c
003066   9580     BCF       0x80,0x2,0x1                                                                                    
003068   9780     BCF       0x80,0x3,0x1         Pwm2_red  = 0;      /* Turn PWM2 red LED   - OFF */                        C:\code\2008\Trc2008\user_routines.c
                                               }  /* END Check position of Port 2 Joystick */                               C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                               /* This drives the Relay 1 and Relay 2 "Robot Feedback" lights on the OI. */ C:\code\2008\Trc2008\user_routines.c
00306a   9b80     BCF       0x80,0x5,0x1       Relay1_green = relay1_fwd;    /* LED is ON when Relay 1 is FWD */            C:\code\2008\Trc2008\user_routines.c
00306c   508d     MOVF      0x8d,0x0,0x0                                                                                    
00306e   0b01     ANDLW     0x1                                                                                             
003070   e001     BZ        0x3074                                                                                          
003072   8b80     BSF       0x80,0x5,0x1                                                                                    
003074   9980     BCF       0x80,0x4,0x1       Relay1_red = relay1_rev;      /* LED is ON when Relay 1 is REV */            C:\code\2008\Trc2008\user_routines.c
003076   508c     MOVF      0x8c,0x0,0x0                                                                                    
003078   0b01     ANDLW     0x1                                                                                             
00307a   e001     BZ        0x307e                                                                                          
00307c   8980     BSF       0x80,0x4,0x1                                                                                    
00307e   9f80     BCF       0x80,0x7,0x1       Relay2_green = relay2_fwd;    /* LED is ON when Relay 2 is FWD */            C:\code\2008\Trc2008\user_routines.c
003080   508d     MOVF      0x8d,0x0,0x0                                                                                    
003082   0b02     ANDLW     0x2                                                                                             
003084   e001     BZ        0x3088                                                                                          
003086   8f80     BSF       0x80,0x7,0x1                                                                                    
003088   9d80     BCF       0x80,0x6,0x1       Relay2_red = relay2_rev;      /* LED is ON when Relay 2 is REV */            C:\code\2008\Trc2008\user_routines.c
00308a   508c     MOVF      0x8c,0x0,0x0                                                                                    
00308c   0b02     ANDLW     0x2                                                                                             
00308e   e001     BZ        0x3092                                                                                          
003090   8d80     BSF       0x80,0x6,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
003092   5081     MOVF      0x81,0x0,0x0       Switch1_LED = !(int)rc_dig_in01;                                             C:\code\2008\Trc2008\user_routines.c
003094   0b04     ANDLW     0x4                                                                                             
003096   e001     BZ        0x309a                                                                                          
003098   0e01     MOVLW     0x1                                                                                             
00309a   6e00     MOVWF     0x0,0x0                                                                                         
00309c   6a01     CLRF      0x1,0x0                                                                                         
00309e   5000     MOVF      0x0,0x0,0x0                                                                                     
0030a0   1001     IORWF     0x1,0x0,0x0                                                                                     
0030a2   e002     BZ        0x30a8                                                                                          
0030a4   0e00     MOVLW     0x0                                                                                             
0030a6   d001     BRA       0x30aa                                                                                          
0030a8   0e01     MOVLW     0x1                                                                                             
0030aa   0b01     ANDLW     0x1                                                                                             
0030ac   6ef3     MOVWF     0xf3,0x0                                                                                        
0030ae   0efe     MOVLW     0xfe                                                                                            
0030b0   1581     ANDWF     0x81,0x0,0x1                                                                                    
0030b2   10f3     IORWF     0xf3,0x0,0x0                                                                                    
0030b4   6f81     MOVWF     0x81,0x1                                                                                        
0030b6   5081     MOVF      0x81,0x0,0x0       Switch2_LED = !(int)rc_dig_in02;                                             C:\code\2008\Trc2008\user_routines.c
0030b8   0b08     ANDLW     0x8                                                                                             
0030ba   e001     BZ        0x30be                                                                                          
0030bc   0e01     MOVLW     0x1                                                                                             
0030be   6e00     MOVWF     0x0,0x0                                                                                         
0030c0   6a01     CLRF      0x1,0x0                                                                                         
0030c2   5000     MOVF      0x0,0x0,0x0                                                                                     
0030c4   1001     IORWF     0x1,0x0,0x0                                                                                     
0030c6   e002     BZ        0x30cc                                                                                          
0030c8   0e00     MOVLW     0x0                                                                                             
0030ca   d001     BRA       0x30ce                                                                                          
0030cc   0e01     MOVLW     0x1                                                                                             
0030ce   0b01     ANDLW     0x1                                                                                             
0030d0   6ef3     MOVWF     0xf3,0x0                                                                                        
0030d2   46f3     RLNCF     0xf3,0x1,0x0                                                                                    
0030d4   0efd     MOVLW     0xfd                                                                                            
0030d6   1581     ANDWF     0x81,0x0,0x1                                                                                    
0030d8   10f3     IORWF     0xf3,0x0,0x0                                                                                    
0030da   6f81     MOVWF     0x81,0x1                                                                                        
                                               //Switch3_LED = !(int)rc_dig_in03;                                           C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                             } /* (user_display_mode = 0) (User Mode is Off) */                             C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
0030dc   d052     BRA       0x3182           else  /* User Mode is On - displays data in OI 4-digit display*/               C:\code\2008\Trc2008\user_routines.c
                                             {                                                                              C:\code\2008\Trc2008\user_routines.c
0030de   c1b7     MOVFF     0x1b7,0x42         User_Mode_byte = backup_voltage*10; /* so that decimal doesn't get truncated. */ C:\code\2008\Trc2008\user_routines.c
0030e0   f042                                                                                                               
0030e2   ec6b     CALL      0x3cd6,0x0                                                                                      
0030e4   f01e                                                                                                               
0030e6   c040     MOVFF     0x40,0x8                                                                                        
0030e8   f008                                                                                                               
0030ea   c041     MOVFF     0x41,0x9                                                                                        
0030ec   f009                                                                                                               
0030ee   c042     MOVFF     0x42,0xa                                                                                        
0030f0   f00a                                                                                                               
0030f2   c043     MOVFF     0x43,0xb                                                                                        
0030f4   f00b                                                                                                               
0030f6   0e71     MOVLW     0x71                                                                                            
0030f8   6e45     MOVWF     0x45,0x0                                                                                        
0030fa   0e3d     MOVLW     0x3d                                                                                            
0030fc   6e46     MOVWF     0x46,0x0                                                                                        
0030fe   0e7a     MOVLW     0x7a                                                                                            
003100   6e47     MOVWF     0x47,0x0                                                                                        
003102   0e41     MOVLW     0x41                                                                                            
003104   6e48     MOVWF     0x48,0x0                                                                                        
003106   c008     MOVFF     0x8,0x40                                                                                        
003108   f040                                                                                                               
00310a   c009     MOVFF     0x9,0x41                                                                                        
00310c   f041                                                                                                               
00310e   c00a     MOVFF     0xa,0x42                                                                                        
003110   f042                                                                                                               
003112   c00b     MOVFF     0xb,0x43                                                                                        
003114   f043                                                                                                               
003116   eccf     CALL      0x3d9e,0x0                                                                                      
003118   f01e                                                                                                               
00311a   c040     MOVFF     0x40,0x4                                                                                        
00311c   f004                                                                                                               
00311e   c041     MOVFF     0x41,0x5                                                                                        
003120   f005                                                                                                               
003122   c042     MOVFF     0x42,0x6                                                                                        
003124   f006                                                                                                               
003126   c043     MOVFF     0x43,0x7                                                                                        
003128   f007                                                                                                               
00312a   6a45     CLRF      0x45,0x0                                                                                        
00312c   6a46     CLRF      0x46,0x0                                                                                        
00312e   0e80     MOVLW     0x80                                                                                            
003130   6e47     MOVWF     0x47,0x0                                                                                        
003132   0e43     MOVLW     0x43                                                                                            
003134   6e48     MOVWF     0x48,0x0                                                                                        
003136   c004     MOVFF     0x4,0x40                                                                                        
003138   f040                                                                                                               
00313a   c005     MOVFF     0x5,0x41                                                                                        
00313c   f041                                                                                                               
00313e   c006     MOVFF     0x6,0x42                                                                                        
003140   f042                                                                                                               
003142   c007     MOVFF     0x7,0x43                                                                                        
003144   f043                                                                                                               
003146   ec7c     CALL      0x3cf8,0x0                                                                                      
003148   f01e                                                                                                               
00314a   c040     MOVFF     0x40,0x0                                                                                        
00314c   f000                                                                                                               
00314e   c041     MOVFF     0x41,0x1                                                                                        
003150   f001                                                                                                               
003152   c042     MOVFF     0x42,0x2                                                                                        
003154   f002                                                                                                               
003156   c043     MOVFF     0x43,0x3                                                                                        
003158   f003                                                                                                               
00315a   6a45     CLRF      0x45,0x0                                                                                        
00315c   6a46     CLRF      0x46,0x0                                                                                        
00315e   0e20     MOVLW     0x20                                                                                            
003160   6e47     MOVWF     0x47,0x0                                                                                        
003162   0e41     MOVLW     0x41                                                                                            
003164   6e48     MOVWF     0x48,0x0                                                                                        
003166   c000     MOVFF     0x0,0x40                                                                                        
003168   f040                                                                                                               
00316a   c001     MOVFF     0x1,0x41                                                                                        
00316c   f041                                                                                                               
00316e   c002     MOVFF     0x2,0x42                                                                                        
003170   f042                                                                                                               
003172   c003     MOVFF     0x3,0x43                                                                                        
003174   f043                                                                                                               
003176   eccf     CALL      0x3d9e,0x0                                                                                      
003178   f01e                                                                                                               
00317a   ecc3     CALL      0x3f86,0x0                                                                                      
00317c   f01f                                                                                                               
00317e   c042     MOVFF     0x42,0x180                                                                                      
003180   f180                                                                                                               
                                             }                                                                              C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
003182   cfd9     MOVFF     0xfd9,0xfe1    } /* END Default_Routine(); */                                                   C:\code\2008\Trc2008\user_routines.c
003184   ffe1                                                                                                               
003186   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003188   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00318a   ffd9                                                                                                               
00318c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                                                                                                            C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\code\2008\Trc2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\code\2008\Trc2008\user_routines_fast.c
                                           *  of the routines below.                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                           * USAGE:                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\code\2008\Trc2008\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\code\2008\Trc2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\code\2008\Trc2008\user_routines_fast.c
                                           *                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "pwm.h"                                                                 C:\code\2008\Trc2008\user_routines_fast.c
                                           // #include "user_Serialdrv.h"                                                   C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "adc.h"                                                                 C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "encoder.h"                                                             C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "gyro.h"                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           extern Servo Left, Right;                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /*** DEFINE USER VARIABLES AND INITIALIZE THEM HERE ***/                         C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines_fast.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\code\2008\Trc2008\user_routines_fast.c
                                           * CALLED FROM:   nowhere by default                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\code\2008\Trc2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\code\2008\Trc2008\user_routines_fast.c
                                           void InterruptVectorLow (void)                                                   C:\code\2008\Trc2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                             _asm                                                                           C:\code\2008\Trc2008\user_routines_fast.c
000818   ef10     GOTO      0x5020             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\code\2008\Trc2008\user_routines_fast.c
00081a   f028                                                                                                               
                                             _endasm                                                                        C:\code\2008\Trc2008\user_routines_fast.c
00081c   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines_fast.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\code\2008\Trc2008\user_routines_fast.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\code\2008\Trc2008\user_routines_fast.c
                                           * If you want to use these external low priority interrupts or any of the        C:\code\2008\Trc2008\user_routines_fast.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\code\2008\Trc2008\user_routines_fast.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\code\2008\Trc2008\user_routines_fast.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\code\2008\Trc2008\user_routines_fast.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\code\2008\Trc2008\user_routines_fast.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\code\2008\Trc2008\user_routines_fast.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\code\2008\Trc2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           #pragma code                                                                     C:\code\2008\Trc2008\user_routines_fast.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD,section(".tmpdata")           C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
005020   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\code\2008\Trc2008\user_routines_fast.c
005022   ffe4                                                                                                               
005024   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
005026   ffe4                                                                                                               
005028   6ee4     MOVWF     0xe4,0x0                                                                                        
00502a   cfda     MOVFF     0xfda,0xfe4                                                                                     
00502c   ffe4                                                                                                               
00502e   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005030   ffda                                                                                                               
005032   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
005034   ffe4                                                                                                               
005036   cfea     MOVFF     0xfea,0xfe4                                                                                     
005038   ffe4                                                                                                               
00503a   cff3     MOVFF     0xff3,0xfe4                                                                                     
00503c   ffe4                                                                                                               
00503e   cff4     MOVFF     0xff4,0xfe4                                                                                     
005040   ffe4                                                                                                               
005042   ee00     LFSR      0x0,0x0                                                                                         
005044   f000                                                                                                               
005046   0e24     MOVLW     0x24                                                                                            
005048   04e8     DECF      0xe8,0x0,0x0                                                                                    
00504a   e303     BNC       0x5052                                                                                          
00504c   cfee     MOVFF     0xfee,0xfe4                                                                                     
00504e   ffe4                                                                                                               
005050   d7fb     BRA       0x5048                                                                                          
005052   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005054   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
005056   ffe6                                                                                                               
005058   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00505a   ffd9                                                                                                               
00505c   0e02     MOVLW     0x2                                                                                             
00505e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                           	unsigned char Port_B;                                                           C:\code\2008\Trc2008\user_routines_fast.c
                                           	unsigned char Port_B_Delta;                                                     C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
005060   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.RC1IF && PIE1bits.RC1IE) // rx1 interrupt?                         C:\code\2008\Trc2008\user_routines_fast.c
005062   0b20     ANDLW     0x20                                                                                            
005064   e006     BZ        0x5072                                                                                          
005066   509d     MOVF      0x9d,0x0,0x0                                                                                    
005068   0b20     ANDLW     0x20                                                                                            
00506a   e003     BZ        0x5072                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_RX                                               C:\code\2008\Trc2008\user_routines_fast.c
00506c   ec18     CALL      0x4a30,0x0     		Rx_1_Int_Handler(); // call the rx1 interrupt handler (in serial_ports.c)      C:\code\2008\Trc2008\user_routines_fast.c
00506e   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
005070   d05d     BRA       0x512c         	else if (PIR3bits.RC2IF && PIE3bits.RC2IE) // rx2 interrupt?                    C:\code\2008\Trc2008\user_routines_fast.c
005072   50a4     MOVF      0xa4,0x0,0x0                                                                                    
005074   0b20     ANDLW     0x20                                                                                            
005076   e006     BZ        0x5084                                                                                          
005078   50a3     MOVF      0xa3,0x0,0x0                                                                                    
00507a   0b20     ANDLW     0x20                                                                                            
00507c   e003     BZ        0x5084                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_RX                                               C:\code\2008\Trc2008\user_routines_fast.c
00507e   ec37     CALL      0x4a6e,0x0     		Rx_2_Int_Handler(); // call the rx2 interrupt handler (in serial_ports.c)      C:\code\2008\Trc2008\user_routines_fast.c
005080   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
005082   d054     BRA       0x512c         	else if (PIR1bits.TX1IF && PIE1bits.TX1IE) // tx1 interrupt?                    C:\code\2008\Trc2008\user_routines_fast.c
005084   509e     MOVF      0x9e,0x0,0x0                                                                                    
005086   0b10     ANDLW     0x10                                                                                            
005088   e006     BZ        0x5096                                                                                          
00508a   509d     MOVF      0x9d,0x0,0x0                                                                                    
00508c   0b10     ANDLW     0x10                                                                                            
00508e   e003     BZ        0x5096                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_ONE_TX                                               C:\code\2008\Trc2008\user_routines_fast.c
005090   ec56     CALL      0x4aac,0x0     		Tx_1_Int_Handler(); // call the tx1 interrupt handler (in serial_ports.c)      C:\code\2008\Trc2008\user_routines_fast.c
005092   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
005094   d04b     BRA       0x512c         	else if (PIR3bits.TX2IF && PIE3bits.TX2IE) // tx2 interrupt?                    C:\code\2008\Trc2008\user_routines_fast.c
005096   50a4     MOVF      0xa4,0x0,0x0                                                                                    
005098   0b10     ANDLW     0x10                                                                                            
00509a   e006     BZ        0x50a8                                                                                          
00509c   50a3     MOVF      0xa3,0x0,0x0                                                                                    
00509e   0b10     ANDLW     0x10                                                                                            
0050a0   e003     BZ        0x50a8                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_SERIAL_PORT_TWO_TX                                               C:\code\2008\Trc2008\user_routines_fast.c
0050a2   ec6e     CALL      0x4adc,0x0     		Tx_2_Int_Handler(); // call the tx2 interrupt handler (in serial_ports.c)      C:\code\2008\Trc2008\user_routines_fast.c
0050a4   f025                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050a6   d042     BRA       0x512c         	else if(PIR1bits.TMR2IF && PIE1bits.TMR2IE) // timer 2 interrupt?               C:\code\2008\Trc2008\user_routines_fast.c
0050a8   509e     MOVF      0x9e,0x0,0x0                                                                                    
0050aa   0b02     ANDLW     0x2                                                                                             
0050ac   e007     BZ        0x50bc                                                                                          
0050ae   509d     MOVF      0x9d,0x0,0x0                                                                                    
0050b0   0b02     ANDLW     0x2                                                                                             
0050b2   e004     BZ        0x50bc                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050b4   929e     BCF       0x9e,0x1,0x0   		PIR1bits.TMR2IF = 0; // clear the timer 2 interrupt flag [92]                  C:\code\2008\Trc2008\user_routines_fast.c
0050b6   ec9c     CALL      0x4338,0x0     		Timer_2_Int_Handler(); // call the timer 2 interrupt handler (in adc.c)        C:\code\2008\Trc2008\user_routines_fast.c
0050b8   f021                                                                                                               
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050ba   d038     BRA       0x512c         	else if(PIR1bits.ADIF && PIE1bits.ADIE) // ADC interrupt                        C:\code\2008\Trc2008\user_routines_fast.c
0050bc   509e     MOVF      0x9e,0x0,0x0                                                                                    
0050be   0b40     ANDLW     0x40                                                                                            
0050c0   e007     BZ        0x50d0                                                                                          
0050c2   509d     MOVF      0x9d,0x0,0x0                                                                                    
0050c4   0b40     ANDLW     0x40                                                                                            
0050c6   e004     BZ        0x50d0                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050c8   9c9e     BCF       0x9e,0x6,0x0   		PIR1bits.ADIF = 0; // clear the ADC interrupt flag                             C:\code\2008\Trc2008\user_routines_fast.c
0050ca   ec9e     CALL      0x433c,0x0     		ADC_Int_Handler(); // call the ADC interrupt handler (in adc.c)                C:\code\2008\Trc2008\user_routines_fast.c
0050cc   f021                                                                                                               
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050ce   d02e     BRA       0x512c         	else if (INTCON3bits.INT2IF && INTCON3bits.INT2IE) // encoder 1 interrupt?      C:\code\2008\Trc2008\user_routines_fast.c
0050d0   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0050d2   0b02     ANDLW     0x2                                                                                             
0050d4   e007     BZ        0x50e4                                                                                          
0050d6   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0050d8   0b10     ANDLW     0x10                                                                                            
0050da   e004     BZ        0x50e4                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050dc   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0; // clear the interrupt flag                            C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_1                                                        C:\code\2008\Trc2008\user_routines_fast.c
0050de   ecf1     CALL      0x57e2,0x0     		Encoder_1_Int_Handler(); // call the left encoder interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
0050e0   f02b                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           	//LOOK HERE: I'm possibly breaking something; should be INT3IF                  C:\code\2008\Trc2008\user_routines_fast.c
0050e2   d024     BRA       0x512c         	else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE) // encoder 2 interrupt?      C:\code\2008\Trc2008\user_routines_fast.c
0050e4   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0050e6   0b04     ANDLW     0x4                                                                                             
0050e8   e007     BZ        0x50f8                                                                                          
0050ea   50f0     MOVF      0xf0,0x0,0x0                                                                                    
0050ec   0b20     ANDLW     0x20                                                                                            
0050ee   e004     BZ        0x50f8                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050f0   94f0     BCF       0xf0,0x2,0x0   		INTCON3bits.INT3IF = 0; // clear the interrupt flag                            C:\code\2008\Trc2008\user_routines_fast.c
                                           		#ifdef ENABLE_ENCODER_2                                                        C:\code\2008\Trc2008\user_routines_fast.c
0050f2   ec2d     CALL      0x585a,0x0     		Encoder_2_Int_Handler(); // call right encoder interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
0050f4   f02c                                                                                                               
                                           		#endif                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
0050f6   d01a     BRA       0x512c         	else if (INTCONbits.RBIF && INTCONbits.RBIE) // encoder 3-6 interrupt?          C:\code\2008\Trc2008\user_routines_fast.c
0050f8   50f2     MOVF      0xf2,0x0,0x0                                                                                    
0050fa   0b01     ANDLW     0x1                                                                                             
0050fc   e017     BZ        0x512c                                                                                          
0050fe   50f2     MOVF      0xf2,0x0,0x0                                                                                    
005100   0b08     ANDLW     0x8                                                                                             
005102   e014     BZ        0x512c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\user_routines_fast.c
005104   5081     MOVF      0x81,0x0,0x0   		Port_B = PORTB; // remove the "mismatch condition" by reading port b             C:\code\2008\Trc2008\user_routines_fast.c
005106   6edf     MOVWF     0xdf,0x0                                                                                        
005108   90f2     BCF       0xf2,0x0,0x0   		INTCONbits.RBIF = 0; // clear the interrupt flag                               C:\code\2008\Trc2008\user_routines_fast.c
00510a   50df     MOVF      0xdf,0x0,0x0   		Port_B_Delta = Port_B ^ Old_Port_B; // determine which bits have changed       C:\code\2008\Trc2008\user_routines_fast.c
00510c   0102     MOVLB     0x2                                                                                             
00510e   1991     XORWF     0x91,0x0,0x1                                                                                    
005110   6ee7     MOVWF     0xe7,0x0                                                                                        
005112   0e01     MOVLW     0x1                                                                                             
005114   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
005116   ffdb                                                                                                               
005118   cfdf     MOVFF     0xfdf,0x291    		Old_Port_B = Port_B; // save a copy of port b for next time around             C:\code\2008\Trc2008\user_routines_fast.c
00511a   f291                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\user_routines_fast.c
00511c   a8db     BTFSS     0xdb,0x4,0x0   		if(Port_B_Delta & 0x10) // did external interrupt 3 change state?              C:\code\2008\Trc2008\user_routines_fast.c
00511e   d000     BRA       0x5120                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_3                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           			Encoder_3_Int_Handler(Port_B & 0x10 ? 1 : 0); // call the encoder 3 interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Trc2008\user_routines_fast.c
005120   aadb     BTFSS     0xdb,0x5,0x0   		if(Port_B_Delta & 0x20) // did external interrupt 4 change state?              C:\code\2008\Trc2008\user_routines_fast.c
005122   d000     BRA       0x5124                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_4                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           			Encoder_4_Int_Handler(Port_B & 0x20 ? 1 : 0); // call the encoder 4 interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Trc2008\user_routines_fast.c
005124   acdb     BTFSS     0xdb,0x6,0x0   		if(Port_B_Delta & 0x40) // did external interrupt 5 change state?              C:\code\2008\Trc2008\user_routines_fast.c
005126   d000     BRA       0x5128                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_5                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           			Encoder_5_Int_Handler(Port_B & 0x40 ? 1 : 0); // call the encoder 5 interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Trc2008\user_routines_fast.c
005128   aedb     BTFSS     0xdb,0x7,0x0   		if(Port_B_Delta & 0x80) // did external interrupt 6 change state?              C:\code\2008\Trc2008\user_routines_fast.c
00512a   d000     BRA       0x512c                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           			#ifdef ENABLE_ENCODER_6                                                       C:\code\2008\Trc2008\user_routines_fast.c
                                           			Encoder_6_Int_Handler(Port_B & 0x80 ? 1 : 0); // call the encoder 6 interrupt handler (in encoder.c) C:\code\2008\Trc2008\user_routines_fast.c
                                           			#endif                                                                        C:\code\2008\Trc2008\user_routines_fast.c
                                           		}                                                                              C:\code\2008\Trc2008\user_routines_fast.c
                                           	}                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //  ***  IFI Code Starts Here***                                                 C:\code\2008\Trc2008\user_routines_fast.c
                                           //                                                                               C:\code\2008\Trc2008\user_routines_fast.c
                                           //  unsigned char int_byte;                                                      C:\code\2008\Trc2008\user_routines_fast.c
                                           //  if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\code\2008\Trc2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //    INTCON3bits.INT2IF = 0;                                                    C:\code\2008\Trc2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //  else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\code\2008\Trc2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //    INTCON3bits.INT3IF = 0;                                                    C:\code\2008\Trc2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //  else if (INTCONbits.RBIF && INTCONbits.RBIE)  /* DIG I/O 3-6 (RB4, RB5, RB6, or RB7) changed. */ C:\code\2008\Trc2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //    int_byte = PORTB;          /* You must read or write to PORTB */           C:\code\2008\Trc2008\user_routines_fast.c
                                           //    INTCONbits.RBIF = 0;     /*     and clear the interrupt flag         */    C:\code\2008\Trc2008\user_routines_fast.c
                                           //  }                                        /*     to clear the interrupt condition.  */ C:\code\2008\Trc2008\user_routines_fast.c
                                           //  else                                                                         C:\code\2008\Trc2008\user_routines_fast.c
                                           //  {                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           //    CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */ C:\code\2008\Trc2008\user_routines_fast.c
                                           //  }                                                                            C:\code\2008\Trc2008\user_routines_fast.c
00512c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\user_routines_fast.c
00512e   ffe1                                                                                                               
005130   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005132   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005134   ffd9                                                                                                               
005136   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005138   ee00     LFSR      0x0,0x23                                                                                        
00513a   f023                                                                                                               
00513c   0e24     MOVLW     0x24                                                                                            
00513e   04e8     DECF      0xe8,0x0,0x0                                                                                    
005140   e303     BNC       0x5148                                                                                          
005142   cfe5     MOVFF     0xfe5,0xfed                                                                                     
005144   ffed                                                                                                               
005146   d7fb     BRA       0x513e                                                                                          
005148   cfe5     MOVFF     0xfe5,0xff4                                                                                     
00514a   fff4                                                                                                               
00514c   cfe5     MOVFF     0xfe5,0xff3                                                                                     
00514e   fff3                                                                                                               
005150   cfe5     MOVFF     0xfe5,0xfea                                                                                     
005152   ffea                                                                                                               
005154   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
005156   ffe9                                                                                                               
005158   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00515a   ffda                                                                                                               
00515c   50e5     MOVF      0xe5,0x0,0x0                                                                                    
00515e   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
005160   ffe0                                                                                                               
005162   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
005164   ffd8                                                                                                               
005166   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\code\2008\Trc2008\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\code\2008\Trc2008\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\code\2008\Trc2008\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\code\2008\Trc2008\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\code\2008\Trc2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\code\2008\Trc2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                             /* Initialize all PWMs and Relays when entering Autonomous mode, or else it    C:\code\2008\Trc2008\user_routines_fast.c
                                                will be stuck with the last values mapped from the joysticks.  Remember,    C:\code\2008\Trc2008\user_routines_fast.c
                                                even when Disabled it is reading inputs from the Operator Interface.        C:\code\2008\Trc2008\user_routines_fast.c
                                             */                                                                             C:\code\2008\Trc2008\user_routines_fast.c
005168   0101     MOVLB     0x1              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\code\2008\Trc2008\user_routines_fast.c
00516a   0e7f     MOVLW     0x7f                                                                                            
00516c   6f8b     MOVWF     0x8b,0x1                                                                                        
00516e   c18b     MOVFF     0x18b,0x18a                                                                                     
005170   f18a                                                                                                               
005172   c18b     MOVFF     0x18b,0x189                                                                                     
005174   f189                                                                                                               
005176   c18b     MOVFF     0x18b,0x188                                                                                     
005178   f188                                                                                                               
00517a   c18b     MOVFF     0x18b,0x187                                                                                     
00517c   f187                                                                                                               
00517e   c18b     MOVFF     0x18b,0x186                                                                                     
005180   f186                                                                                                               
005182   c18b     MOVFF     0x18b,0x185                                                                                     
005184   f185                                                                                                               
005186   c18b     MOVFF     0x18b,0x184                                                                                     
005188   f184                                                                                                               
00518a   6f93     MOVWF     0x93,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\code\2008\Trc2008\user_routines_fast.c
00518c   c193     MOVFF     0x193,0x192                                                                                     
00518e   f192                                                                                                               
005190   c193     MOVFF     0x193,0x191                                                                                     
005192   f191                                                                                                               
005194   c193     MOVFF     0x193,0x190                                                                                     
005196   f190                                                                                                               
005198   c193     MOVFF     0x193,0x18f                                                                                     
00519a   f18f                                                                                                               
00519c   c193     MOVFF     0x193,0x18e                                                                                     
00519e   f18e                                                                                                               
0051a0   c193     MOVFF     0x193,0x18d                                                                                     
0051a2   f18d                                                                                                               
0051a4   c193     MOVFF     0x193,0x18c                                                                                     
0051a6   f18c                                                                                                               
0051a8   928c     BCF       0x8c,0x1,0x0     relay1_fwd = relay1_rev = relay2_fwd = relay2_rev = 0;                         C:\code\2008\Trc2008\user_routines_fast.c
0051aa   928d     BCF       0x8d,0x1,0x0                                                                                    
0051ac   908c     BCF       0x8c,0x0,0x0                                                                                    
0051ae   908d     BCF       0x8d,0x0,0x0                                                                                    
0051b0   968c     BCF       0x8c,0x3,0x0     relay3_fwd = relay3_rev = relay4_fwd = relay4_rev = 0;                         C:\code\2008\Trc2008\user_routines_fast.c
0051b2   968d     BCF       0x8d,0x3,0x0                                                                                    
0051b4   948c     BCF       0x8c,0x2,0x0                                                                                    
0051b6   948d     BCF       0x8d,0x2,0x0                                                                                    
0051b8   9a8c     BCF       0x8c,0x5,0x0     relay5_fwd = relay5_rev = relay6_fwd = relay6_rev = 0;                         C:\code\2008\Trc2008\user_routines_fast.c
0051ba   9a8d     BCF       0x8d,0x5,0x0                                                                                    
0051bc   988c     BCF       0x8c,0x4,0x0                                                                                    
0051be   988d     BCF       0x8d,0x4,0x0                                                                                    
0051c0   9e8c     BCF       0x8c,0x7,0x0     relay7_fwd = relay7_rev = relay8_fwd = relay8_rev = 0;                         C:\code\2008\Trc2008\user_routines_fast.c
0051c2   9091     BCF       0x91,0x0,0x0                                                                                    
0051c4   9c8c     BCF       0x8c,0x6,0x0                                                                                    
0051c6   9c8d     BCF       0x8d,0x6,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
0051c8   0101     MOVLB     0x1              while (autonomous_mode)   /* DO NOT CHANGE! */                                 C:\code\2008\Trc2008\user_routines_fast.c
0051ca   ada1     BTFSS     0xa1,0x6,0x1                                                                                    
0051cc   d023     BRA       0x5214                                                                                          
005212   d7da     BRA       0x51c8                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines_fast.c
0051ce   0101     MOVLB     0x1                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\code\2008\Trc2008\user_routines_fast.c
0051d0   a1c0     BTFSS     0xc0,0x0,0x1                                                                                    
0051d2   d01f     BRA       0x5212                                                                                          
                                               {                                                                            C:\code\2008\Trc2008\user_routines_fast.c
0051d4   0ea0     MOVLW     0xa0                   Getdata(&rxdata);   /* DO NOT DELETE, or you will be stuck here forever! */ C:\code\2008\Trc2008\user_routines_fast.c
0051d6   6ee6     MOVWF     0xe6,0x0                                                                                        
0051d8   0e01     MOVLW     0x1                                                                                             
0051da   6ee6     MOVWF     0xe6,0x0                                                                                        
0051dc   ecb0     CALL      0x2560,0x0                                                                                      
0051de   f012                                                                                                               
0051e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0051e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0051e4   d818     RCALL     0x5216         		Process_Data_From_Local_IO(); //Updates Gyro, ADC                              C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                   /* Add your own autonomous code here. */                                 C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                   //Generate_Pwms(pwm13,pwm14,pwm15,pwm16);                                C:\code\2008\Trc2008\user_routines_fast.c
0051e6   c193     MOVFF     0x193,0xfe6    		PWM(pwm13,pwm14,pwm15,pwm16);                                                  C:\code\2008\Trc2008\user_routines_fast.c
0051e8   ffe6                                                                                                               
0051ea   c192     MOVFF     0x192,0xfe6                                                                                     
0051ec   ffe6                                                                                                               
0051ee   c191     MOVFF     0x191,0xfe6                                                                                     
0051f0   ffe6                                                                                                               
0051f2   c190     MOVFF     0x190,0xfe6                                                                                     
0051f4   ffe6                                                                                                               
0051f6   ecf0     CALL      0x55e0,0x0                                                                                      
0051f8   f02a                                                                                                               
0051fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0051fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0051fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005200   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
005202   0e80     MOVLW     0x80                   Putdata(&txdata);   /* DO NOT DELETE, or you will get no PWM outputs! */ C:\code\2008\Trc2008\user_routines_fast.c
005204   6ee6     MOVWF     0xe6,0x0                                                                                        
005206   0e01     MOVLW     0x1                                                                                             
005208   6ee6     MOVWF     0xe6,0x0                                                                                        
00520a   ecc9     CALL      0x2592,0x0                                                                                      
00520c   f012                                                                                                               
00520e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005210   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                             }                                                                              C:\code\2008\Trc2008\user_routines_fast.c
005214   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Trc2008\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\code\2008\Trc2008\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\code\2008\Trc2008\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\code\2008\Trc2008\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\code\2008\Trc2008\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\code\2008\Trc2008\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\code\2008\Trc2008\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           {                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                             /* Add code here that you want to be executed every program loop. */           C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                             // new ADC data available?                                                     C:\code\2008\Trc2008\user_routines_fast.c
005216   ec87     CALL      0x430e,0x0       if(Get_ADC_Result_Count())                                                     C:\code\2008\Trc2008\user_routines_fast.c
005218   f021                                                                                                               
00521a   0900     IORLW     0x0                                                                                             
00521c   e004     BZ        0x5226                                                                                          
                                             {                                                                              C:\code\2008\Trc2008\user_routines_fast.c
00521e   ec90     CALL      0x4d20,0x0         Process_Gyro_Data();                                                         C:\code\2008\Trc2008\user_routines_fast.c
005220   f026                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\user_routines_fast.c
005222   ec97     CALL      0x432e,0x0         Reset_ADC_Result_Count();                                                    C:\code\2008\Trc2008\user_routines_fast.c
005224   f021                                                                                                               
                                             }	                                                                             C:\code\2008\Trc2008\user_routines_fast.c
005226   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                                                                                                            C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************/ C:\code\2008\Trc2008\user_routines_fast.c
                                           /******************************************************************************* C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	TITLE:		pwm.c                                                                  C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	VERSION:	0.1 (Beta)                                                            C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	DATE:		29-Dec-2006                                                             C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\pwm.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Trc2008\pwm.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\pwm.c
                                           *				or un-modified, publicly available on the internet or elsewhere             C:\code\2008\Trc2008\pwm.c
                                           *				without permission. Thanks.                                                 C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *				Copyright ©2006-2007 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           ******************************************************************************** C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\pwm.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\pwm.c
                                           *	29-Dec-2006  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\pwm.c
                                           #include "pwm.h"                                                                 C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           /******************************************************************************* C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	FUNCTION:		Initialize_PWM()                                                    C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	PURPOSE:		CCP and timer initialization				                                     C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	CALLED FROM:	PWM()                                                             C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	PARAMETERS:		none                                                              C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\pwm.c
                                           void Initialize_PWM(void)                                                        C:\code\2008\Trc2008\pwm.c
                                           {                                                                                C:\code\2008\Trc2008\pwm.c
                                           	// select 16-bit read/writes to timer 3                                         C:\code\2008\Trc2008\pwm.c
0055c8   8eb1     BSF       0xb1,0x7,0x0   	T3CONbits.RD16 = 1;                                                             C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// CCP2 through CCP5 will use timer 3 for compare mode                          C:\code\2008\Trc2008\pwm.c
0055ca   86b1     BSF       0xb1,0x3,0x0   	T3CONbits.T3CCP1 = 1;                                                           C:\code\2008\Trc2008\pwm.c
0055cc   9cb1     BCF       0xb1,0x6,0x0   	T3CONbits.T3CCP2 = 0;                                                           C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// use a 1:1 prescale for timer 3                                               C:\code\2008\Trc2008\pwm.c
0055ce   9ab1     BCF       0xb1,0x5,0x0   	T3CONbits.T3CKPS1 = 0;                                                          C:\code\2008\Trc2008\pwm.c
0055d0   98b1     BCF       0xb1,0x4,0x0   	T3CONbits.T3CKPS0 = 0;                                                          C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// use the internal 10MHz clock for timer 3 (each timer "tick" equals 100ns)    C:\code\2008\Trc2008\pwm.c
0055d2   92b1     BCF       0xb1,0x1,0x0   	T3CONbits.TMR3CS = 0;                                                           C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// disable the timer 3 overflow interrupt                                       C:\code\2008\Trc2008\pwm.c
0055d4   92a0     BCF       0xa0,0x1,0x0   	PIE2bits.TMR3IE = 0;                                                            C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// disable the CCP interrupts                                                   C:\code\2008\Trc2008\pwm.c
0055d6   90a0     BCF       0xa0,0x0,0x0   	PIE2bits.CCP2IE = 0;                                                            C:\code\2008\Trc2008\pwm.c
0055d8   90a3     BCF       0xa3,0x0,0x0   	PIE3bits.CCP3IE = 0;                                                            C:\code\2008\Trc2008\pwm.c
0055da   92a3     BCF       0xa3,0x1,0x0   	PIE3bits.CCP4IE = 0;                                                            C:\code\2008\Trc2008\pwm.c
0055dc   94a3     BCF       0xa3,0x2,0x0   	PIE3bits.CCP5IE = 0;	                                                           C:\code\2008\Trc2008\pwm.c
0055de   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           /******************************************************************************* C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	FUNCTION:		PWM()                                                               C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	PURPOSE:		Replacement for IFI's Generate_Pwms() function						                 C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	CALLED FROM:	user_routines.c/Process_Data_From_Master_uP()                     C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	PARAMETERS:		Four unsigned char PWM position/velocity values                   C:\code\2008\Trc2008\pwm.c
                                           *					for PWM outputs 13, 14, 15 and 16.                                         C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	RETURNS:		nothing                                                              C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\pwm.c
                                           *                                                                                C:\code\2008\Trc2008\pwm.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\pwm.c
0055e0   cfd9     MOVFF     0xfd9,0xfe6    void PWM(unsigned char pwm_13, unsigned char pwm_14, unsigned char pwm_15, unsigned char pwm_16) C:\code\2008\Trc2008\pwm.c
0055e2   ffe6                                                                                                               
0055e4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0055e6   ffd9                                                                                                               
0055e8   0e08     MOVLW     0x8                                                                                             
0055ea   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\pwm.c
                                           	int temp_pwm_13;                                                                C:\code\2008\Trc2008\pwm.c
                                           	int temp_pwm_14;                                                                C:\code\2008\Trc2008\pwm.c
                                           	int temp_pwm_15;                                                                C:\code\2008\Trc2008\pwm.c
                                           	int temp_pwm_16;                                                                C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// stop timer 3                                                                 C:\code\2008\Trc2008\pwm.c
0055ec   90b1     BCF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 0;                                                           C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// initialize timer 3 register to zero                                          C:\code\2008\Trc2008\pwm.c
0055ee   6ab3     CLRF      0xb3,0x0       	TMR3H = 0;                                                                      C:\code\2008\Trc2008\pwm.c
0055f0   6ab2     CLRF      0xb2,0x0       	TMR3L = 0;                                                                      C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// reset CCP hardware                                                           C:\code\2008\Trc2008\pwm.c
0055f2   6aba     CLRF      0xba,0x0       	CCP2CON = 0;                                                                    C:\code\2008\Trc2008\pwm.c
0055f4   6ab7     CLRF      0xb7,0x0       	CCP3CON = 0;                                                                    C:\code\2008\Trc2008\pwm.c
0055f6   6a73     CLRF      0x73,0x0       	CCP4CON = 0;                                                                    C:\code\2008\Trc2008\pwm.c
0055f8   6a70     CLRF      0x70,0x0       	CCP5CON = 0;                                                                    C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// calculate the number of 100 ns timer ticks                                   C:\code\2008\Trc2008\pwm.c
                                           	// needed to match the desired PWM pulse width                                  C:\code\2008\Trc2008\pwm.c
0055fa   0efe     MOVLW     0xfe           	temp_pwm_13 = (PWM_13_GAIN * ((int)pwm_13 - 127)) + PWM_13_CENTER;              C:\code\2008\Trc2008\pwm.c
0055fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0055fe   6e02     MOVWF     0x2,0x0                                                                                         
005600   6a03     CLRF      0x3,0x0                                                                                         
005602   0e7f     MOVLW     0x7f                                                                                            
005604   5e02     SUBWF     0x2,0x1,0x0                                                                                     
005606   0e00     MOVLW     0x0                                                                                             
005608   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
00560a   0e32     MOVLW     0x32                                                                                            
00560c   6e41     MOVWF     0x41,0x0                                                                                        
00560e   6a42     CLRF      0x42,0x0                                                                                        
005610   c002     MOVFF     0x2,0x46                                                                                        
005612   f046                                                                                                               
005614   c003     MOVFF     0x3,0x47                                                                                        
005616   f047                                                                                                               
005618   ec96     CALL      0x3f2c,0x0                                                                                      
00561a   f01f                                                                                                               
00561c   c03f     MOVFF     0x3f,0x0                                                                                        
00561e   f000                                                                                                               
005620   c040     MOVFF     0x40,0x1                                                                                        
005622   f001                                                                                                               
005624   0e98     MOVLW     0x98                                                                                            
005626   2600     ADDWF     0x0,0x1,0x0                                                                                     
005628   0e3a     MOVLW     0x3a                                                                                            
00562a   2201     ADDWFC    0x1,0x1,0x0                                                                                     
00562c   c000     MOVFF     0x0,0xfde                                                                                       
00562e   ffde                                                                                                               
005630   c001     MOVFF     0x1,0xfdd                                                                                       
005632   ffdd                                                                                                               
005634   0efd     MOVLW     0xfd           	temp_pwm_14 = (PWM_14_GAIN * ((int)pwm_14 - 127)) + PWM_14_CENTER;              C:\code\2008\Trc2008\pwm.c
005636   50db     MOVF      0xdb,0x0,0x0                                                                                    
005638   6e02     MOVWF     0x2,0x0                                                                                         
00563a   6a03     CLRF      0x3,0x0                                                                                         
00563c   0e7f     MOVLW     0x7f                                                                                            
00563e   5e02     SUBWF     0x2,0x1,0x0                                                                                     
005640   0e00     MOVLW     0x0                                                                                             
005642   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005644   0e32     MOVLW     0x32                                                                                            
005646   6e41     MOVWF     0x41,0x0                                                                                        
005648   6a42     CLRF      0x42,0x0                                                                                        
00564a   c002     MOVFF     0x2,0x46                                                                                        
00564c   f046                                                                                                               
00564e   c003     MOVFF     0x3,0x47                                                                                        
005650   f047                                                                                                               
005652   ec96     CALL      0x3f2c,0x0                                                                                      
005654   f01f                                                                                                               
005656   c03f     MOVFF     0x3f,0x0                                                                                        
005658   f000                                                                                                               
00565a   c040     MOVFF     0x40,0x1                                                                                        
00565c   f001                                                                                                               
00565e   0e98     MOVLW     0x98                                                                                            
005660   2600     ADDWF     0x0,0x1,0x0                                                                                     
005662   0e3a     MOVLW     0x3a                                                                                            
005664   2201     ADDWFC    0x1,0x1,0x0                                                                                     
005666   0e02     MOVLW     0x2                                                                                             
005668   c000     MOVFF     0x0,0xfdb                                                                                       
00566a   ffdb                                                                                                               
00566c   0e03     MOVLW     0x3                                                                                             
00566e   c001     MOVFF     0x1,0xfdb                                                                                       
005670   ffdb                                                                                                               
005672   0efc     MOVLW     0xfc           	temp_pwm_15 = (PWM_15_GAIN * ((int)pwm_15 - 127)) + PWM_15_CENTER;              C:\code\2008\Trc2008\pwm.c
005674   50db     MOVF      0xdb,0x0,0x0                                                                                    
005676   6e02     MOVWF     0x2,0x0                                                                                         
005678   6a03     CLRF      0x3,0x0                                                                                         
00567a   0e7f     MOVLW     0x7f                                                                                            
00567c   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00567e   0e00     MOVLW     0x0                                                                                             
005680   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
005682   0e32     MOVLW     0x32                                                                                            
005684   6e41     MOVWF     0x41,0x0                                                                                        
005686   6a42     CLRF      0x42,0x0                                                                                        
005688   c002     MOVFF     0x2,0x46                                                                                        
00568a   f046                                                                                                               
00568c   c003     MOVFF     0x3,0x47                                                                                        
00568e   f047                                                                                                               
005690   ec96     CALL      0x3f2c,0x0                                                                                      
005692   f01f                                                                                                               
005694   c03f     MOVFF     0x3f,0x0                                                                                        
005696   f000                                                                                                               
005698   c040     MOVFF     0x40,0x1                                                                                        
00569a   f001                                                                                                               
00569c   0e98     MOVLW     0x98                                                                                            
00569e   2600     ADDWF     0x0,0x1,0x0                                                                                     
0056a0   0e3a     MOVLW     0x3a                                                                                            
0056a2   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0056a4   0e04     MOVLW     0x4                                                                                             
0056a6   c000     MOVFF     0x0,0xfdb                                                                                       
0056a8   ffdb                                                                                                               
0056aa   0e05     MOVLW     0x5                                                                                             
0056ac   c001     MOVFF     0x1,0xfdb                                                                                       
0056ae   ffdb                                                                                                               
0056b0   0efb     MOVLW     0xfb           	temp_pwm_16 = (PWM_16_GAIN * ((int)pwm_16 - 127)) + PWM_16_CENTER;              C:\code\2008\Trc2008\pwm.c
0056b2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0056b4   6e02     MOVWF     0x2,0x0                                                                                         
0056b6   6a03     CLRF      0x3,0x0                                                                                         
0056b8   0e7f     MOVLW     0x7f                                                                                            
0056ba   5e02     SUBWF     0x2,0x1,0x0                                                                                     
0056bc   0e00     MOVLW     0x0                                                                                             
0056be   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
0056c0   0e32     MOVLW     0x32                                                                                            
0056c2   6e41     MOVWF     0x41,0x0                                                                                        
0056c4   6a42     CLRF      0x42,0x0                                                                                        
0056c6   c002     MOVFF     0x2,0x46                                                                                        
0056c8   f046                                                                                                               
0056ca   c003     MOVFF     0x3,0x47                                                                                        
0056cc   f047                                                                                                               
0056ce   ec96     CALL      0x3f2c,0x0                                                                                      
0056d0   f01f                                                                                                               
0056d2   c03f     MOVFF     0x3f,0x0                                                                                        
0056d4   f000                                                                                                               
0056d6   c040     MOVFF     0x40,0x1                                                                                        
0056d8   f001                                                                                                               
0056da   0e98     MOVLW     0x98                                                                                            
0056dc   2600     ADDWF     0x0,0x1,0x0                                                                                     
0056de   0e3a     MOVLW     0x3a                                                                                            
0056e0   2201     ADDWFC    0x1,0x1,0x0                                                                                     
0056e2   0e06     MOVLW     0x6                                                                                             
0056e4   c000     MOVFF     0x0,0xfdb                                                                                       
0056e6   ffdb                                                                                                               
0056e8   0e07     MOVLW     0x7                                                                                             
0056ea   c001     MOVFF     0x1,0xfdb                                                                                       
0056ec   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// load the CCP compare registers                                               C:\code\2008\Trc2008\pwm.c
0056ee   50df     MOVF      0xdf,0x0,0x0   	CCPR2L = LOBYTE((unsigned int)temp_pwm_13);                                     C:\code\2008\Trc2008\pwm.c
0056f0   6ebb     MOVWF     0xbb,0x0                                                                                        
0056f2   cfde     MOVFF     0xfde,0x0      	CCPR2H = HIBYTE((unsigned int)temp_pwm_13);                                     C:\code\2008\Trc2008\pwm.c
0056f4   f000                                                                                                               
0056f6   cfdd     MOVFF     0xfdd,0x1                                                                                       
0056f8   f001                                                                                                               
0056fa   c001     MOVFF     0x1,0x0                                                                                         
0056fc   f000                                                                                                               
0056fe   6a01     CLRF      0x1,0x0                                                                                         
005700   5000     MOVF      0x0,0x0,0x0                                                                                     
005702   6ebc     MOVWF     0xbc,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\pwm.c
005704   0e02     MOVLW     0x2            	CCPR3L = LOBYTE((unsigned int)temp_pwm_14);                                     C:\code\2008\Trc2008\pwm.c
005706   50db     MOVF      0xdb,0x0,0x0                                                                                    
005708   6eb8     MOVWF     0xb8,0x0                                                                                        
00570a   0e02     MOVLW     0x2            	CCPR3H = HIBYTE((unsigned int)temp_pwm_14);                                     C:\code\2008\Trc2008\pwm.c
00570c   cfdb     MOVFF     0xfdb,0x0                                                                                       
00570e   f000                                                                                                               
005710   0e03     MOVLW     0x3                                                                                             
005712   cfdb     MOVFF     0xfdb,0x1                                                                                       
005714   f001                                                                                                               
005716   c001     MOVFF     0x1,0x0                                                                                         
005718   f000                                                                                                               
00571a   6a01     CLRF      0x1,0x0                                                                                         
00571c   5000     MOVF      0x0,0x0,0x0                                                                                     
00571e   6eb9     MOVWF     0xb9,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\pwm.c
005720   0e04     MOVLW     0x4            	CCPR4L = LOBYTE((unsigned int)temp_pwm_15);                                     C:\code\2008\Trc2008\pwm.c
005722   50db     MOVF      0xdb,0x0,0x0                                                                                    
005724   6e74     MOVWF     0x74,0x0                                                                                        
005726   0e04     MOVLW     0x4            	CCPR4H = HIBYTE((unsigned int)temp_pwm_15);                                     C:\code\2008\Trc2008\pwm.c
005728   cfdb     MOVFF     0xfdb,0x0                                                                                       
00572a   f000                                                                                                               
00572c   0e05     MOVLW     0x5                                                                                             
00572e   cfdb     MOVFF     0xfdb,0x1                                                                                       
005730   f001                                                                                                               
005732   c001     MOVFF     0x1,0x0                                                                                         
005734   f000                                                                                                               
005736   6a01     CLRF      0x1,0x0                                                                                         
005738   5000     MOVF      0x0,0x0,0x0                                                                                     
00573a   6e75     MOVWF     0x75,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\pwm.c
00573c   0e06     MOVLW     0x6            	CCPR5L = LOBYTE((unsigned int)temp_pwm_16);                                     C:\code\2008\Trc2008\pwm.c
00573e   50db     MOVF      0xdb,0x0,0x0                                                                                    
005740   6e71     MOVWF     0x71,0x0                                                                                        
005742   0e06     MOVLW     0x6            	CCPR5H = HIBYTE((unsigned int)temp_pwm_16);                                     C:\code\2008\Trc2008\pwm.c
005744   cfdb     MOVFF     0xfdb,0x0                                                                                       
005746   f000                                                                                                               
005748   0e07     MOVLW     0x7                                                                                             
00574a   cfdb     MOVFF     0xfdb,0x1                                                                                       
00574c   f001                                                                                                               
00574e   c001     MOVFF     0x1,0x0                                                                                         
005750   f000                                                                                                               
005752   6a01     CLRF      0x1,0x0                                                                                         
005754   5000     MOVF      0x0,0x0,0x0                                                                                     
005756   6e72     MOVWF     0x72,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// disable all interrupts to prevent an interrupt routine                       C:\code\2008\Trc2008\pwm.c
                                           	// from executing after the CCP hardware is initialized                         C:\code\2008\Trc2008\pwm.c
                                           	// and the moment the timer is started                                          C:\code\2008\Trc2008\pwm.c
005758   9ef2     BCF       0xf2,0x7,0x0   	INTCONbits.GIEH = 0;                                                            C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// setup CCP hardware for compare mode (each PWM output                         C:\code\2008\Trc2008\pwm.c
                                           	// transitions from low to high at this point)                                  C:\code\2008\Trc2008\pwm.c
00575a   0e09     MOVLW     0x9            	CCP2CON = 0x09;                                                                 C:\code\2008\Trc2008\pwm.c
00575c   6eba     MOVWF     0xba,0x0                                                                                        
00575e   6eb7     MOVWF     0xb7,0x0       	CCP3CON = 0x09;                                                                 C:\code\2008\Trc2008\pwm.c
005760   6e73     MOVWF     0x73,0x0       	CCP4CON = 0x09;                                                                 C:\code\2008\Trc2008\pwm.c
005762   6e70     MOVWF     0x70,0x0       	CCP5CON = 0x09;                                                                 C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	// start timer 3                                                                C:\code\2008\Trc2008\pwm.c
005764   80b1     BSF       0xb1,0x0,0x0   	T3CONbits.TMR3ON = 1;                                                           C:\code\2008\Trc2008\pwm.c
                                                                                                                            C:\code\2008\Trc2008\pwm.c
                                           	//enable interrupts                                                             C:\code\2008\Trc2008\pwm.c
005766   8ef2     BSF       0xf2,0x7,0x0   	INTCONbits.GIEH = 1;                                                            C:\code\2008\Trc2008\pwm.c
005768   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\pwm.c
00576a   ffe1                                                                                                               
00576c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00576e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005770   ffd9                                                                                                               
005772   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	TITLE		adc.c                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	VERSION:	0.4 (Beta)                                                            C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\adc.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Trc2008\adc.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\adc.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Trc2008\adc.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           ******************************************************************************** C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\adc.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\adc.c
                                           *	10-Jul-2005  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\adc.c
                                           *	17-Jul-2005  0.2  RKW - Added x128 and x256 oversampling options.              C:\code\2008\Trc2008\adc.c
                                           *	13-Dec-2005  0.3  RKW - Altered code to use the "special event trigger"        C:\code\2008\Trc2008\adc.c
                                           *	                  functionality of the CCP2 hardware to initiate ADC           C:\code\2008\Trc2008\adc.c
                                           *	                  conversions. This was formally done using timer 2.           C:\code\2008\Trc2008\adc.c
                                           *	10-Jan-2006  0.4  RKW - Ported to PIC18F8722, which required going back        C:\code\2008\Trc2008\adc.c
                                           *	                  to using timer 2 to initiate an analog to digital            C:\code\2008\Trc2008\adc.c
                                           *	                  conversion due to a bug in the PIC18F8722 design.            C:\code\2008\Trc2008\adc.c
                                           *	                  Modified #pragma interruptlow statement to include           C:\code\2008\Trc2008\adc.c
                                           *	                  .tmpdata section.                                            C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           #include "adc.h"                                                                 C:\code\2008\Trc2008\adc.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\adc.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           unsigned int adc_sample_rate;                                                    C:\code\2008\Trc2008\adc.c
                                           unsigned int adc_samples_per_update;                                             C:\code\2008\Trc2008\adc.c
                                           unsigned char num_adc_channels;                                                  C:\code\2008\Trc2008\adc.c
                                           unsigned char adc_result_divisor;                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           volatile unsigned long accum[NUM_ADC_CHANNELS]; // sample accumulator            C:\code\2008\Trc2008\adc.c
                                           volatile unsigned int adc_result[NUM_ADC_CHANNELS]; // ADC recults               C:\code\2008\Trc2008\adc.c
                                           volatile unsigned int samples; // current number of samples accumulated          C:\code\2008\Trc2008\adc.c
                                           volatile unsigned char channel; // current ADC channel                           C:\code\2008\Trc2008\adc.c
                                           volatile unsigned char adc_update_count = 0; // ADC update flag                  C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Initialize_ADC()                                                    C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Initializes the Analog to Digital Conversion (ADC) hardware.         C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:		Place "#include "adc.h" in the includes section                     C:\code\2008\Trc2008\adc.c
                                           *					of user_routines.c then call Initialize_ADC() in                           C:\code\2008\Trc2008\adc.c
                                           *					user_routines.c/User_Initialization().                                     C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
0040e0   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_ADC(void)                                                        C:\code\2008\Trc2008\adc.c
0040e2   ffe6                                                                                                               
0040e4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0040e6   ffd9                                                                                                               
0040e8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	unsigned char i;                                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// Initialize ADC related global variables using default values from adc.h.     C:\code\2008\Trc2008\adc.c
                                           	// Another way to do this would be to pass the values in, read them from        C:\code\2008\Trc2008\adc.c
                                           	// values stored in EEPROM or perhaps set them via a menu-based terminal        C:\code\2008\Trc2008\adc.c
                                           	// interface.                                                                   C:\code\2008\Trc2008\adc.c
0040ea   0ec8     MOVLW     0xc8           	adc_sample_rate = ADC_SAMPLE_RATE;                                              C:\code\2008\Trc2008\adc.c
0040ec   0102     MOVLB     0x2                                                                                             
0040ee   6f59     MOVWF     0x59,0x1                                                                                        
0040f0   6b5a     CLRF      0x5a,0x1                                                                                        
0040f2   0e01     MOVLW     0x1            	num_adc_channels = NUM_ADC_CHANNELS;                                            C:\code\2008\Trc2008\adc.c
0040f4   6f5d     MOVWF     0x5d,0x1                                                                                        
0040f6   6f5e     MOVWF     0x5e,0x1       	adc_result_divisor = ADC_RESULT_DIVISOR;                                        C:\code\2008\Trc2008\adc.c
0040f8   0e04     MOVLW     0x4            	adc_samples_per_update = ADC_SAMPLES_PER_UPDATE;                                C:\code\2008\Trc2008\adc.c
0040fa   6f5b     MOVWF     0x5b,0x1                                                                                        
0040fc   6b5c     CLRF      0x5c,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// reset the sample accumulator(s) to zero                                      C:\code\2008\Trc2008\adc.c
0040fe   6adf     CLRF      0xdf,0x0       	for(i=0; i < num_adc_channels; i++)                                             C:\code\2008\Trc2008\adc.c
004100   515d     MOVF      0x5d,0x0,0x1                                                                                    
004102   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
004104   e210     BC        0x4126                                                                                          
004122   2adf     INCF      0xdf,0x1,0x0                                                                                    
004124   d7ed     BRA       0x4100                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
004106   50df     MOVF      0xdf,0x0,0x0   		accum[i] = 0L;                                                                 C:\code\2008\Trc2008\adc.c
004108   0d04     MULLW     0x4                                                                                             
00410a   cff3     MOVFF     0xff3,0xfe9                                                                                     
00410c   ffe9                                                                                                               
00410e   cff4     MOVFF     0xff4,0xfea                                                                                     
004110   ffea                                                                                                               
004112   0e5f     MOVLW     0x5f                                                                                            
004114   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004116   0e02     MOVLW     0x2                                                                                             
004118   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00411a   6aee     CLRF      0xee,0x0                                                                                        
00411c   6aee     CLRF      0xee,0x0                                                                                        
00411e   6aee     CLRF      0xee,0x0                                                                                        
004120   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// start a new sample set                                                       C:\code\2008\Trc2008\adc.c
004126   6b65     CLRF      0x65,0x1       	samples = 0;                                                                    C:\code\2008\Trc2008\adc.c
004128   6b66     CLRF      0x66,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// start at ADC channel zero                                                    C:\code\2008\Trc2008\adc.c
00412a   6b67     CLRF      0x67,0x1       	channel = 0;                                                                    C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable the ADC hardware and select ADC channel 0                             C:\code\2008\Trc2008\adc.c
00412c   0e01     MOVLW     0x1            	ADCON0 = 0b00000001;                                                            C:\code\2008\Trc2008\adc.c
00412e   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	#ifdef _FRC_BOARD                                                               C:\code\2008\Trc2008\adc.c
                                           	// If this is being built for the FRC-RC, enable all sixteen analog             C:\code\2008\Trc2008\adc.c
                                           	// inputs. This shouldn't be changed because the FRC-RC has sixteen             C:\code\2008\Trc2008\adc.c
                                           	// dedicated analog inputs. The VCFG0 and VCFG1 bits are also set to            C:\code\2008\Trc2008\adc.c
                                           	// select Vdd and Vss as the reference voltages                                 C:\code\2008\Trc2008\adc.c
004130   6ac1     CLRF      0xc1,0x0       	ADCON1 = 0;                                                                     C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	#else                                                                           C:\code\2008\Trc2008\adc.c
                                           	// If this is being built for the EDU-RC, enable NUM_ADC_CHANNELS               C:\code\2008\Trc2008\adc.c
                                           	// analog inputs (NUM_ADC_CHANNELS is documented in adc.h). This must           C:\code\2008\Trc2008\adc.c
                                           	// match the default value used in user_routines.c/User_Initialization()/       C:\code\2008\Trc2008\adc.c
                                           	// Set_Number_of_Analog_Channels(). The VCFG0 and VCFG1 bits are also           C:\code\2008\Trc2008\adc.c
                                           	// set to select Vdd and Vss as the reference voltages                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	if(num_adc_channels >= 1 && num_adc_channels <= 14)                             C:\code\2008\Trc2008\adc.c
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		ADCON1 = 15 - num_adc_channels;                                                C:\code\2008\Trc2008\adc.c
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                            	else                                                                           C:\code\2008\Trc2008\adc.c
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		ADCON1 = 0; // sixteen channnels or out of range                               C:\code\2008\Trc2008\adc.c
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	#endif                                                                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// select Fosc/64 as the ADC Conversion Clock and right justify data            C:\code\2008\Trc2008\adc.c
                                           	// in the conversion result register                                            C:\code\2008\Trc2008\adc.c
004132   0e86     MOVLW     0x86           	ADCON2 = 0b10000110;                                                            C:\code\2008\Trc2008\adc.c
004134   6ec0     MOVWF     0xc0,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// ADC interrupt is low priority                                                C:\code\2008\Trc2008\adc.c
004136   9c9f     BCF       0x9f,0x6,0x0   	IPR1bits.ADIP = 0;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\code\2008\Trc2008\adc.c
004138   9c9e     BCF       0x9e,0x6,0x0   	PIR1bits.ADIF = 0;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Trc2008\adc.c
00413a   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// initialize and start timer 2, which is responsible for starting              C:\code\2008\Trc2008\adc.c
                                           	// analog to digital conversions                                                C:\code\2008\Trc2008\adc.c
00413c   c259     MOVFF     0x259,0xfe6    	Initialize_Timer_2(adc_sample_rate);                                            C:\code\2008\Trc2008\adc.c
00413e   ffe6                                                                                                               
004140   c25a     MOVFF     0x25a,0xfe6                                                                                     
004142   ffe6                                                                                                               
004144   d814     RCALL     0x416e                                                                                          
004146   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004148   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00414a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\adc.c
00414c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00414e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004150   ffd9                                                                                                               
004152   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Disable_ADC()                                                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Disables the Analog to Digital Conversion (ADC) hardware.            C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
004154   cfd9     MOVFF     0xfd9,0xfe6    void Disable_ADC(void)                                                           C:\code\2008\Trc2008\adc.c
004156   ffe6                                                                                                               
004158   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00415a   ffd9                                                                                                               
00415c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	unsigned char i;                                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// disable timer 2                                                              C:\code\2008\Trc2008\adc.c
00415e   d85f     RCALL     0x421e         	Disable_Timer_2();                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Trc2008\adc.c
004160   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// disable the ADC hardware and select ADC channel 0                            C:\code\2008\Trc2008\adc.c
004162   6ac2     CLRF      0xc2,0x0       	ADCON0 = 0b00000000;                                                            C:\code\2008\Trc2008\adc.c
004164   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\adc.c
004166   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004168   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00416a   ffd9                                                                                                               
00416c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Initialize_Timer_2()                                                C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Initializes the timer 2 hardware, which is responsible for           C:\code\2008\Trc2008\adc.c
                                           *					periodically starting analog to digital conversions.                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:	adc.c/Initialize_ADC()                                            C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		Unsigned integer containing the sample rate expressed in Hz       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:		The only supported sample rates are 200Hz, 400Hz, 800Hz,            C:\code\2008\Trc2008\adc.c
                                           *					1600Hz, 3200Hz and 6400Hz.                                                 C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
00416e   cfd9     MOVFF     0xfd9,0xfe6    void Initialize_Timer_2(unsigned int adc_sample_rate)                            C:\code\2008\Trc2008\adc.c
004170   ffe6                                                                                                               
004172   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004174   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\adc.c
004176   0efd     MOVLW     0xfd           	switch(adc_sample_rate)                                                         C:\code\2008\Trc2008\adc.c
004178   cfdb     MOVFF     0xfdb,0x41                                                                                      
00417a   f041                                                                                                               
00417c   0efe     MOVLW     0xfe                                                                                            
00417e   cfdb     MOVFF     0xfdb,0x42                                                                                      
004180   f042                                                                                                               
004182   5041     MOVF      0x41,0x0,0x0                                                                                    
004184   e102     BNZ       0x418a                                                                                          
004186   0e19     MOVLW     0x19                                                                                            
004188   1842     XORWF     0x42,0x0,0x0                                                                                    
00418a   e03b     BZ        0x4202                                                                                          
00418c   0e80     MOVLW     0x80                                                                                            
00418e   1841     XORWF     0x41,0x0,0x0                                                                                    
004190   e102     BNZ       0x4196                                                                                          
004192   0e0c     MOVLW     0xc                                                                                             
004194   1842     XORWF     0x42,0x0,0x0                                                                                    
004196   e030     BZ        0x41f8                                                                                          
004198   0e40     MOVLW     0x40                                                                                            
00419a   1841     XORWF     0x41,0x0,0x0                                                                                    
00419c   e102     BNZ       0x41a2                                                                                          
00419e   0e06     MOVLW     0x6                                                                                             
0041a0   1842     XORWF     0x42,0x0,0x0                                                                                    
0041a2   e025     BZ        0x41ee                                                                                          
0041a4   0e20     MOVLW     0x20                                                                                            
0041a6   1841     XORWF     0x41,0x0,0x0                                                                                    
0041a8   e102     BNZ       0x41ae                                                                                          
0041aa   0e03     MOVLW     0x3                                                                                             
0041ac   1842     XORWF     0x42,0x0,0x0                                                                                    
0041ae   e01a     BZ        0x41e4                                                                                          
0041b0   0e90     MOVLW     0x90                                                                                            
0041b2   1841     XORWF     0x41,0x0,0x0                                                                                    
0041b4   e102     BNZ       0x41ba                                                                                          
0041b6   0e01     MOVLW     0x1                                                                                             
0041b8   1842     XORWF     0x42,0x0,0x0                                                                                    
0041ba   e00f     BZ        0x41da                                                                                          
0041bc   0ec8     MOVLW     0xc8                                                                                            
0041be   1841     XORWF     0x41,0x0,0x0                                                                                    
0041c0   e101     BNZ       0x41c4                                                                                          
0041c2   5042     MOVF      0x42,0x0,0x0                                                                                    
0041c4   e005     BZ        0x41d0                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		case 200:                                                                      C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 200Hz ADC sample rate                           C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\code\2008\Trc2008\adc.c
0041d0   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\code\2008\Trc2008\adc.c
0041d2   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\code\2008\Trc2008\adc.c
0041d4   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\code\2008\Trc2008\adc.c
0041d6   6ecb     MOVWF     0xcb,0x0                                                                                        
0041d8   d019     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		case 400:                                                                      C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 400Hz ADC sample rate                           C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\code\2008\Trc2008\adc.c
0041da   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\code\2008\Trc2008\adc.c
0041dc   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Trc2008\adc.c
0041de   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Trc2008\adc.c
0041e0   6ecb     MOVWF     0xcb,0x0                                                                                        
0041e2   d014     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		case 800:                                                                      C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 800Hz ADC sample rate                           C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:16 prescaler and 1:11 postscaler                                   C:\code\2008\Trc2008\adc.c
0041e4   0e52     MOVLW     0x52           			T2CON = 0b01010010;                                                           C:\code\2008\Trc2008\adc.c
0041e6   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\code\2008\Trc2008\adc.c
0041e8   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\code\2008\Trc2008\adc.c
0041ea   6ecb     MOVWF     0xcb,0x0                                                                                        
0041ec   d00f     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		case 1600:                                                                     C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 1600Hz ADC sample rate                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\code\2008\Trc2008\adc.c
0041ee   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\code\2008\Trc2008\adc.c
0041f0   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Trc2008\adc.c
0041f2   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Trc2008\adc.c
0041f4   6ecb     MOVWF     0xcb,0x0                                                                                        
0041f6   d00a     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		case 3200:                                                                     C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 3200Hz ADC sample rate                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:1 prescaler and 1:11 postscaler                                    C:\code\2008\Trc2008\adc.c
0041f8   0e51     MOVLW     0x51           			T2CON = 0b01010001;                                                           C:\code\2008\Trc2008\adc.c
0041fa   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 69 before rolling over and generating                             C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (71.02 - 2 is ideal)                                          C:\code\2008\Trc2008\adc.c
0041fc   0e45     MOVLW     0x45           			PR2	= 69;                                                                     C:\code\2008\Trc2008\adc.c
0041fe   6ecb     MOVWF     0xcb,0x0                                                                                        
004200   d005     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                           	                                                                                C:\code\2008\Trc2008\adc.c
                                           		case 6400:                                                                     C:\code\2008\Trc2008\adc.c
                                           			// use these parameters for a 6400Hz ADC sample rate                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:4 prescaler and 1:11 postscaler                                    C:\code\2008\Trc2008\adc.c
004202   0e50     MOVLW     0x50           			T2CON = 0b01010000;                                                           C:\code\2008\Trc2008\adc.c
004204   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 140 before rolling over and generating                            C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (142.05 - 2 is ideal)                                         C:\code\2008\Trc2008\adc.c
004206   0e8c     MOVLW     0x8c           			PR2	= 140;                                                                    C:\code\2008\Trc2008\adc.c
004208   6ecb     MOVWF     0xcb,0x0                                                                                        
00420a   d000     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		default:                                                                       C:\code\2008\Trc2008\adc.c
                                           			// if a non-supported rate is specified,                                      C:\code\2008\Trc2008\adc.c
                                           			// default to a 200Hz ADC sample rate                                         C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// use a 1:16 prescaler and 1:14 postscaler                                   C:\code\2008\Trc2008\adc.c
0041c6   0e6a     MOVLW     0x6a           			T2CON = 0b01101010;                                                           C:\code\2008\Trc2008\adc.c
0041c8   6eca     MOVWF     0xca,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           			// Count to 221 before rolling over and generating                            C:\code\2008\Trc2008\adc.c
                                           			// an interrupt (223.21 - 2 is ideal)                                         C:\code\2008\Trc2008\adc.c
0041ca   0edd     MOVLW     0xdd           			PR2	= 221;                                                                    C:\code\2008\Trc2008\adc.c
0041cc   6ecb     MOVWF     0xcb,0x0                                                                                        
0041ce   d01e     BRA       0x420c         			break;                                                                        C:\code\2008\Trc2008\adc.c
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// make sure the timer 2 register starts at zero                                C:\code\2008\Trc2008\adc.c
00420c   6acc     CLRF      0xcc,0x0       	TMR2 = 0x00;                                                                    C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// timer 2 interrupt is low priority                                            C:\code\2008\Trc2008\adc.c
00420e   929f     BCF       0x9f,0x1,0x0   	IPR1bits.TMR2IP = 0;                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// to prevent a spurious interrupt, make sure the interrupt flag is reset       C:\code\2008\Trc2008\adc.c
004210   929e     BCF       0x9e,0x1,0x0   	PIR1bits.TMR2IF = 0;                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable the timer 2 interrupt                                                 C:\code\2008\Trc2008\adc.c
004212   829d     BSF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 1;                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable timer 2                                                               C:\code\2008\Trc2008\adc.c
004214   84ca     BSF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 1;                                                           C:\code\2008\Trc2008\adc.c
004216   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\adc.c
004218   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00421a   ffd9                                                                                                               
00421c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Disable_Timer_2()                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Disables the timer 2 hardware.                                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
                                           void Disable_Timer_2(void)                                                       C:\code\2008\Trc2008\adc.c
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	// disable the timer 2 interrupt                                                C:\code\2008\Trc2008\adc.c
00421e   929d     BCF       0x9d,0x1,0x0   	PIE1bits.TMR2IE = 0;                                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// disable timer 2                                                              C:\code\2008\Trc2008\adc.c
004220   94ca     BCF       0xca,0x2,0x0   	T2CONbits.TMR2ON = 0;                                                           C:\code\2008\Trc2008\adc.c
004222   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Get_ADC_Result()                                                    C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Given the ADC channel number, returns the last ADC result            C:\code\2008\Trc2008\adc.c
                                           *					expressed in "data number" units.                                          C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		ADC channel number                                                C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
004224   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_ADC_Result(unsigned char channel)                               C:\code\2008\Trc2008\adc.c
004226   ffe6                                                                                                               
004228   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00422a   ffd9                                                                                                               
00422c   0e02     MOVLW     0x2                                                                                             
00422e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	unsigned int temp_adc_result;                                                   C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
004230   0efe     MOVLW     0xfe           	if(channel <= num_adc_channels)                                                 C:\code\2008\Trc2008\adc.c
004232   cfdb     MOVFF     0xfdb,0x0                                                                                       
004234   f000                                                                                                               
004236   0102     MOVLB     0x2                                                                                             
004238   515d     MOVF      0x5d,0x0,0x1                                                                                    
00423a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00423c   5400     SUBFWB    0x0,0x0,0x0                                                                                     
00423e   e312     BNC       0x4264                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		// disable the ADC interrupt                                                   C:\code\2008\Trc2008\adc.c
004240   9c9d     BCF       0x9d,0x6,0x0   		PIE1bits.ADIE = 0;                                                             C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		// one is subtracted because analog input 1 maps to adc_result[0],             C:\code\2008\Trc2008\adc.c
                                           		// input 2 maps to adc_result[1],..., input 16 maps to adc_result[15]          C:\code\2008\Trc2008\adc.c
004242   0efe     MOVLW     0xfe           		temp_adc_result = adc_result[channel - 1];                                     C:\code\2008\Trc2008\adc.c
004244   04db     DECF      0xdb,0x0,0x0                                                                                    
004246   6ee9     MOVWF     0xe9,0x0                                                                                        
004248   6aea     CLRF      0xea,0x0                                                                                        
00424a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00424c   36e9     RLCF      0xe9,0x1,0x0                                                                                    
00424e   36ea     RLCF      0xea,0x1,0x0                                                                                    
004250   0e63     MOVLW     0x63                                                                                            
004252   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004254   0e02     MOVLW     0x2                                                                                             
004256   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004258   cfee     MOVFF     0xfee,0xfde                                                                                     
00425a   ffde                                                                                                               
00425c   cfed     MOVFF     0xfed,0xfdd                                                                                     
00425e   ffdd                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		// enable the ADC interrupt                                                    C:\code\2008\Trc2008\adc.c
004260   8c9d     BSF       0x9d,0x6,0x0   		PIE1bits.ADIE = 1;                                                             C:\code\2008\Trc2008\adc.c
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
004262   d002     BRA       0x4268         	else                                                                            C:\code\2008\Trc2008\adc.c
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		// bad channel number; return zero                                             C:\code\2008\Trc2008\adc.c
004264   6ade     CLRF      0xde,0x0       		temp_adc_result = 0;                                                           C:\code\2008\Trc2008\adc.c
004266   6add     CLRF      0xdd,0x0                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
004268   cfde     MOVFF     0xfde,0x0      	return(temp_adc_result);                                                        C:\code\2008\Trc2008\adc.c
00426a   f000                                                                                                               
00426c   cfdd     MOVFF     0xfdd,0x1                                                                                       
00426e   f001                                                                                                               
004270   c000     MOVFF     0x0,0xff3                                                                                       
004272   fff3                                                                                                               
004274   c001     MOVFF     0x1,0xff4                                                                                       
004276   fff4                                                                                                               
004278   d000     BRA       0x427a                                                                                          
00427a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\adc.c
00427c   ffe1                                                                                                               
00427e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004280   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004282   ffd9                                                                                                               
004284   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Convert_ADC_to_mV()                                                 C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Converts the raw output of the ADC to millivolts.                    C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		ADC output value to convert                                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Millivolts                                                           C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
004286   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Convert_ADC_to_mV(unsigned int adc)                                 C:\code\2008\Trc2008\adc.c
004288   ffe6                                                                                                               
00428a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00428c   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\adc.c
00428e   0efd     MOVLW     0xfd           	return((unsigned int)(((long)adc * (VREF_POS_MV - VREF_NEG_MV)) / ADC_RANGE));  C:\code\2008\Trc2008\adc.c
004290   cfdb     MOVFF     0xfdb,0x0                                                                                       
004292   f000                                                                                                               
004294   0efe     MOVLW     0xfe                                                                                            
004296   cfdb     MOVFF     0xfdb,0x1                                                                                       
004298   f001                                                                                                               
00429a   6a02     CLRF      0x2,0x0                                                                                         
00429c   6a03     CLRF      0x3,0x0                                                                                         
00429e   0e88     MOVLW     0x88                                                                                            
0042a0   6e44     MOVWF     0x44,0x0                                                                                        
0042a2   0e13     MOVLW     0x13                                                                                            
0042a4   6e45     MOVWF     0x45,0x0                                                                                        
0042a6   6a46     CLRF      0x46,0x0                                                                                        
0042a8   6a47     CLRF      0x47,0x0                                                                                        
0042aa   c000     MOVFF     0x0,0x3f                                                                                        
0042ac   f03f                                                                                                               
0042ae   c001     MOVFF     0x1,0x40                                                                                        
0042b0   f040                                                                                                               
0042b2   c002     MOVFF     0x2,0x41                                                                                        
0042b4   f041                                                                                                               
0042b6   c003     MOVFF     0x3,0x42                                                                                        
0042b8   f042                                                                                                               
0042ba   ec18     CALL      0x5a30,0x0                                                                                      
0042bc   f02d                                                                                                               
0042be   c03b     MOVFF     0x3b,0x0                                                                                        
0042c0   f000                                                                                                               
0042c2   c03c     MOVFF     0x3c,0x1                                                                                        
0042c4   f001                                                                                                               
0042c6   c03d     MOVFF     0x3d,0x2                                                                                        
0042c8   f002                                                                                                               
0042ca   c03e     MOVFF     0x3e,0x3                                                                                        
0042cc   f003                                                                                                               
0042ce   6a44     CLRF      0x44,0x0                                                                                        
0042d0   0e08     MOVLW     0x8                                                                                             
0042d2   6e45     MOVWF     0x45,0x0                                                                                        
0042d4   6a46     CLRF      0x46,0x0                                                                                        
0042d6   6a47     CLRF      0x47,0x0                                                                                        
0042d8   c000     MOVFF     0x0,0x3f                                                                                        
0042da   f03f                                                                                                               
0042dc   c001     MOVFF     0x1,0x40                                                                                        
0042de   f040                                                                                                               
0042e0   c002     MOVFF     0x2,0x41                                                                                        
0042e2   f041                                                                                                               
0042e4   c003     MOVFF     0x3,0x42                                                                                        
0042e6   f042                                                                                                               
0042e8   ec62     CALL      0x3ec4,0x0                                                                                      
0042ea   f01f                                                                                                               
0042ec   c03f     MOVFF     0x3f,0x0                                                                                        
0042ee   f000                                                                                                               
0042f0   c040     MOVFF     0x40,0x1                                                                                        
0042f2   f001                                                                                                               
0042f4   c041     MOVFF     0x41,0x2                                                                                        
0042f6   f002                                                                                                               
0042f8   c042     MOVFF     0x42,0x3                                                                                        
0042fa   f003                                                                                                               
0042fc   c000     MOVFF     0x0,0xff3                                                                                       
0042fe   fff3                                                                                                               
004300   c001     MOVFF     0x1,0xff4                                                                                       
004302   fff4                                                                                                               
004304   d000     BRA       0x4306                                                                                          
004306   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\adc.c
004308   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00430a   ffd9                                                                                                               
00430c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Get_ADC_Result_Count()                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:                                                                       C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
00430e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Get_ADC_Result_Count()                                             C:\code\2008\Trc2008\adc.c
004310   ffe6                                                                                                               
004312   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004314   ffd9                                                                                                               
004316   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	unsigned char temp_adc_update_count;                                            C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Trc2008\adc.c
004318   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
00431a   c1ff     MOVFF     0x1ff,0xfdf    	temp_adc_update_count = adc_update_count;                                       C:\code\2008\Trc2008\adc.c
00431c   ffdf                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Trc2008\adc.c
00431e   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
004320   50df     MOVF      0xdf,0x0,0x0   	return(temp_adc_update_count);                                                  C:\code\2008\Trc2008\adc.c
004322   d000     BRA       0x4324                                                                                          
004324   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\adc.c
004326   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004328   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00432a   ffd9                                                                                                               
00432c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Reset_ADC_Result_Count()                                            C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Resets the ADC update counter to zero                                C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
                                           void Reset_ADC_Result_Count()                                                    C:\code\2008\Trc2008\adc.c
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	// disable the ADC interrupt                                                    C:\code\2008\Trc2008\adc.c
00432e   9c9d     BCF       0x9d,0x6,0x0   	PIE1bits.ADIE = 0;                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
004330   0101     MOVLB     0x1            	adc_update_count = 0;                                                           C:\code\2008\Trc2008\adc.c
004332   6bff     CLRF      0xff,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// enable the ADC interrupt                                                     C:\code\2008\Trc2008\adc.c
004334   8c9d     BSF       0x9d,0x6,0x0   	PIE1bits.ADIE = 1;                                                              C:\code\2008\Trc2008\adc.c
004336   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		Timer_2_Int_Handler()                                               C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
                                           void Timer_2_Int_Handler(void)                                                   C:\code\2008\Trc2008\adc.c
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	// start a new analog to digital conversion                                     C:\code\2008\Trc2008\adc.c
004338   82c2     BSF       0xc2,0x1,0x0   	ADCON0bits.GO = 1;                                                              C:\code\2008\Trc2008\adc.c
00433a   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           /******************************************************************************* C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	FUNCTION:		ADC_Int_Handler()                                                   C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PURPOSE:		ADC interrupt service routine                                        C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\adc.c
                                           *                                                                                C:\code\2008\Trc2008\adc.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\adc.c
00433c   cfd9     MOVFF     0xfd9,0xfe6    void ADC_Int_Handler(void)                                                       C:\code\2008\Trc2008\adc.c
00433e   ffe6                                                                                                               
004340   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004342   ffd9                                                                                                               
004344   0e05     MOVLW     0x5                                                                                             
004346   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\adc.c
                                           	unsigned int adc;                                                               C:\code\2008\Trc2008\adc.c
                                           	unsigned char adcon0_temp;                                                      C:\code\2008\Trc2008\adc.c
                                           	int i;                                                                          C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// get conversion results                                                       C:\code\2008\Trc2008\adc.c
004348   50c4     MOVF      0xc4,0x0,0x0   	adc = ADRESH;                                                                   C:\code\2008\Trc2008\adc.c
00434a   6ede     MOVWF     0xde,0x0                                                                                        
00434c   6add     CLRF      0xdd,0x0                                                                                        
00434e   cfd9     MOVFF     0xfd9,0xfe9    	adc <<= 8;                                                                      C:\code\2008\Trc2008\adc.c
004350   ffe9                                                                                                               
004352   cfda     MOVFF     0xfda,0xfea                                                                                     
004354   ffea                                                                                                               
004356   50ee     MOVF      0xee,0x0,0x0                                                                                    
004358   6eed     MOVWF     0xed,0x0                                                                                        
00435a   6aef     CLRF      0xef,0x0                                                                                        
00435c   50c3     MOVF      0xc3,0x0,0x0   	adc += ADRESL;                                                                  C:\code\2008\Trc2008\adc.c
00435e   26de     ADDWF     0xde,0x1,0x0                                                                                    
004360   0e00     MOVLW     0x0                                                                                             
004362   22dd     ADDWFC    0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// add the ADC data to the appropriate accumulator                              C:\code\2008\Trc2008\adc.c
004364   cfde     MOVFF     0xfde,0x0      	accum[channel] += (long)adc;                                                    C:\code\2008\Trc2008\adc.c
004366   f000                                                                                                               
004368   cfdd     MOVFF     0xfdd,0x1                                                                                       
00436a   f001                                                                                                               
00436c   6a02     CLRF      0x2,0x0                                                                                         
00436e   6a03     CLRF      0x3,0x0                                                                                         
004370   0102     MOVLB     0x2                                                                                             
004372   5167     MOVF      0x67,0x0,0x1                                                                                    
004374   0d04     MULLW     0x4                                                                                             
004376   cff3     MOVFF     0xff3,0xfe9                                                                                     
004378   ffe9                                                                                                               
00437a   cff4     MOVFF     0xff4,0xfea                                                                                     
00437c   ffea                                                                                                               
00437e   0e5f     MOVLW     0x5f                                                                                            
004380   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004382   0e02     MOVLW     0x2                                                                                             
004384   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004386   5000     MOVF      0x0,0x0,0x0                                                                                     
004388   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00438a   5001     MOVF      0x1,0x0,0x0                                                                                     
00438c   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
00438e   5002     MOVF      0x2,0x0,0x0                                                                                     
004390   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
004392   5003     MOVF      0x3,0x0,0x0                                                                                     
004394   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	                                                                                C:\code\2008\Trc2008\adc.c
                                           	// increment the ADC channel index                                              C:\code\2008\Trc2008\adc.c
004396   2b67     INCF      0x67,0x1,0x1   	channel++;                                                                      C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// do we need to wrap around to zero?                                           C:\code\2008\Trc2008\adc.c
004398   515d     MOVF      0x5d,0x0,0x1   	if(channel >= num_adc_channels)                                                 C:\code\2008\Trc2008\adc.c
00439a   5d67     SUBWF     0x67,0x0,0x1                                                                                    
00439c   e304     BNC       0x43a6                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
00439e   6b67     CLRF      0x67,0x1       		channel = 0;                                                                   C:\code\2008\Trc2008\adc.c
0043a0   2b65     INCF      0x65,0x1,0x1   		samples++;                                                                     C:\code\2008\Trc2008\adc.c
0043a2   0e00     MOVLW     0x0                                                                                             
0043a4   2366     ADDWFC    0x66,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// Select next ADC channel. This also starts the process whereby the ADC        C:\code\2008\Trc2008\adc.c
                                           	// sample and hold capacitor is allowed to start charging, which must be        C:\code\2008\Trc2008\adc.c
                                           	// completed before the next analog to digital conversion can be started.       C:\code\2008\Trc2008\adc.c
0043a6   0e02     MOVLW     0x2            	adcon0_temp = channel;                                                          C:\code\2008\Trc2008\adc.c
0043a8   c267     MOVFF     0x267,0xfdb                                                                                     
0043aa   ffdb                                                                                                               
0043ac   50db     MOVF      0xdb,0x0,0x0   	adcon0_temp <<= 2;                                                              C:\code\2008\Trc2008\adc.c
0043ae   0d04     MULLW     0x4                                                                                             
0043b0   0e02     MOVLW     0x2                                                                                             
0043b2   cff3     MOVFF     0xff3,0xfdb                                                                                     
0043b4   ffdb                                                                                                               
0043b6   80db     BSF       0xdb,0x0,0x0   	adcon0_temp |= 0b00000001;                                                      C:\code\2008\Trc2008\adc.c
0043b8   50db     MOVF      0xdb,0x0,0x0   	ADCON0 = adcon0_temp;                                                           C:\code\2008\Trc2008\adc.c
0043ba   6ec2     MOVWF     0xc2,0x0                                                                                        
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           	// check to see if we've got a full sample set                                  C:\code\2008\Trc2008\adc.c
0043bc   515b     MOVF      0x5b,0x0,0x1   	if(samples >= adc_samples_per_update)                                           C:\code\2008\Trc2008\adc.c
0043be   5d65     SUBWF     0x65,0x0,0x1                                                                                    
0043c0   515c     MOVF      0x5c,0x0,0x1                                                                                    
0043c2   5966     SUBWFB    0x66,0x0,0x1                                                                                    
0043c4   e201     BC        0x43c8                                                                                          
0043c6   d083     BRA       0x44ce                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\adc.c
                                           		// update the ADC result array                                                 C:\code\2008\Trc2008\adc.c
0043c8   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\code\2008\Trc2008\adc.c
0043ca   6adb     CLRF      0xdb,0x0                                                                                        
0043cc   0e04     MOVLW     0x4                                                                                             
0043ce   6adb     CLRF      0xdb,0x0                                                                                        
0043d0   0e03     MOVLW     0x3                                                                                             
0043d2   cfdb     MOVFF     0xfdb,0x0                                                                                       
0043d4   f000                                                                                                               
0043d6   0e04     MOVLW     0x4                                                                                             
0043d8   cfdb     MOVFF     0xfdb,0x1                                                                                       
0043da   f001                                                                                                               
0043dc   0102     MOVLB     0x2                                                                                             
0043de   515d     MOVF      0x5d,0x0,0x1                                                                                    
0043e0   0100     MOVLB     0x0                                                                                             
0043e2   ae01     BTFSS     0x1,0x7,0x0                                                                                     
0043e4   d002     BRA       0x43ea                                                                                          
0043e6   90d8     BCF       0xd8,0x0,0x0                                                                                    
0043e8   d003     BRA       0x43f0                                                                                          
0043ea   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0043ec   0e00     MOVLW     0x0                                                                                             
0043ee   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0043f0   e23a     BC        0x4466                                                                                          
00445a   0e03     MOVLW     0x3                                                                                             
00445c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00445e   0e04     MOVLW     0x4                                                                                             
004460   e301     BNC       0x4464                                                                                          
004462   2adb     INCF      0xdb,0x1,0x0                                                                                    
004464   d7b5     BRA       0x43d0                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\adc.c
0043f2   0e03     MOVLW     0x3            			adc_result[i] = (long)(accum[i] >> adc_result_divisor);                       C:\code\2008\Trc2008\adc.c
0043f4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0043f6   ffe9                                                                                                               
0043f8   0e04     MOVLW     0x4                                                                                             
0043fa   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0043fc   ffea                                                                                                               
0043fe   90d8     BCF       0xd8,0x0,0x0                                                                                    
004400   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004402   36ea     RLCF      0xea,0x1,0x0                                                                                    
004404   90d8     BCF       0xd8,0x0,0x0                                                                                    
004406   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004408   36ea     RLCF      0xea,0x1,0x0                                                                                    
00440a   0e5f     MOVLW     0x5f                                                                                            
00440c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00440e   0e02     MOVLW     0x2                                                                                             
004410   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004412   0102     MOVLB     0x2                                                                                             
004414   515e     MOVF      0x5e,0x0,0x1                                                                                    
004416   0b1f     ANDLW     0x1f                                                                                            
004418   cfee     MOVFF     0xfee,0x0                                                                                       
00441a   f000                                                                                                               
00441c   cfee     MOVFF     0xfee,0x1                                                                                       
00441e   f001                                                                                                               
004420   cfee     MOVFF     0xfee,0x2                                                                                       
004422   f002                                                                                                               
004424   cfee     MOVFF     0xfee,0x3                                                                                       
004426   f003                                                                                                               
004428   e007     BZ        0x4438                                                                                          
00442a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00442c   3203     RRCF      0x3,0x1,0x0                                                                                     
00442e   3202     RRCF      0x2,0x1,0x0                                                                                     
004430   3201     RRCF      0x1,0x1,0x0                                                                                     
004432   3200     RRCF      0x0,0x1,0x0                                                                                     
004434   06e8     DECF      0xe8,0x1,0x0                                                                                    
004436   e1f9     BNZ       0x442a                                                                                          
004438   0e03     MOVLW     0x3                                                                                             
00443a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00443c   ffe9                                                                                                               
00443e   0e04     MOVLW     0x4                                                                                             
004440   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004442   ffea                                                                                                               
004444   90d8     BCF       0xd8,0x0,0x0                                                                                    
004446   36e9     RLCF      0xe9,0x1,0x0                                                                                    
004448   36ea     RLCF      0xea,0x1,0x0                                                                                    
00444a   0e63     MOVLW     0x63                                                                                            
00444c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00444e   0e02     MOVLW     0x2                                                                                             
004450   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004452   c000     MOVFF     0x0,0xfee                                                                                       
004454   ffee                                                                                                               
004456   c001     MOVFF     0x1,0xfed                                                                                       
004458   ffed                                                                                                               
                                           		}                                                                              C:\code\2008\Trc2008\adc.c
                                           		// reset the sample accumulator(s) to zero                                     C:\code\2008\Trc2008\adc.c
004466   0e03     MOVLW     0x3            		for(i=0; i < num_adc_channels; i++)                                            C:\code\2008\Trc2008\adc.c
004468   6adb     CLRF      0xdb,0x0                                                                                        
00446a   0e04     MOVLW     0x4                                                                                             
00446c   6adb     CLRF      0xdb,0x0                                                                                        
00446e   0e03     MOVLW     0x3                                                                                             
004470   cfdb     MOVFF     0xfdb,0x0                                                                                       
004472   f000                                                                                                               
004474   0e04     MOVLW     0x4                                                                                             
004476   cfdb     MOVFF     0xfdb,0x1                                                                                       
004478   f001                                                                                                               
00447a   0102     MOVLB     0x2                                                                                             
00447c   515d     MOVF      0x5d,0x0,0x1                                                                                    
00447e   0100     MOVLB     0x0                                                                                             
004480   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004482   d002     BRA       0x4488                                                                                          
004484   90d8     BCF       0xd8,0x0,0x0                                                                                    
004486   d003     BRA       0x448e                                                                                          
004488   5c00     SUBWF     0x0,0x0,0x0                                                                                     
00448a   0e00     MOVLW     0x0                                                                                             
00448c   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00448e   e21a     BC        0x44c4                                                                                          
0044b8   0e03     MOVLW     0x3                                                                                             
0044ba   2adb     INCF      0xdb,0x1,0x0                                                                                    
0044bc   0e04     MOVLW     0x4                                                                                             
0044be   e301     BNC       0x44c2                                                                                          
0044c0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0044c2   d7d5     BRA       0x446e                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\adc.c
004490   0e03     MOVLW     0x3            			accum[i] = 0L;                                                                C:\code\2008\Trc2008\adc.c
004492   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004494   ffe9                                                                                                               
004496   0e04     MOVLW     0x4                                                                                             
004498   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00449a   ffea                                                                                                               
00449c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00449e   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0044a0   36ea     RLCF      0xea,0x1,0x0                                                                                    
0044a2   90d8     BCF       0xd8,0x0,0x0                                                                                    
0044a4   36e9     RLCF      0xe9,0x1,0x0                                                                                    
0044a6   36ea     RLCF      0xea,0x1,0x0                                                                                    
0044a8   0e5f     MOVLW     0x5f                                                                                            
0044aa   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0044ac   0e02     MOVLW     0x2                                                                                             
0044ae   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0044b0   6aee     CLRF      0xee,0x0                                                                                        
0044b2   6aee     CLRF      0xee,0x0                                                                                        
0044b4   6aee     CLRF      0xee,0x0                                                                                        
0044b6   6aee     CLRF      0xee,0x0                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\adc.c
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		// signal that a fresh sample set is available                                 C:\code\2008\Trc2008\adc.c
0044c4   0101     MOVLB     0x1            		adc_update_count++;                                                            C:\code\2008\Trc2008\adc.c
0044c6   2bff     INCF      0xff,0x1,0x1                                                                                    
                                                                                                                            C:\code\2008\Trc2008\adc.c
                                           		// start a fresh sample set                                                    C:\code\2008\Trc2008\adc.c
0044c8   0102     MOVLB     0x2            		samples = 0;                                                                   C:\code\2008\Trc2008\adc.c
0044ca   6b65     CLRF      0x65,0x1                                                                                        
0044cc   6b66     CLRF      0x66,0x1                                                                                        
                                           	}	                                                                              C:\code\2008\Trc2008\adc.c
0044ce   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\adc.c
0044d0   ffe1                                                                                                               
0044d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0044d4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0044d6   ffd9                                                                                                               
0044d8   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	TITLE		gyro.c                                                                  C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	DATE:		10-Jan-2006                                                             C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\gyro.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Trc2008\gyro.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\gyro.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Trc2008\gyro.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *				Copyright ©2005-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           ******************************************************************************** C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\gyro.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\gyro.c
                                           *	21-Nov-2004  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\gyro.c
                                           *	12-Jan-2005  0.2  RKW - Altered Get_Gyro_Rate() and Get_Gyro_Angle() to use    C:\code\2008\Trc2008\gyro.c
                                           *	                  long integers for internal calculations, allowing larger     C:\code\2008\Trc2008\gyro.c
                                           *	                  numerators and denominators in the GYRO_RATE_SCALE_FACTOR    C:\code\2008\Trc2008\gyro.c
                                           *	                  and GYRO_ANGLE_SCALE_FACTOR #defines.                        C:\code\2008\Trc2008\gyro.c
                                           *	12-Jan-2005  0.2  RKW - GYRO_RATE_SCALE_FACTOR and GYRO_ANGLE_SCALE_FACTOR     C:\code\2008\Trc2008\gyro.c
                                           *	                  #defines added for Analog Devices' ADXRS401, ADXRS150 and    C:\code\2008\Trc2008\gyro.c
                                           *	                  ADXRS300 gyros.                                              C:\code\2008\Trc2008\gyro.c
                                           *	16-Jan-2005  0.3  RKW - Using preprocessor directives, added the ability       C:\code\2008\Trc2008\gyro.c
                                           *	                  to select the gyro type, angular units, sample rate and      C:\code\2008\Trc2008\gyro.c
                                           *	                  number of averaged samples per update.                       C:\code\2008\Trc2008\gyro.c
                                           *	21-Jan-2005  0.3  RKW - Added scaling factors for the BEI GyroChip.            C:\code\2008\Trc2008\gyro.c
                                           *	30-Jan-2005  0.4  RKW - Revised the way bias calculations are done.            C:\code\2008\Trc2008\gyro.c
                                           *	                  Instead of using only one data set as a bias, multiple       C:\code\2008\Trc2008\gyro.c
                                           *	                  sample sets can now be averaged over a much longer period    C:\code\2008\Trc2008\gyro.c
                                           *	                  of time to derive the gyro bias. Updated documentation.      C:\code\2008\Trc2008\gyro.c
                                           *	04-Sep-2005  0.5  RKW - Significant overhaul of gyro code to strip-out ADC-    C:\code\2008\Trc2008\gyro.c
                                           *	                  specific code and use new adc.c/.h interface. Added          C:\code\2008\Trc2008\gyro.c
                                           *	                  deadband option.                                             C:\code\2008\Trc2008\gyro.c
                                           *	21-Nov-2005  0.5  RKW - Added support for Murata's ENV-05D gyro.               C:\code\2008\Trc2008\gyro.c
                                           *	10-Jan-2006  0.5  RKW - Verified code works on PIC18F8722.                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           #include "adc.h"                                                                 C:\code\2008\Trc2008\gyro.c
                                           #include "gyro.h"                                                                C:\code\2008\Trc2008\gyro.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\gyro.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           int gyro_bias;                                                                   C:\code\2008\Trc2008\gyro.c
                                           int gyro_rate;                                                                   C:\code\2008\Trc2008\gyro.c
                                           long gyro_angle;                                                                 C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           unsigned long avg_accum;                                                         C:\code\2008\Trc2008\gyro.c
                                           unsigned int avg_samples;                                                        C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           unsigned char calc_gyro_bias;                                                    C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Initialize_Gyro()                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Initializes the gyro code.                                           C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:		Place "#include "gyro.h" in the includes section                    C:\code\2008\Trc2008\gyro.c
                                           *					of user_routines.c then call Initialize_Gyro() in                          C:\code\2008\Trc2008\gyro.c
                                           *					user_routines.c/User_Initialization().                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *					After calling Initialize_Gyro(), gyro rate and angle                       C:\code\2008\Trc2008\gyro.c
                                           *					data will be meaningless until a gyro bias calculation                     C:\code\2008\Trc2008\gyro.c
                                           *					has taken place by calling Start_Gyro_Bias_Calc() and                      C:\code\2008\Trc2008\gyro.c
                                           *					Stop_Gyro_Bias_Calc().                                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           void Initialize_Gyro(void)                                                       C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// reset the heading angle to zero                                              C:\code\2008\Trc2008\gyro.c
004b44   0102     MOVLB     0x2            	gyro_angle = 0;                                                                 C:\code\2008\Trc2008\gyro.c
004b46   6b4e     CLRF      0x4e,0x1                                                                                        
004b48   6b4f     CLRF      0x4f,0x1                                                                                        
004b4a   6b50     CLRF      0x50,0x1                                                                                        
004b4c   6b51     CLRF      0x51,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           	// reset the bias calculation flag                                              C:\code\2008\Trc2008\gyro.c
004b4e   6b58     CLRF      0x58,0x1       	calc_gyro_bias = 0;                                                             C:\code\2008\Trc2008\gyro.c
004b50   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Rate()                                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Returns the current heading angular rate of change.                  C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Signed integer with the current heading rate of change.              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           int Get_Gyro_Rate(void)                                                          C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// Return the calculated gyro rate to the caller.                               C:\code\2008\Trc2008\gyro.c
004b52   c24c     MOVFF     0x24c,0x3f     	return((int)((((long)gyro_rate * GYRO_SENSITIVITY * 5L) / ADC_RANGE)) * GYRO_CAL_FACTOR); C:\code\2008\Trc2008\gyro.c
004b54   f03f                                                                                                               
004b56   c24d     MOVFF     0x24d,0x40                                                                                      
004b58   f040                                                                                                               
004b5a   6a41     CLRF      0x41,0x0                                                                                        
004b5c   6a42     CLRF      0x42,0x0                                                                                        
004b5e   ae40     BTFSS     0x40,0x7,0x0                                                                                    
004b60   d002     BRA       0x4b66                                                                                          
004b62   6841     SETF      0x41,0x0                                                                                        
004b64   6842     SETF      0x42,0x0                                                                                        
004b66   0e20     MOVLW     0x20                                                                                            
004b68   6e44     MOVWF     0x44,0x0                                                                                        
004b6a   0e03     MOVLW     0x3                                                                                             
004b6c   6e45     MOVWF     0x45,0x0                                                                                        
004b6e   6a46     CLRF      0x46,0x0                                                                                        
004b70   6a47     CLRF      0x47,0x0                                                                                        
004b72   ec18     CALL      0x5a30,0x0                                                                                      
004b74   f02d                                                                                                               
004b76   c03b     MOVFF     0x3b,0x3f                                                                                       
004b78   f03f                                                                                                               
004b7a   c03c     MOVFF     0x3c,0x40                                                                                       
004b7c   f040                                                                                                               
004b7e   c03d     MOVFF     0x3d,0x41                                                                                       
004b80   f041                                                                                                               
004b82   c03e     MOVFF     0x3e,0x42                                                                                       
004b84   f042                                                                                                               
004b86   0e05     MOVLW     0x5                                                                                             
004b88   6e44     MOVWF     0x44,0x0                                                                                        
004b8a   6a45     CLRF      0x45,0x0                                                                                        
004b8c   6a46     CLRF      0x46,0x0                                                                                        
004b8e   6a47     CLRF      0x47,0x0                                                                                        
004b90   ec18     CALL      0x5a30,0x0                                                                                      
004b92   f02d                                                                                                               
004b94   c03b     MOVFF     0x3b,0x3f                                                                                       
004b96   f03f                                                                                                               
004b98   c03c     MOVFF     0x3c,0x40                                                                                       
004b9a   f040                                                                                                               
004b9c   c03d     MOVFF     0x3d,0x41                                                                                       
004b9e   f041                                                                                                               
004ba0   c03e     MOVFF     0x3e,0x42                                                                                       
004ba2   f042                                                                                                               
004ba4   6a44     CLRF      0x44,0x0                                                                                        
004ba6   0e08     MOVLW     0x8                                                                                             
004ba8   6e45     MOVWF     0x45,0x0                                                                                        
004baa   6a46     CLRF      0x46,0x0                                                                                        
004bac   6a47     CLRF      0x47,0x0                                                                                        
004bae   ec62     CALL      0x3ec4,0x0                                                                                      
004bb0   f01f                                                                                                               
004bb2   c03f     MOVFF     0x3f,0x0                                                                                        
004bb4   f000                                                                                                               
004bb6   c040     MOVFF     0x40,0x1                                                                                        
004bb8   f001                                                                                                               
004bba   0ee8     MOVLW     0xe8                                                                                            
004bbc   0201     MULWF     0x1,0x0                                                                                         
004bbe   cff3     MOVFF     0xff3,0x1                                                                                       
004bc0   f001                                                                                                               
004bc2   0e03     MOVLW     0x3                                                                                             
004bc4   0200     MULWF     0x0,0x0                                                                                         
004bc6   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004bc8   2601     ADDWF     0x1,0x1,0x0                                                                                     
004bca   0ee8     MOVLW     0xe8                                                                                            
004bcc   0200     MULWF     0x0,0x0                                                                                         
004bce   cff3     MOVFF     0xff3,0x0                                                                                       
004bd0   f000                                                                                                               
004bd2   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004bd4   2601     ADDWF     0x1,0x1,0x0                                                                                     
004bd6   0ee8     MOVLW     0xe8                                                                                            
004bd8   6e46     MOVWF     0x46,0x0                                                                                        
004bda   0e03     MOVLW     0x3                                                                                             
004bdc   6e47     MOVWF     0x47,0x0                                                                                        
004bde   c000     MOVFF     0x0,0x41                                                                                        
004be0   f041                                                                                                               
004be2   c001     MOVFF     0x1,0x42                                                                                        
004be4   f042                                                                                                               
004be6   ec3c     CALL      0x3e78,0x0                                                                                      
004be8   f01f                                                                                                               
004bea   c041     MOVFF     0x41,0x0                                                                                        
004bec   f000                                                                                                               
004bee   c042     MOVFF     0x42,0x1                                                                                        
004bf0   f001                                                                                                               
004bf2   c000     MOVFF     0x0,0xff3                                                                                       
004bf4   fff3                                                                                                               
004bf6   c001     MOVFF     0x1,0xff4                                                                                       
004bf8   fff4                                                                                                               
004bfa   d000     BRA       0x4bfc                                                                                          
004bfc   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Angle()                                                    C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Returns the current heading angle.                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Signed long with the current heading angle.                          C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           long Get_Gyro_Angle(void)                                                        C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// Return the calculated gyro angle to the caller.                              C:\code\2008\Trc2008\gyro.c
004bfe   c24e     MOVFF     0x24e,0x3f     	return(((gyro_angle * GYRO_SENSITIVITY * 5L) / (ADC_RANGE * ADC_UPDATE_RATE)) * GYRO_CAL_FACTOR); C:\code\2008\Trc2008\gyro.c
004c00   f03f                                                                                                               
004c02   c24f     MOVFF     0x24f,0x40                                                                                      
004c04   f040                                                                                                               
004c06   c250     MOVFF     0x250,0x41                                                                                      
004c08   f041                                                                                                               
004c0a   c251     MOVFF     0x251,0x42                                                                                      
004c0c   f042                                                                                                               
004c0e   0e20     MOVLW     0x20                                                                                            
004c10   6e44     MOVWF     0x44,0x0                                                                                        
004c12   0e03     MOVLW     0x3                                                                                             
004c14   6e45     MOVWF     0x45,0x0                                                                                        
004c16   6a46     CLRF      0x46,0x0                                                                                        
004c18   6a47     CLRF      0x47,0x0                                                                                        
004c1a   ec18     CALL      0x5a30,0x0                                                                                      
004c1c   f02d                                                                                                               
004c1e   c03b     MOVFF     0x3b,0x3f                                                                                       
004c20   f03f                                                                                                               
004c22   c03c     MOVFF     0x3c,0x40                                                                                       
004c24   f040                                                                                                               
004c26   c03d     MOVFF     0x3d,0x41                                                                                       
004c28   f041                                                                                                               
004c2a   c03e     MOVFF     0x3e,0x42                                                                                       
004c2c   f042                                                                                                               
004c2e   0e05     MOVLW     0x5                                                                                             
004c30   6e44     MOVWF     0x44,0x0                                                                                        
004c32   6a45     CLRF      0x45,0x0                                                                                        
004c34   6a46     CLRF      0x46,0x0                                                                                        
004c36   6a47     CLRF      0x47,0x0                                                                                        
004c38   ec18     CALL      0x5a30,0x0                                                                                      
004c3a   f02d                                                                                                               
004c3c   c03b     MOVFF     0x3b,0x3f                                                                                       
004c3e   f03f                                                                                                               
004c40   c03c     MOVFF     0x3c,0x40                                                                                       
004c42   f040                                                                                                               
004c44   c03d     MOVFF     0x3d,0x41                                                                                       
004c46   f041                                                                                                               
004c48   c03e     MOVFF     0x3e,0x42                                                                                       
004c4a   f042                                                                                                               
004c4c   6a44     CLRF      0x44,0x0                                                                                        
004c4e   0e90     MOVLW     0x90                                                                                            
004c50   6e45     MOVWF     0x45,0x0                                                                                        
004c52   0e01     MOVLW     0x1                                                                                             
004c54   6e46     MOVWF     0x46,0x0                                                                                        
004c56   6a47     CLRF      0x47,0x0                                                                                        
004c58   ec62     CALL      0x3ec4,0x0                                                                                      
004c5a   f01f                                                                                                               
004c5c   0ee8     MOVLW     0xe8                                                                                            
004c5e   6e44     MOVWF     0x44,0x0                                                                                        
004c60   0e03     MOVLW     0x3                                                                                             
004c62   6e45     MOVWF     0x45,0x0                                                                                        
004c64   6a46     CLRF      0x46,0x0                                                                                        
004c66   6a47     CLRF      0x47,0x0                                                                                        
004c68   ec18     CALL      0x5a30,0x0                                                                                      
004c6a   f02d                                                                                                               
004c6c   c03b     MOVFF     0x3b,0x3f                                                                                       
004c6e   f03f                                                                                                               
004c70   c03c     MOVFF     0x3c,0x40                                                                                       
004c72   f040                                                                                                               
004c74   c03d     MOVFF     0x3d,0x41                                                                                       
004c76   f041                                                                                                               
004c78   c03e     MOVFF     0x3e,0x42                                                                                       
004c7a   f042                                                                                                               
004c7c   0ee8     MOVLW     0xe8                                                                                            
004c7e   6e44     MOVWF     0x44,0x0                                                                                        
004c80   0e03     MOVLW     0x3                                                                                             
004c82   6e45     MOVWF     0x45,0x0                                                                                        
004c84   6a46     CLRF      0x46,0x0                                                                                        
004c86   6a47     CLRF      0x47,0x0                                                                                        
004c88   ec62     CALL      0x3ec4,0x0                                                                                      
004c8a   f01f                                                                                                               
004c8c   d000     BRA       0x4c8e                                                                                          
004c8e   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Start_Gyro_Bias_Calc()                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Starts an ongoing gyro bias calculation.                             C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:		IMPORTANT NOTE: Only call this function when your                   C:\code\2008\Trc2008\gyro.c
                                           *					robot will be absolutely still and free of vibration                       C:\code\2008\Trc2008\gyro.c
                                           *					(e.g., the air compressor is off) until the call to                        C:\code\2008\Trc2008\gyro.c
                                           *					Stop_Gyro_Bias_Calc() is made.                                             C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           void Start_Gyro_Bias_Calc(void)                                                  C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
004c90   0102     MOVLB     0x2            	if(calc_gyro_bias == 0)                                                         C:\code\2008\Trc2008\gyro.c
004c92   5158     MOVF      0x58,0x0,0x1                                                                                    
004c94   e108     BNZ       0x4ca6                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\gyro.c
                                           		// reset the averaging accumulator                                             C:\code\2008\Trc2008\gyro.c
004c96   6b52     CLRF      0x52,0x1       		avg_accum = 0;                                                                 C:\code\2008\Trc2008\gyro.c
004c98   6b53     CLRF      0x53,0x1                                                                                        
004c9a   6b54     CLRF      0x54,0x1                                                                                        
004c9c   6b55     CLRF      0x55,0x1                                                                                        
                                           	                                                                                C:\code\2008\Trc2008\gyro.c
                                           		// reset the number of number of average samples counters                      C:\code\2008\Trc2008\gyro.c
004c9e   6b56     CLRF      0x56,0x1       		avg_samples = 0;                                                               C:\code\2008\Trc2008\gyro.c
004ca0   6b57     CLRF      0x57,0x1                                                                                        
                                           	                                                                                C:\code\2008\Trc2008\gyro.c
                                           		// set flag informing the Process_Gyro_Data()                                  C:\code\2008\Trc2008\gyro.c
                                           		// function to start a gyro bias calculation                                   C:\code\2008\Trc2008\gyro.c
004ca2   0e01     MOVLW     0x1            		calc_gyro_bias = 1;                                                            C:\code\2008\Trc2008\gyro.c
004ca4   6f58     MOVWF     0x58,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\gyro.c
004ca6   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Stop_Gyro_Bias_Calc()                                               C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Ends the current ongoing gyro bias calculation                       C:\code\2008\Trc2008\gyro.c
                                           *					and updates the internal gyro_bias variable.                               C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           void Stop_Gyro_Bias_Calc(void)                                                   C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
004ca8   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\code\2008\Trc2008\gyro.c
004caa   0558     DECF      0x58,0x0,0x1                                                                                    
004cac   e11e     BNZ       0x4cea                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\gyro.c
                                           		// Update the gyro bias                                                        C:\code\2008\Trc2008\gyro.c
004cae   c256     MOVFF     0x256,0x0      		gyro_bias = (int)(avg_accum / avg_samples);                                    C:\code\2008\Trc2008\gyro.c
004cb0   f000                                                                                                               
004cb2   c257     MOVFF     0x257,0x1                                                                                       
004cb4   f001                                                                                                               
004cb6   6a02     CLRF      0x2,0x0                                                                                         
004cb8   6a03     CLRF      0x3,0x0                                                                                         
004cba   c252     MOVFF     0x252,0x3f                                                                                      
004cbc   f03f                                                                                                               
004cbe   c253     MOVFF     0x253,0x40                                                                                      
004cc0   f040                                                                                                               
004cc2   c254     MOVFF     0x254,0x41                                                                                      
004cc4   f041                                                                                                               
004cc6   c255     MOVFF     0x255,0x42                                                                                      
004cc8   f042                                                                                                               
004cca   c000     MOVFF     0x0,0x44                                                                                        
004ccc   f044                                                                                                               
004cce   c001     MOVFF     0x1,0x45                                                                                        
004cd0   f045                                                                                                               
004cd2   c002     MOVFF     0x2,0x46                                                                                        
004cd4   f046                                                                                                               
004cd6   c003     MOVFF     0x3,0x47                                                                                        
004cd8   f047                                                                                                               
004cda   ec1c     CALL      0x5c38,0x0                                                                                      
004cdc   f02e                                                                                                               
004cde   c03f     MOVFF     0x3f,0x24a                                                                                      
004ce0   f24a                                                                                                               
004ce2   c040     MOVFF     0x40,0x24b                                                                                      
004ce4   f24b                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           		// inform Process_Gyro_Data() function that                                    C:\code\2008\Trc2008\gyro.c
                                           		// the ongoing bias calculation needs to stop                                  C:\code\2008\Trc2008\gyro.c
004ce6   0102     MOVLB     0x2            		calc_gyro_bias = 0;                                                            C:\code\2008\Trc2008\gyro.c
004ce8   6b58     CLRF      0x58,0x1                                                                                        
                                           	}                                                                               C:\code\2008\Trc2008\gyro.c
004cea   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Get_Gyro_Bias()                                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Returns the current gyro bias.		                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Signed integer with the current gyro bias.                           C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           int Get_Gyro_Bias(void)                                                          C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// return the gyro bias to the caller                                           C:\code\2008\Trc2008\gyro.c
004cec   c24a     MOVFF     0x24a,0xff3    	return(gyro_bias);                                                              C:\code\2008\Trc2008\gyro.c
004cee   fff3                                                                                                               
004cf0   c24b     MOVFF     0x24b,0xff4                                                                                     
004cf2   fff4                                                                                                               
004cf4   d000     BRA       0x4cf6                                                                                          
004cf6   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Set_Gyro_Bias()                                                     C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Manually sets the gyro bias.                                         C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
004cf8   cfd9     MOVFF     0xfd9,0xfe6    void Set_Gyro_Bias(int new_gyro_bias)                                            C:\code\2008\Trc2008\gyro.c
004cfa   ffe6                                                                                                               
004cfc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004cfe   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// update gyro_bias                                                             C:\code\2008\Trc2008\gyro.c
004d00   0efd     MOVLW     0xfd           	gyro_bias = new_gyro_bias;                                                      C:\code\2008\Trc2008\gyro.c
004d02   cfdb     MOVFF     0xfdb,0x24a                                                                                     
004d04   f24a                                                                                                               
004d06   0efe     MOVLW     0xfe                                                                                            
004d08   cfdb     MOVFF     0xfdb,0x24b                                                                                     
004d0a   f24b                                                                                                               
004d0c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\gyro.c
004d0e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d10   ffd9                                                                                                               
004d12   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Reset_Gyro_Angle()                                                  C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Resets the heading angle to zero.                                    C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
                                           void Reset_Gyro_Angle(void)                                                      C:\code\2008\Trc2008\gyro.c
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	// zero out gyro_angle                                                          C:\code\2008\Trc2008\gyro.c
004d14   0102     MOVLB     0x2            	gyro_angle = 0L;                                                                C:\code\2008\Trc2008\gyro.c
004d16   6b4e     CLRF      0x4e,0x1                                                                                        
004d18   6b4f     CLRF      0x4f,0x1                                                                                        
004d1a   6b50     CLRF      0x50,0x1                                                                                        
004d1c   6b51     CLRF      0x51,0x1                                                                                        
004d1e   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           /******************************************************************************* C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	FUNCTION:		Process_Gyro_Data()                                                 C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PURPOSE:		Timer 2 interrupt service routine                                    C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\gyro.c
                                           *                                                                                C:\code\2008\Trc2008\gyro.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\gyro.c
004d20   cfd9     MOVFF     0xfd9,0xfe6    void Process_Gyro_Data(void)                                                     C:\code\2008\Trc2008\gyro.c
004d22   ffe6                                                                                                               
004d24   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004d26   ffd9                                                                                                               
004d28   0e02     MOVLW     0x2                                                                                             
004d2a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\gyro.c
                                           	int temp_gyro_rate;                                                             C:\code\2008\Trc2008\gyro.c
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           	// should the completed sample set be used to calculate the gyro bias?          C:\code\2008\Trc2008\gyro.c
004d2c   0102     MOVLB     0x2            	if(calc_gyro_bias == 1)                                                         C:\code\2008\Trc2008\gyro.c
004d2e   0558     DECF      0x58,0x0,0x1                                                                                    
004d30   e117     BNZ       0x4d60                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\gyro.c
                                           		// convert the accumulator to an integer and update gyro_bias                  C:\code\2008\Trc2008\gyro.c
004d32   0e01     MOVLW     0x1            		avg_accum += Get_ADC_Result(GYRO_CHANNEL);                                     C:\code\2008\Trc2008\gyro.c
004d34   6ee6     MOVWF     0xe6,0x0                                                                                        
004d36   ec12     CALL      0x4224,0x0                                                                                      
004d38   f021                                                                                                               
004d3a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d3c   cff3     MOVFF     0xff3,0x0                                                                                       
004d3e   f000                                                                                                               
004d40   cff4     MOVFF     0xff4,0x1                                                                                       
004d42   f001                                                                                                               
004d44   0100     MOVLB     0x0                                                                                             
004d46   5000     MOVF      0x0,0x0,0x0                                                                                     
004d48   0102     MOVLB     0x2                                                                                             
004d4a   2752     ADDWF     0x52,0x1,0x1                                                                                    
004d4c   0100     MOVLB     0x0                                                                                             
004d4e   5001     MOVF      0x1,0x0,0x0                                                                                     
004d50   0102     MOVLB     0x2                                                                                             
004d52   2353     ADDWFC    0x53,0x1,0x1                                                                                    
004d54   0e00     MOVLW     0x0                                                                                             
004d56   2354     ADDWFC    0x54,0x1,0x1                                                                                    
004d58   2355     ADDWFC    0x55,0x1,0x1                                                                                    
004d5a   2b56     INCF      0x56,0x1,0x1   		avg_samples++;                                                                 C:\code\2008\Trc2008\gyro.c
004d5c   2357     ADDWFC    0x57,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\gyro.c
004d5e   d040     BRA       0x4de0         	else                                                                            C:\code\2008\Trc2008\gyro.c
                                           	{                                                                               C:\code\2008\Trc2008\gyro.c
                                           		// get the latest measured gyro rate                                           C:\code\2008\Trc2008\gyro.c
004d60   0e01     MOVLW     0x1            		temp_gyro_rate = (int)Get_ADC_Result(GYRO_CHANNEL) - gyro_bias;                C:\code\2008\Trc2008\gyro.c
004d62   6ee6     MOVWF     0xe6,0x0                                                                                        
004d64   ec12     CALL      0x4224,0x0                                                                                      
004d66   f021                                                                                                               
004d68   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d6a   0102     MOVLB     0x2                                                                                             
004d6c   514a     MOVF      0x4a,0x0,0x1                                                                                    
004d6e   5cf3     SUBWF     0xf3,0x0,0x0                                                                                    
004d70   6e00     MOVWF     0x0,0x0                                                                                         
004d72   514b     MOVF      0x4b,0x0,0x1                                                                                    
004d74   58f4     SUBWFB    0xf4,0x0,0x0                                                                                    
004d76   6e01     MOVWF     0x1,0x0                                                                                         
004d78   c000     MOVFF     0x0,0xfde                                                                                       
004d7a   ffde                                                                                                               
004d7c   c001     MOVFF     0x1,0xfdd                                                                                       
004d7e   ffdd                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           		// update reported gyro rate and angle only if                                 C:\code\2008\Trc2008\gyro.c
                                           		// measured gyro rate lies outside the deadband                                C:\code\2008\Trc2008\gyro.c
004d80   cfde     MOVFF     0xfde,0x0      		if(temp_gyro_rate < -GYRO_DEADBAND || temp_gyro_rate > GYRO_DEADBAND)          C:\code\2008\Trc2008\gyro.c
004d82   f000                                                                                                               
004d84   cfdd     MOVFF     0xfdd,0x1                                                                                       
004d86   f001                                                                                                               
004d88   80d8     BSF       0xd8,0x0,0x0                                                                                    
004d8a   5001     MOVF      0x1,0x0,0x0                                                                                     
004d8c   e704     BNN       0x4d96                                                                                          
004d8e   0ef8     MOVLW     0xf8                                                                                            
004d90   5c00     SUBWF     0x0,0x0,0x0                                                                                     
004d92   0eff     MOVLW     0xff                                                                                            
004d94   5801     SUBWFB    0x1,0x0,0x0                                                                                     
004d96   e30b     BNC       0x4dae                                                                                          
004d98   cfde     MOVFF     0xfde,0x2                                                                                       
004d9a   f002                                                                                                               
004d9c   cfdd     MOVFF     0xfdd,0x3                                                                                       
004d9e   f003                                                                                                               
004da0   3403     RLCF      0x3,0x0,0x0                                                                                     
004da2   e204     BC        0x4dac                                                                                          
004da4   5002     MOVF      0x2,0x0,0x0                                                                                     
004da6   0808     SUBLW     0x8                                                                                             
004da8   0e00     MOVLW     0x0                                                                                             
004daa   5403     SUBFWB    0x3,0x0,0x0                                                                                     
004dac   e217     BC        0x4ddc                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\gyro.c
                                           			// update the gyro rate                                                       C:\code\2008\Trc2008\gyro.c
004dae   cfde     MOVFF     0xfde,0x24c    			gyro_rate = temp_gyro_rate;                                                   C:\code\2008\Trc2008\gyro.c
004db0   f24c                                                                                                               
004db2   cfdd     MOVFF     0xfdd,0x24d                                                                                     
004db4   f24d                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\gyro.c
                                           			// integrate the gyro rate to derive the heading                              C:\code\2008\Trc2008\gyro.c
004db6   cfde     MOVFF     0xfde,0x0      			gyro_angle += (long)temp_gyro_rate;                                           C:\code\2008\Trc2008\gyro.c
004db8   f000                                                                                                               
004dba   cfdd     MOVFF     0xfdd,0x1                                                                                       
004dbc   f001                                                                                                               
004dbe   6a02     CLRF      0x2,0x0                                                                                         
004dc0   6a03     CLRF      0x3,0x0                                                                                         
004dc2   ae01     BTFSS     0x1,0x7,0x0                                                                                     
004dc4   d002     BRA       0x4dca                                                                                          
004dc6   6802     SETF      0x2,0x0                                                                                         
004dc8   6803     SETF      0x3,0x0                                                                                         
004dca   5000     MOVF      0x0,0x0,0x0                                                                                     
004dcc   274e     ADDWF     0x4e,0x1,0x1                                                                                    
004dce   5001     MOVF      0x1,0x0,0x0                                                                                     
004dd0   234f     ADDWFC    0x4f,0x1,0x1                                                                                    
004dd2   5002     MOVF      0x2,0x0,0x0                                                                                     
004dd4   2350     ADDWFC    0x50,0x1,0x1                                                                                    
004dd6   5003     MOVF      0x3,0x0,0x0                                                                                     
004dd8   2351     ADDWFC    0x51,0x1,0x1                                                                                    
                                           		}                                                                              C:\code\2008\Trc2008\gyro.c
004dda   d002     BRA       0x4de0         		else                                                                           C:\code\2008\Trc2008\gyro.c
                                           		{                                                                              C:\code\2008\Trc2008\gyro.c
004ddc   6b4c     CLRF      0x4c,0x1       			gyro_rate = 0;                                                                C:\code\2008\Trc2008\gyro.c
004dde   6b4d     CLRF      0x4d,0x1                                                                                        
                                           		}                                                                              C:\code\2008\Trc2008\gyro.c
                                           	}	                                                                              C:\code\2008\Trc2008\gyro.c
004de0   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\gyro.c
004de2   ffe1                                                                                                               
004de4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004de6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004de8   ffd9                                                                                                               
004dea   0012     RETURN    0x0                                                                                             
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	TITLE:		encoder.c                                                              C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	VERSION:	0.5 (Beta)                                                            C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	DATE:		17-Dec-2005                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	AUTHOR:		R. Kevin Watson                                                       C:\code\2008\Trc2008\encoder.c
                                           *				kevinw@jpl.nasa.gov                                                         C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:	You are free to use this source code for any non-commercial          C:\code\2008\Trc2008\encoder.c
                                           *				use. Please do not make copies of this source code, modified                C:\code\2008\Trc2008\encoder.c
                                           *				or un-modified, publicly available on the internet or                       C:\code\2008\Trc2008\encoder.c
                                           *				elsewhere without permission. Thanks.                                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *				Copyright ©2003-2006 R. Kevin Watson. All rights are reserved.              C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           ******************************************************************************** C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CHANGE LOG:                                                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	DATE         REV  DESCRIPTION                                                  C:\code\2008\Trc2008\encoder.c
                                           *	-----------  ---  ----------------------------------------------------------   C:\code\2008\Trc2008\encoder.c
                                           *	20-Dec-2003  0.1  RKW - Original code.                                         C:\code\2008\Trc2008\encoder.c
                                           *	18-Feb-2004  0.2  RKW - Reassigned the encoder digital inputs to run           C:\code\2008\Trc2008\encoder.c
                                           *	                  on the FRC robot controller too.                             C:\code\2008\Trc2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Get_Left_Encoder_Count(), Get_Right_Encoder_Count(),   C:\code\2008\Trc2008\encoder.c
                                           *	                  Set_Left_Encoder_Count() and Set_Right_Encoder_Count()       C:\code\2008\Trc2008\encoder.c
                                           *	                  functions added.                                             C:\code\2008\Trc2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Renamed Int_1_Handler() and Int_2_Handler() to         C:\code\2008\Trc2008\encoder.c
                                           *	                  Left_Encoder_Int_Handler() and Right_Encoder_Int_Handler     C:\code\2008\Trc2008\encoder.c
                                           *	                  respectively.                                                C:\code\2008\Trc2008\encoder.c
                                           *	01-Jan-2005  0.3  RKW - Altered the interrupt service routines to easily       C:\code\2008\Trc2008\encoder.c
                                           *	                  flip the direction the encoders count by altering the        C:\code\2008\Trc2008\encoder.c
                                           *	                  RIGHT_ENCODER_TICK_DELTA and LEFT_ENCODER_TICK_DELTA         C:\code\2008\Trc2008\encoder.c
                                           *	                  #defines found in encoder.h                                  C:\code\2008\Trc2008\encoder.c
                                           *	06-Jan-2005  0.4  RKW - Rebuilt with C18 version 2.40.                         C:\code\2008\Trc2008\encoder.c
                                           *	17-Dec-2005  0.5  RKW - Added code to accommodate four more encoders on        C:\code\2008\Trc2008\encoder.c
                                           *	                  interrupts 3 through 6. These additional encoder inputs      C:\code\2008\Trc2008\encoder.c
                                           *	                  are optimized for position control.                          C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\encoder.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\encoder.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\encoder.c
                                           #include "encoder.h"                                                             C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           // These variables are used to keep track of the encoder position over time.     C:\code\2008\Trc2008\encoder.c
                                           // Though these are global variables, they shouldn't be modified directly.       C:\code\2008\Trc2008\encoder.c
                                           // Functions to modify these variables are included below.                       C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_1_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_2_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\code\2008\Trc2008\encoder.c
                                           unsigned char Encoder_3_State;                                                   C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_3_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\code\2008\Trc2008\encoder.c
                                           unsigned char Encoder_4_State;                                                   C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_4_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\code\2008\Trc2008\encoder.c
                                           unsigned char Encoder_5_State;                                                   C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_5_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\code\2008\Trc2008\encoder.c
                                           unsigned char Encoder_6_State;                                                   C:\code\2008\Trc2008\encoder.c
                                           volatile long Encoder_6_Count = 0;                                               C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           // So that we'll know which interrupt pin changed state the next time through,   C:\code\2008\Trc2008\encoder.c
                                           // the state of port b is saved in this variable each time the interrupt         C:\code\2008\Trc2008\encoder.c
                                           // handler for interrupts 3 through 6 is called. This variable should be         C:\code\2008\Trc2008\encoder.c
                                           // initialized to the current state of port b just before enabling interrupts    C:\code\2008\Trc2008\encoder.c
                                           // 3 through 6.                                                                  C:\code\2008\Trc2008\encoder.c
                                           unsigned char Old_Port_B = 0xFF;                                                 C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Initialize_Encoders()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Initializes the encoder software.                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None                                                              C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing                                                              C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Initialize_Encoders(void)                                                   C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// if enabled in encoder.h, configure encoder 1's interrupt input               C:\code\2008\Trc2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_1                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// make sure interrupt 1 is configured as an input                              C:\code\2008\Trc2008\encoder.c
005774   8493     BSF       0x93,0x2,0x0   	TRISBbits.TRISB2 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt 1 is low priority                                                  C:\code\2008\Trc2008\encoder.c
005776   9ef0     BCF       0xf0,0x7,0x0   	INTCON3bits.INT2IP = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// trigger on rising edge                                                       C:\code\2008\Trc2008\encoder.c
005778   88f1     BSF       0xf1,0x4,0x0   	INTCON2bits.INTEDG2 = 1;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Trc2008\encoder.c
00577a   92f0     BCF       0xf0,0x1,0x0   	INTCON3bits.INT2IF = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// enable interrupt 1                                                           C:\code\2008\Trc2008\encoder.c
00577c   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// if enabled in encoder.h, configure encoder 2's interrupt input               C:\code\2008\Trc2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_2                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// make sure interrupt 2 is configured as an input                              C:\code\2008\Trc2008\encoder.c
00577e   8693     BSF       0x93,0x3,0x0   	TRISBbits.TRISB3 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt 2 is low priority                                                  C:\code\2008\Trc2008\encoder.c
005780   92f1     BCF       0xf1,0x1,0x0   	INTCON2bits.INT3IP = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// trigger on rising edge                                                       C:\code\2008\Trc2008\encoder.c
005782   86f1     BSF       0xf1,0x3,0x0   	INTCON2bits.INTEDG3 = 1;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Trc2008\encoder.c
005784   94f0     BCF       0xf0,0x2,0x0   	INTCON3bits.INT3IF = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// enable interrupt 2                                                           C:\code\2008\Trc2008\encoder.c
005786   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// if enabled in encoder.h, configure the interrupt input for encoders 3-6      C:\code\2008\Trc2008\encoder.c
                                           	#ifdef ENABLE_ENCODER_3_6                                                       C:\code\2008\Trc2008\encoder.c
                                           	// make sure interrupts 3 through 6 are configured as inputs                    C:\code\2008\Trc2008\encoder.c
                                           	TRISBbits.TRISB4 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                           	TRISBbits.TRISB5 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                           	TRISBbits.TRISB6 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                           	TRISBbits.TRISB7 = 1;                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// interrupts 3 through 6 are low priority                                      C:\code\2008\Trc2008\encoder.c
                                             	INTCON2bits.RBIP = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// before enabling interrupts 3 through 6, take a snapshot of port b            C:\code\2008\Trc2008\encoder.c
                                           	Old_Port_B = PORTB;                                                             C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// make sure the interrupt flag is reset before enabling                        C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIF = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// enable interrupts 3 through 6                                                C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                           	#endif                                                                          C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
005788   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_1                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_1_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 1 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 1 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
00578a   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_1_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
00578c   ffe6                                                                                                               
00578e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005790   ffd9                                                                                                               
005792   0e04     MOVLW     0x4                                                                                             
005794   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
005796   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
005798   c289     MOVFF     0x289,0xfdf    	count = Encoder_1_Count;                                                        C:\code\2008\Trc2008\encoder.c
00579a   ffdf                                                                                                               
00579c   0e01     MOVLW     0x1                                                                                             
00579e   c28a     MOVFF     0x28a,0xfdb                                                                                     
0057a0   ffdb                                                                                                               
0057a2   0e02     MOVLW     0x2                                                                                             
0057a4   c28b     MOVFF     0x28b,0xfdb                                                                                     
0057a6   ffdb                                                                                                               
0057a8   0e03     MOVLW     0x3                                                                                             
0057aa   c28c     MOVFF     0x28c,0xfdb                                                                                     
0057ac   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
0057ae   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
0057b0   cfde     MOVFF     0xfde,0x3f     	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
0057b2   f03f                                                                                                               
0057b4   cfde     MOVFF     0xfde,0x40                                                                                      
0057b6   f040                                                                                                               
0057b8   cfde     MOVFF     0xfde,0x41                                                                                      
0057ba   f041                                                                                                               
0057bc   cfdd     MOVFF     0xfdd,0x42                                                                                      
0057be   f042                                                                                                               
0057c0   52dd     MOVF      0xdd,0x1,0x0                                                                                    
0057c2   52dd     MOVF      0xdd,0x1,0x0                                                                                    
0057c4   d000     BRA       0x57c6                                                                                          
0057c6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\encoder.c
0057c8   ffe1                                                                                                               
0057ca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0057cc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0057ce   ffd9                                                                                                               
0057d0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_1_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 1 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_1_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_1_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_1_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
0057d2   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
0057d4   0102     MOVLB     0x2            	Encoder_1_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
0057d6   6b89     CLRF      0x89,0x1                                                                                        
0057d8   6b8a     CLRF      0x8a,0x1                                                                                        
0057da   6b8b     CLRF      0x8b,0x1                                                                                        
0057dc   6b8c     CLRF      0x8c,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
0057de   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
0057e0   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_1_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 1 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 1 pin changes from a logic 0 to a logic 1.                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_1_Int_Handler(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 1's phase a signal just transitioned from zero to one, causing       C:\code\2008\Trc2008\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\code\2008\Trc2008\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\code\2008\Trc2008\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	                                                                                C:\code\2008\Trc2008\encoder.c
0057e2   b288     BTFSC     0x88,0x1,0x0   	if(ENCODER_1_PHASE_B_PIN == 0)                                                  C:\code\2008\Trc2008\encoder.c
0057e4   d007     BRA       0x57f4                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
0057e6   0eff     MOVLW     0xff           		Encoder_1_Count -= ENCODER_1_TICK_DELTA;                                       C:\code\2008\Trc2008\encoder.c
0057e8   0102     MOVLB     0x2                                                                                             
0057ea   5f89     SUBWF     0x89,0x1,0x1                                                                                    
0057ec   5b8a     SUBWFB    0x8a,0x1,0x1                                                                                    
0057ee   5b8b     SUBWFB    0x8b,0x1,0x1                                                                                    
0057f0   5b8c     SUBWFB    0x8c,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
0057f2   d006     BRA       0x5800         	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
0057f4   0eff     MOVLW     0xff           		Encoder_1_Count += ENCODER_1_TICK_DELTA;                                       C:\code\2008\Trc2008\encoder.c
0057f6   0102     MOVLB     0x2                                                                                             
0057f8   2789     ADDWF     0x89,0x1,0x1                                                                                    
0057fa   238a     ADDWFC    0x8a,0x1,0x1                                                                                    
0057fc   238b     ADDWFC    0x8b,0x1,0x1                                                                                    
0057fe   238c     ADDWFC    0x8c,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
005800   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_2                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_2_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 2 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 2 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
005802   cfd9     MOVFF     0xfd9,0xfe6    long Get_Encoder_2_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
005804   ffe6                                                                                                               
005806   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005808   ffd9                                                                                                               
00580a   0e04     MOVLW     0x4                                                                                             
00580c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
00580e   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
005810   c28d     MOVFF     0x28d,0xfdf    	count = Encoder_2_Count;                                                        C:\code\2008\Trc2008\encoder.c
005812   ffdf                                                                                                               
005814   0e01     MOVLW     0x1                                                                                             
005816   c28e     MOVFF     0x28e,0xfdb                                                                                     
005818   ffdb                                                                                                               
00581a   0e02     MOVLW     0x2                                                                                             
00581c   c28f     MOVFF     0x28f,0xfdb                                                                                     
00581e   ffdb                                                                                                               
005820   0e03     MOVLW     0x3                                                                                             
005822   c290     MOVFF     0x290,0xfdb                                                                                     
005824   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
005826   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
005828   cfde     MOVFF     0xfde,0x3f     	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
00582a   f03f                                                                                                               
00582c   cfde     MOVFF     0xfde,0x40                                                                                      
00582e   f040                                                                                                               
005830   cfde     MOVFF     0xfde,0x41                                                                                      
005832   f041                                                                                                               
005834   cfdd     MOVFF     0xfdd,0x42                                                                                      
005836   f042                                                                                                               
005838   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00583a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00583c   d000     BRA       0x583e                                                                                          
00583e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\encoder.c
005840   ffe1                                                                                                               
005842   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005844   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005846   ffd9                                                                                                               
005848   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_2_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 2 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_2_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_2_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_2_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
00584a   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;                                                         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
00584c   0102     MOVLB     0x2            	Encoder_2_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
00584e   6b8d     CLRF      0x8d,0x1                                                                                        
005850   6b8e     CLRF      0x8e,0x1                                                                                        
005852   6b8f     CLRF      0x8f,0x1                                                                                        
005854   6b90     CLRF      0x90,0x1                                                                                        
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
005856   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;                                                         C:\code\2008\Trc2008\encoder.c
005858   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_2_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 2 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 2 pin changes from a logic 0 to a logic 1.                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_2_Int_Handler(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 2's phase a signal just transitioned from zero to one, causing       C:\code\2008\Trc2008\encoder.c
                                           	// this interrupt service routine to be called. We know that the encoder        C:\code\2008\Trc2008\encoder.c
                                           	// just rotated one count or "tick" so now check the logical state of the       C:\code\2008\Trc2008\encoder.c
                                           	// phase b signal to determine which way the the encoder shaft rotated.         C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
00585a   b488     BTFSC     0x88,0x2,0x0   	if(ENCODER_2_PHASE_B_PIN == 0)                                                  C:\code\2008\Trc2008\encoder.c
00585c   d007     BRA       0x586c                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
00585e   0102     MOVLB     0x2            		Encoder_2_Count -= ENCODER_2_TICK_DELTA;                                       C:\code\2008\Trc2008\encoder.c
005860   078d     DECF      0x8d,0x1,0x1                                                                                    
005862   0e00     MOVLW     0x0                                                                                             
005864   5b8e     SUBWFB    0x8e,0x1,0x1                                                                                    
005866   5b8f     SUBWFB    0x8f,0x1,0x1                                                                                    
005868   5b90     SUBWFB    0x90,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
00586a   d006     BRA       0x5878         	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
00586c   0102     MOVLB     0x2            		Encoder_2_Count += ENCODER_2_TICK_DELTA;                                       C:\code\2008\Trc2008\encoder.c
00586e   2b8d     INCF      0x8d,0x1,0x1                                                                                    
005870   0e00     MOVLW     0x0                                                                                             
005872   238e     ADDWFC    0x8e,0x1,0x1                                                                                    
005874   238f     ADDWFC    0x8f,0x1,0x1                                                                                    
005876   2390     ADDWFC    0x90,0x1,0x1                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
005878   0012     RETURN    0x0            }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_3                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_3_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 3 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 3 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           long Get_Encoder_3_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
                                           	count = Encoder_3_Count;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_3_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 3 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_3_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_3_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_3_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
                                           	Encoder_3_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_3_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 3 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 3 pin changes logic state                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_3_Int_Handler(unsigned char state)                                  C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 3's phase a signal just changed logic level, causing this            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Trc2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_3_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			// backward                                                                   C:\code\2008\Trc2008\encoder.c
                                           			if(Encoder_3_State == 1)                                                      C:\code\2008\Trc2008\encoder.c
                                           			{                                                                             C:\code\2008\Trc2008\encoder.c
                                           				Encoder_3_Count -= ENCODER_3_TICK_DELTA;                                     C:\code\2008\Trc2008\encoder.c
                                           			}                                                                             C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			// forward                                                                    C:\code\2008\Trc2008\encoder.c
                                           			if(Encoder_3_State == 0)                                                      C:\code\2008\Trc2008\encoder.c
                                           			{                                                                             C:\code\2008\Trc2008\encoder.c
                                           				Encoder_3_Count += ENCODER_3_TICK_DELTA;                                     C:\code\2008\Trc2008\encoder.c
                                           			}                                                                             C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Trc2008\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\code\2008\Trc2008\encoder.c
                                           		//   phase b is one if moving backward                                         C:\code\2008\Trc2008\encoder.c
                                           		Encoder_3_State = ENCODER_3_PHASE_B_PIN;                                       C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_4                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_4_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 4 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 4 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           long Get_Encoder_4_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
                                           	count = Encoder_4_Count;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_4_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 4 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_4_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_4_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_4_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
                                           	Encoder_4_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_4_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 4 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 4 pin changes logic state                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_4_Int_Handler(unsigned char state)                                  C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 4's phase a signal just changed logic level, causing this            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Trc2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_4_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			// backward                                                                   C:\code\2008\Trc2008\encoder.c
                                           			if(Encoder_4_State == 1)                                                      C:\code\2008\Trc2008\encoder.c
                                           			{                                                                             C:\code\2008\Trc2008\encoder.c
                                           				Encoder_4_Count -= ENCODER_4_TICK_DELTA;                                     C:\code\2008\Trc2008\encoder.c
                                           			}                                                                             C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			// forward                                                                    C:\code\2008\Trc2008\encoder.c
                                           			if(Encoder_4_State == 0)                                                      C:\code\2008\Trc2008\encoder.c
                                           			{                                                                             C:\code\2008\Trc2008\encoder.c
                                           				Encoder_4_Count += ENCODER_4_TICK_DELTA;                                     C:\code\2008\Trc2008\encoder.c
                                           			}                                                                             C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Trc2008\encoder.c
                                           		//   phase b is zero if moving forward                                         C:\code\2008\Trc2008\encoder.c
                                           		//   phase b is one if moving backward                                         C:\code\2008\Trc2008\encoder.c
                                           		Encoder_4_State = ENCODER_4_PHASE_B_PIN;                                       C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_5                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_5_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 5 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 5 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           long Get_Encoder_5_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
                                           	count = Encoder_5_Count;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_5_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 5 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_5_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_5_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_5_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
                                           	Encoder_5_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_5_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 5 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 5 pin changes logic state                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_5_Int_Handler(unsigned char state)                                  C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 5's phase a signal just changed logic level, causing this            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Trc2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_5_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_5_Count += ENCODER_5_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_5_Count -= ENCODER_5_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           #ifdef ENABLE_ENCODER_6                                                          C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Get_Encoder_6_Count()                                               C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Gets the current number of encoder 6 counts.		                       C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Number of encoder 6 counts since the last reset.                     C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           long Get_Encoder_6_Count(void)                                                   C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	long count;                                                                     C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can get a local copy of the encoder count without fear                C:\code\2008\Trc2008\encoder.c
                                           	// that we'll get corrupted data.                                               C:\code\2008\Trc2008\encoder.c
                                           	count = Encoder_6_Count;                                                        C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we have a local copy of the encoder count, so turn the                 C:\code\2008\Trc2008\encoder.c
                                           	// encoder's interrupt back on.                                                 C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Return the encoder count to the caller.                                      C:\code\2008\Trc2008\encoder.c
                                           	return(count);                                                                  C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Reset_Encoder_6_Count()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		Resets the encoder 6 count to zero	                                  C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:                                                                   C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Reset_Encoder_6_Count(void)                                                 C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Since we're about to access the Encoder_6_Count variable,                    C:\code\2008\Trc2008\encoder.c
                                           	// which can also be modified in the interrupt service routine,                 C:\code\2008\Trc2008\encoder.c
                                           	// we'll briefly disable the encoder's interrupt to make sure                   C:\code\2008\Trc2008\encoder.c
                                           	// that the Encoder_6_Count variable doesn't get altered while                  C:\code\2008\Trc2008\encoder.c
                                           	// we're using it.                                                              C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Now we can set the value of the encoder count without fear                   C:\code\2008\Trc2008\encoder.c
                                           	// that we'll write corrupted data.                                             C:\code\2008\Trc2008\encoder.c
                                           	Encoder_6_Count = 0;                                                            C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           	// Okay, we're done updating the encoder count, so turn the                     C:\code\2008\Trc2008\encoder.c
                                           	// left encoder's interrupt back on.                                            C:\code\2008\Trc2008\encoder.c
                                           	INTCONbits.RBIE = 1;                                                            C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                                                                                                            C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	FUNCTION:		Encoder_6_Int_Handler()                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PURPOSE:		If enabled, the encoder 6 interrupt handler is called when           C:\code\2008\Trc2008\encoder.c
                                           *					the interrupt 6 pin changes logic state                                    C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	CALLED FROM:	user_routines_fast.c/InterruptHandlerLow()                        C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	PARAMETERS:		None.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	RETURNS:		Nothing.                                                             C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *	COMMENTS:                                                                      C:\code\2008\Trc2008\encoder.c
                                           *                                                                                C:\code\2008\Trc2008\encoder.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\encoder.c
                                           void Encoder_6_Int_Handler(unsigned char state)                                  C:\code\2008\Trc2008\encoder.c
                                           {                                                                                C:\code\2008\Trc2008\encoder.c
                                           	// Encoder 6's phase a signal just changed logic level, causing this            C:\code\2008\Trc2008\encoder.c
                                           	// interrupt service routine to be called.                                      C:\code\2008\Trc2008\encoder.c
                                           	if(state == 1)                                                                  C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// rising-edge interrupt                                                       C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           	else                                                                            C:\code\2008\Trc2008\encoder.c
                                           	{                                                                               C:\code\2008\Trc2008\encoder.c
                                           		// falling-edge interrupt                                                      C:\code\2008\Trc2008\encoder.c
                                           		if(ENCODER_6_PHASE_B_PIN == 0)                                                 C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_6_Count += ENCODER_6_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           		else                                                                           C:\code\2008\Trc2008\encoder.c
                                           		{                                                                              C:\code\2008\Trc2008\encoder.c
                                           			Encoder_6_Count -= ENCODER_6_TICK_DELTA;                                      C:\code\2008\Trc2008\encoder.c
                                           		}                                                                              C:\code\2008\Trc2008\encoder.c
                                           	}                                                                               C:\code\2008\Trc2008\encoder.c
                                           }                                                                                C:\code\2008\Trc2008\encoder.c
                                           #endif                                                                           C:\code\2008\Trc2008\encoder.c
                                           /******************************************************************************* C:\code\2008\Trc2008\TRCfunctions.c
                                           * FILE NAME: TRCfunctions.c                                                      C:\code\2008\Trc2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           * AUTHOR: Paul Malmsten, 2008                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           * DESCRIPTION:                                                                   C:\code\2008\Trc2008\TRCfunctions.c
                                           *  This file contains all of the extra functions the Titan Robotics Club has     C:\code\2008\Trc2008\TRCfunctions.c
                                           *  added. Feel free to mess with it.                                             C:\code\2008\Trc2008\TRCfunctions.c
                                           *                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           *******************************************************************************/ C:\code\2008\Trc2008\TRCfunctions.c
                                           #include <stdio.h>                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "ifi_aliases.h"                                                         C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "ifi_default.h"                                                         C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "ifi_utilities.h"                                                       C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "user_routines.h"                                                       C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "serial_ports.h"                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "encoder.h"                                                             C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           #include "TRCfunctions.h"                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           extern Servo Left, Right;                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           //Modified to be supplied with externally calulated velocity at 1/4 rate, approx. 104.8ms C:\code\2008\Trc2008\TRCfunctions.c
00088c   cfd9     MOVFF     0xfd9,0xfe6    int doPid(Servo *p, long vel, int motor_direction)                               C:\code\2008\Trc2008\TRCfunctions.c
00088e   ffe6                                                                                                               
000890   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000892   ffd9                                                                                                               
000894   0e04     MOVLW     0x4                                                                                             
000896   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           	int Error, Drive;                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000898   0efd     MOVLW     0xfd           	if(p->Setpoint > p->velLim)		//Enforce a velocity limit                         C:\code\2008\Trc2008\TRCfunctions.c
00089a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00089c   ffe9                                                                                                               
00089e   0efe     MOVLW     0xfe                                                                                            
0008a0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008a2   ffea                                                                                                               
0008a4   cfee     MOVFF     0xfee,0x0                                                                                       
0008a6   f000                                                                                                               
0008a8   cfef     MOVFF     0xfef,0x1                                                                                       
0008aa   f001                                                                                                               
0008ac   0efd     MOVLW     0xfd                                                                                            
0008ae   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008b0   ffe9                                                                                                               
0008b2   0efe     MOVLW     0xfe                                                                                            
0008b4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008b6   ffea                                                                                                               
0008b8   0e06     MOVLW     0x6                                                                                             
0008ba   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008bc   0e00     MOVLW     0x0                                                                                             
0008be   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008c0   cfee     MOVFF     0xfee,0x2                                                                                       
0008c2   f002                                                                                                               
0008c4   cfef     MOVFF     0xfef,0x3                                                                                       
0008c6   f003                                                                                                               
0008c8   5003     MOVF      0x3,0x0,0x0                                                                                     
0008ca   1801     XORWF     0x1,0x0,0x0                                                                                     
0008cc   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0008ce   d002     BRA       0x8d4                                                                                           
0008d0   3401     RLCF      0x1,0x0,0x0                                                                                     
0008d2   d004     BRA       0x8dc                                                                                           
0008d4   5000     MOVF      0x0,0x0,0x0                                                                                     
0008d6   5c02     SUBWF     0x2,0x0,0x0                                                                                     
0008d8   5001     MOVF      0x1,0x0,0x0                                                                                     
0008da   5803     SUBWFB    0x3,0x0,0x0                                                                                     
0008dc   e219     BC        0x910                                                                                           
0008de   0efd     MOVLW     0xfd           		p->Setpoint = p->velLim;	                                                      C:\code\2008\Trc2008\TRCfunctions.c
0008e0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008e2   ffe9                                                                                                               
0008e4   0efe     MOVLW     0xfe                                                                                            
0008e6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0008e8   ffea                                                                                                               
0008ea   0e06     MOVLW     0x6                                                                                             
0008ec   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0008ee   0e00     MOVLW     0x0                                                                                             
0008f0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0008f2   cfee     MOVFF     0xfee,0x0                                                                                       
0008f4   f000                                                                                                               
0008f6   cfef     MOVFF     0xfef,0x1                                                                                       
0008f8   f001                                                                                                               
0008fa   0efd     MOVLW     0xfd                                                                                            
0008fc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0008fe   ffe9                                                                                                               
000900   0efe     MOVLW     0xfe                                                                                            
000902   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000904   ffea                                                                                                               
000906   c000     MOVFF     0x0,0xfee                                                                                       
000908   ffee                                                                                                               
00090a   c001     MOVFF     0x1,0xfed                                                                                       
00090c   ffed                                                                                                               
00090e   d041     BRA       0x992          	else if(p->Setpoint < -p->velLim)                                               C:\code\2008\Trc2008\TRCfunctions.c
000910   0efd     MOVLW     0xfd                                                                                            
000912   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000914   ffe9                                                                                                               
000916   0efe     MOVLW     0xfe                                                                                            
000918   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00091a   ffea                                                                                                               
00091c   cfee     MOVFF     0xfee,0x0                                                                                       
00091e   f000                                                                                                               
000920   cfef     MOVFF     0xfef,0x1                                                                                       
000922   f001                                                                                                               
000924   0efd     MOVLW     0xfd                                                                                            
000926   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000928   ffe9                                                                                                               
00092a   0efe     MOVLW     0xfe                                                                                            
00092c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00092e   ffea                                                                                                               
000930   0e06     MOVLW     0x6                                                                                             
000932   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000934   0e00     MOVLW     0x0                                                                                             
000936   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000938   cfee     MOVFF     0xfee,0x2                                                                                       
00093a   f002                                                                                                               
00093c   cfef     MOVFF     0xfef,0x3                                                                                       
00093e   f003                                                                                                               
000940   6c02     NEGF      0x2,0x0                                                                                         
000942   1e03     COMF      0x3,0x1,0x0                                                                                     
000944   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000946   5001     MOVF      0x1,0x0,0x0                                                                                     
000948   1803     XORWF     0x3,0x0,0x0                                                                                     
00094a   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00094c   d002     BRA       0x952                                                                                           
00094e   3403     RLCF      0x3,0x0,0x0                                                                                     
000950   d004     BRA       0x95a                                                                                           
000952   5002     MOVF      0x2,0x0,0x0                                                                                     
000954   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000956   5003     MOVF      0x3,0x0,0x0                                                                                     
000958   5801     SUBWFB    0x1,0x0,0x0                                                                                     
00095a   e21b     BC        0x992                                                                                           
00095c   0efd     MOVLW     0xfd           		p->Setpoint = -p->velLim;                                                      C:\code\2008\Trc2008\TRCfunctions.c
00095e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000960   ffe9                                                                                                               
000962   0efe     MOVLW     0xfe                                                                                            
000964   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000966   ffea                                                                                                               
000968   0e06     MOVLW     0x6                                                                                             
00096a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00096c   0e00     MOVLW     0x0                                                                                             
00096e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000970   cfee     MOVFF     0xfee,0x0                                                                                       
000972   f000                                                                                                               
000974   cfef     MOVFF     0xfef,0x1                                                                                       
000976   f001                                                                                                               
000978   6c00     NEGF      0x0,0x0                                                                                         
00097a   1e01     COMF      0x1,0x1,0x0                                                                                     
00097c   2201     ADDWFC    0x1,0x1,0x0                                                                                     
00097e   0efd     MOVLW     0xfd                                                                                            
000980   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000982   ffe9                                                                                                               
000984   0efe     MOVLW     0xfe                                                                                            
000986   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000988   ffea                                                                                                               
00098a   c000     MOVFF     0x0,0xfee                                                                                       
00098c   ffee                                                                                                               
00098e   c001     MOVFF     0x1,0xfed                                                                                       
000990   ffed                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           	//vel = encoder - p->PrevEncoder;	//Find the current velocity                   C:\code\2008\Trc2008\TRCfunctions.c
                                           	//p->PrevEncoder = encoder;                                                     C:\code\2008\Trc2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
000992   0efd     MOVLW     0xfd           	Error = p->Setpoint - vel;		//Compare against the requested velocity            C:\code\2008\Trc2008\TRCfunctions.c
000994   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000996   ffe9                                                                                                               
000998   0efe     MOVLW     0xfe                                                                                            
00099a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00099c   ffea                                                                                                               
00099e   cfee     MOVFF     0xfee,0x4                                                                                       
0009a0   f004                                                                                                               
0009a2   cfef     MOVFF     0xfef,0x5                                                                                       
0009a4   f005                                                                                                               
0009a6   6a06     CLRF      0x6,0x0                                                                                         
0009a8   6a07     CLRF      0x7,0x0                                                                                         
0009aa   ae05     BTFSS     0x5,0x7,0x0                                                                                     
0009ac   d002     BRA       0x9b2                                                                                           
0009ae   6806     SETF      0x6,0x0                                                                                         
0009b0   6807     SETF      0x7,0x0                                                                                         
0009b2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0009b4   0ff9     ADDLW     0xf9                                                                                            
0009b6   6ee9     MOVWF     0xe9,0x0                                                                                        
0009b8   0eff     MOVLW     0xff                                                                                            
0009ba   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0009bc   6eea     MOVWF     0xea,0x0                                                                                        
0009be   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009c0   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0009c2   6e00     MOVWF     0x0,0x0                                                                                         
0009c4   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009c6   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0009c8   6e01     MOVWF     0x1,0x0                                                                                         
0009ca   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009cc   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0009ce   6e02     MOVWF     0x2,0x0                                                                                         
0009d0   50ee     MOVF      0xee,0x0,0x0                                                                                    
0009d2   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0009d4   6e03     MOVWF     0x3,0x0                                                                                         
0009d6   c000     MOVFF     0x0,0xfde                                                                                       
0009d8   ffde                                                                                                               
0009da   c001     MOVFF     0x1,0xfdd                                                                                       
0009dc   ffdd                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
0009de   0efd     MOVLW     0xfd           	Drive = (p->Kp*Error + p->Kd*(Error - p->PrevErr) + p->Ki*p->Ierror)/p->Ko;  //Yay! PID! Note: PrevErr is bigger than Error when approaching setpoint; Kd is okay being added C:\code\2008\Trc2008\TRCfunctions.c
0009e0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009e2   ffe9                                                                                                               
0009e4   0efe     MOVLW     0xfe                                                                                            
0009e6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009e8   ffea                                                                                                               
0009ea   0e0e     MOVLW     0xe                                                                                             
0009ec   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0009ee   0e00     MOVLW     0x0                                                                                             
0009f0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0009f2   cfee     MOVFF     0xfee,0x12                                                                                      
0009f4   f012                                                                                                               
0009f6   cfef     MOVFF     0xfef,0x13                                                                                      
0009f8   f013                                                                                                               
0009fa   0efd     MOVLW     0xfd                                                                                            
0009fc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009fe   ffe9                                                                                                               
000a00   0efe     MOVLW     0xfe                                                                                            
000a02   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a04   ffea                                                                                                               
000a06   0e0a     MOVLW     0xa                                                                                             
000a08   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a0a   0e00     MOVLW     0x0                                                                                             
000a0c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a0e   cfee     MOVFF     0xfee,0x8                                                                                       
000a10   f008                                                                                                               
000a12   cfef     MOVFF     0xfef,0x9                                                                                       
000a14   f009                                                                                                               
000a16   cfde     MOVFF     0xfde,0xc                                                                                       
000a18   f00c                                                                                                               
000a1a   cfdd     MOVFF     0xfdd,0xd                                                                                       
000a1c   f00d                                                                                                               
000a1e   0efd     MOVLW     0xfd                                                                                            
000a20   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a22   ffe9                                                                                                               
000a24   0efe     MOVLW     0xfe                                                                                            
000a26   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a28   ffea                                                                                                               
000a2a   0e02     MOVLW     0x2                                                                                             
000a2c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a2e   0e00     MOVLW     0x0                                                                                             
000a30   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a32   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a34   5c0c     SUBWF     0xc,0x0,0x0                                                                                     
000a36   6e0a     MOVWF     0xa,0x0                                                                                         
000a38   50ee     MOVF      0xee,0x0,0x0                                                                                    
000a3a   580d     SUBWFB    0xd,0x0,0x0                                                                                     
000a3c   6e0b     MOVWF     0xb,0x0                                                                                         
000a3e   0100     MOVLB     0x0                                                                                             
000a40   500a     MOVF      0xa,0x0,0x0                                                                                     
000a42   0208     MULWF     0x8,0x0                                                                                         
000a44   cff3     MOVFF     0xff3,0x6                                                                                       
000a46   f006                                                                                                               
000a48   cff4     MOVFF     0xff4,0x7                                                                                       
000a4a   f007                                                                                                               
000a4c   0209     MULWF     0x9,0x0                                                                                         
000a4e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a50   2607     ADDWF     0x7,0x1,0x0                                                                                     
000a52   500b     MOVF      0xb,0x0,0x0                                                                                     
000a54   0208     MULWF     0x8,0x0                                                                                         
000a56   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000a58   2607     ADDWF     0x7,0x1,0x0                                                                                     
000a5a   0efd     MOVLW     0xfd                                                                                            
000a5c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a5e   ffe9                                                                                                               
000a60   0efe     MOVLW     0xfe                                                                                            
000a62   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000a64   ffea                                                                                                               
000a66   0e08     MOVLW     0x8                                                                                             
000a68   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000a6a   0e00     MOVLW     0x0                                                                                             
000a6c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000a6e   cfee     MOVFF     0xfee,0x4                                                                                       
000a70   f004                                                                                                               
000a72   cfef     MOVFF     0xfef,0x5                                                                                       
000a74   f005                                                                                                               
000a76   c004     MOVFF     0x4,0x41                                                                                        
000a78   f041                                                                                                               
000a7a   c005     MOVFF     0x5,0x42                                                                                        
000a7c   f042                                                                                                               
000a7e   cfde     MOVFF     0xfde,0x46                                                                                      
000a80   f046                                                                                                               
000a82   cfdd     MOVFF     0xfdd,0x47                                                                                      
000a84   f047                                                                                                               
000a86   ec96     CALL      0x3f2c,0x0                                                                                      
000a88   f01f                                                                                                               
000a8a   503f     MOVF      0x3f,0x0,0x0                                                                                    
000a8c   2406     ADDWF     0x6,0x0,0x0                                                                                     
000a8e   6e02     MOVWF     0x2,0x0                                                                                         
000a90   5040     MOVF      0x40,0x0,0x0                                                                                    
000a92   2007     ADDWFC    0x7,0x0,0x0                                                                                     
000a94   6e03     MOVWF     0x3,0x0                                                                                         
000a96   0efd     MOVLW     0xfd                                                                                            
000a98   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a9a   ffe9                                                                                                               
000a9c   0efe     MOVLW     0xfe                                                                                            
000a9e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000aa0   ffea                                                                                                               
000aa2   0e04     MOVLW     0x4                                                                                             
000aa4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000aa6   0e00     MOVLW     0x0                                                                                             
000aa8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000aaa   cfee     MOVFF     0xfee,0x10                                                                                      
000aac   f010                                                                                                               
000aae   cfef     MOVFF     0xfef,0x11                                                                                      
000ab0   f011                                                                                                               
000ab2   0efd     MOVLW     0xfd                                                                                            
000ab4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000ab6   ffe9                                                                                                               
000ab8   0efe     MOVLW     0xfe                                                                                            
000aba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000abc   ffea                                                                                                               
000abe   0e0c     MOVLW     0xc                                                                                             
000ac0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000ac2   0e00     MOVLW     0x0                                                                                             
000ac4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000ac6   cfee     MOVFF     0xfee,0xe                                                                                       
000ac8   f00e                                                                                                               
000aca   cfef     MOVFF     0xfef,0xf                                                                                       
000acc   f00f                                                                                                               
000ace   c00e     MOVFF     0xe,0x41                                                                                        
000ad0   f041                                                                                                               
000ad2   c00f     MOVFF     0xf,0x42                                                                                        
000ad4   f042                                                                                                               
000ad6   c010     MOVFF     0x10,0x46                                                                                       
000ad8   f046                                                                                                               
000ada   c011     MOVFF     0x11,0x47                                                                                       
000adc   f047                                                                                                               
000ade   ec96     CALL      0x3f2c,0x0                                                                                      
000ae0   f01f                                                                                                               
000ae2   5002     MOVF      0x2,0x0,0x0                                                                                     
000ae4   243f     ADDWF     0x3f,0x0,0x0                                                                                    
000ae6   6e00     MOVWF     0x0,0x0                                                                                         
000ae8   5003     MOVF      0x3,0x0,0x0                                                                                     
000aea   2040     ADDWFC    0x40,0x0,0x0                                                                                    
000aec   6e01     MOVWF     0x1,0x0                                                                                         
000aee   c000     MOVFF     0x0,0x41                                                                                        
000af0   f041                                                                                                               
000af2   c001     MOVFF     0x1,0x42                                                                                        
000af4   f042                                                                                                               
000af6   c012     MOVFF     0x12,0x46                                                                                       
000af8   f046                                                                                                               
000afa   c013     MOVFF     0x13,0x47                                                                                       
000afc   f047                                                                                                               
000afe   ec3c     CALL      0x3e78,0x0                                                                                      
000b00   f01f                                                                                                               
000b02   0e02     MOVLW     0x2                                                                                             
000b04   c041     MOVFF     0x41,0xfdb                                                                                      
000b06   ffdb                                                                                                               
000b08   0e03     MOVLW     0x3                                                                                             
000b0a   c042     MOVFF     0x42,0xfdb                                                                                      
000b0c   ffdb                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
000b0e   0e02     MOVLW     0x2            	printf("LDr:%d RDr:%d LSet:%d RSet:%d Kp:%d Ki:%d Kd:%d Drv:%d\r\n", pwm15, pwm13, Left.Setpoint, Right.Setpoint, p->Kp*Error/p->Ko, p->Ki*p->Ierror/p->Ko, p->Kd*(Error - p->PrevErr)/p->Ko, Drive); C:\code\2008\Trc2008\TRCfunctions.c
000b10   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b12   ffe6                                                                                                               
000b14   0e03     MOVLW     0x3                                                                                             
000b16   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000b18   ffe6                                                                                                               
000b1a   0efd     MOVLW     0xfd                                                                                            
000b1c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b1e   ffe9                                                                                                               
000b20   0efe     MOVLW     0xfe                                                                                            
000b22   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b24   ffea                                                                                                               
000b26   0e0e     MOVLW     0xe                                                                                             
000b28   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b2a   0e00     MOVLW     0x0                                                                                             
000b2c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b2e   cfee     MOVFF     0xfee,0xa                                                                                       
000b30   f00a                                                                                                               
000b32   cfef     MOVFF     0xfef,0xb                                                                                       
000b34   f00b                                                                                                               
000b36   0efd     MOVLW     0xfd                                                                                            
000b38   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b3a   ffe9                                                                                                               
000b3c   0efe     MOVLW     0xfe                                                                                            
000b3e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b40   ffea                                                                                                               
000b42   0e0a     MOVLW     0xa                                                                                             
000b44   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b46   0e00     MOVLW     0x0                                                                                             
000b48   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b4a   cfee     MOVFF     0xfee,0x4                                                                                       
000b4c   f004                                                                                                               
000b4e   cfef     MOVFF     0xfef,0x5                                                                                       
000b50   f005                                                                                                               
000b52   cfde     MOVFF     0xfde,0x8                                                                                       
000b54   f008                                                                                                               
000b56   cfdd     MOVFF     0xfdd,0x9                                                                                       
000b58   f009                                                                                                               
000b5a   0efd     MOVLW     0xfd                                                                                            
000b5c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b5e   ffe9                                                                                                               
000b60   0efe     MOVLW     0xfe                                                                                            
000b62   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b64   ffea                                                                                                               
000b66   0e02     MOVLW     0x2                                                                                             
000b68   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b6a   0e00     MOVLW     0x0                                                                                             
000b6c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b6e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000b70   5c08     SUBWF     0x8,0x0,0x0                                                                                     
000b72   6e06     MOVWF     0x6,0x0                                                                                         
000b74   50ee     MOVF      0xee,0x0,0x0                                                                                    
000b76   5809     SUBWFB    0x9,0x0,0x0                                                                                     
000b78   6e07     MOVWF     0x7,0x0                                                                                         
000b7a   0100     MOVLB     0x0                                                                                             
000b7c   5006     MOVF      0x6,0x0,0x0                                                                                     
000b7e   0204     MULWF     0x4,0x0                                                                                         
000b80   cff3     MOVFF     0xff3,0x2                                                                                       
000b82   f002                                                                                                               
000b84   cff4     MOVFF     0xff4,0x3                                                                                       
000b86   f003                                                                                                               
000b88   0205     MULWF     0x5,0x0                                                                                         
000b8a   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000b8c   2603     ADDWF     0x3,0x1,0x0                                                                                     
000b8e   5007     MOVF      0x7,0x0,0x0                                                                                     
000b90   0204     MULWF     0x4,0x0                                                                                         
000b92   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000b94   2603     ADDWF     0x3,0x1,0x0                                                                                     
000b96   c002     MOVFF     0x2,0x41                                                                                        
000b98   f041                                                                                                               
000b9a   c003     MOVFF     0x3,0x42                                                                                        
000b9c   f042                                                                                                               
000b9e   c00a     MOVFF     0xa,0x46                                                                                        
000ba0   f046                                                                                                               
000ba2   c00b     MOVFF     0xb,0x47                                                                                        
000ba4   f047                                                                                                               
000ba6   ec3c     CALL      0x3e78,0x0                                                                                      
000ba8   f01f                                                                                                               
000baa   c041     MOVFF     0x41,0x0                                                                                        
000bac   f000                                                                                                               
000bae   c042     MOVFF     0x42,0x1                                                                                        
000bb0   f001                                                                                                               
000bb2   c000     MOVFF     0x0,0xfe6                                                                                       
000bb4   ffe6                                                                                                               
000bb6   c001     MOVFF     0x1,0xfe6                                                                                       
000bb8   ffe6                                                                                                               
000bba   0efd     MOVLW     0xfd                                                                                            
000bbc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bbe   ffe9                                                                                                               
000bc0   0efe     MOVLW     0xfe                                                                                            
000bc2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000bc4   ffea                                                                                                               
000bc6   0e0e     MOVLW     0xe                                                                                             
000bc8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000bca   0e00     MOVLW     0x0                                                                                             
000bcc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000bce   cfee     MOVFF     0xfee,0x14                                                                                      
000bd0   f014                                                                                                               
000bd2   cfef     MOVFF     0xfef,0x15                                                                                      
000bd4   f015                                                                                                               
000bd6   0efd     MOVLW     0xfd                                                                                            
000bd8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bda   ffe9                                                                                                               
000bdc   0efe     MOVLW     0xfe                                                                                            
000bde   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000be0   ffea                                                                                                               
000be2   0e0c     MOVLW     0xc                                                                                             
000be4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000be6   0e00     MOVLW     0x0                                                                                             
000be8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000bea   cfee     MOVFF     0xfee,0x10                                                                                      
000bec   f010                                                                                                               
000bee   cfef     MOVFF     0xfef,0x11                                                                                      
000bf0   f011                                                                                                               
000bf2   0efd     MOVLW     0xfd                                                                                            
000bf4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000bf6   ffe9                                                                                                               
000bf8   0efe     MOVLW     0xfe                                                                                            
000bfa   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000bfc   ffea                                                                                                               
000bfe   0e04     MOVLW     0x4                                                                                             
000c00   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000c02   0e00     MOVLW     0x0                                                                                             
000c04   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000c06   cfee     MOVFF     0xfee,0x12                                                                                      
000c08   f012                                                                                                               
000c0a   cfef     MOVFF     0xfef,0x13                                                                                      
000c0c   f013                                                                                                               
000c0e   0100     MOVLB     0x0                                                                                             
000c10   5012     MOVF      0x12,0x0,0x0                                                                                    
000c12   0210     MULWF     0x10,0x0                                                                                        
000c14   cff3     MOVFF     0xff3,0xe                                                                                       
000c16   f00e                                                                                                               
000c18   cff4     MOVFF     0xff4,0xf                                                                                       
000c1a   f00f                                                                                                               
000c1c   0211     MULWF     0x11,0x0                                                                                        
000c1e   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000c20   260f     ADDWF     0xf,0x1,0x0                                                                                     
000c22   5013     MOVF      0x13,0x0,0x0                                                                                    
000c24   0210     MULWF     0x10,0x0                                                                                        
000c26   50f3     MOVF      0xf3,0x0,0x0                                                                                    
000c28   260f     ADDWF     0xf,0x1,0x0                                                                                     
000c2a   c00e     MOVFF     0xe,0x41                                                                                        
000c2c   f041                                                                                                               
000c2e   c00f     MOVFF     0xf,0x42                                                                                        
000c30   f042                                                                                                               
000c32   c014     MOVFF     0x14,0x46                                                                                       
000c34   f046                                                                                                               
000c36   c015     MOVFF     0x15,0x47                                                                                       
000c38   f047                                                                                                               
000c3a   ec3c     CALL      0x3e78,0x0                                                                                      
000c3c   f01f                                                                                                               
000c3e   c041     MOVFF     0x41,0xc                                                                                        
000c40   f00c                                                                                                               
000c42   c042     MOVFF     0x42,0xd                                                                                        
000c44   f00d                                                                                                               
000c46   c00c     MOVFF     0xc,0xfe6                                                                                       
000c48   ffe6                                                                                                               
000c4a   c00d     MOVFF     0xd,0xfe6                                                                                       
000c4c   ffe6                                                                                                               
000c4e   0efd     MOVLW     0xfd                                                                                            
000c50   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c52   ffe9                                                                                                               
000c54   0efe     MOVLW     0xfe                                                                                            
000c56   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c58   ffea                                                                                                               
000c5a   0e0e     MOVLW     0xe                                                                                             
000c5c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000c5e   0e00     MOVLW     0x0                                                                                             
000c60   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000c62   cfee     MOVFF     0xfee,0x1c                                                                                      
000c64   f01c                                                                                                               
000c66   cfef     MOVFF     0xfef,0x1d                                                                                      
000c68   f01d                                                                                                               
000c6a   0efd     MOVLW     0xfd                                                                                            
000c6c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c6e   ffe9                                                                                                               
000c70   0efe     MOVLW     0xfe                                                                                            
000c72   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c74   ffea                                                                                                               
000c76   0e08     MOVLW     0x8                                                                                             
000c78   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000c7a   0e00     MOVLW     0x0                                                                                             
000c7c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000c7e   cfee     MOVFF     0xfee,0x1a                                                                                      
000c80   f01a                                                                                                               
000c82   cfef     MOVFF     0xfef,0x1b                                                                                      
000c84   f01b                                                                                                               
000c86   c01a     MOVFF     0x1a,0x41                                                                                       
000c88   f041                                                                                                               
000c8a   c01b     MOVFF     0x1b,0x42                                                                                       
000c8c   f042                                                                                                               
000c8e   cfde     MOVFF     0xfde,0x46                                                                                      
000c90   f046                                                                                                               
000c92   cfdd     MOVFF     0xfdd,0x47                                                                                      
000c94   f047                                                                                                               
000c96   ec96     CALL      0x3f2c,0x0                                                                                      
000c98   f01f                                                                                                               
000c9a   c03f     MOVFF     0x3f,0x18                                                                                       
000c9c   f018                                                                                                               
000c9e   c040     MOVFF     0x40,0x19                                                                                       
000ca0   f019                                                                                                               
000ca2   c018     MOVFF     0x18,0x41                                                                                       
000ca4   f041                                                                                                               
000ca6   c019     MOVFF     0x19,0x42                                                                                       
000ca8   f042                                                                                                               
000caa   c01c     MOVFF     0x1c,0x46                                                                                       
000cac   f046                                                                                                               
000cae   c01d     MOVFF     0x1d,0x47                                                                                       
000cb0   f047                                                                                                               
000cb2   ec3c     CALL      0x3e78,0x0                                                                                      
000cb4   f01f                                                                                                               
000cb6   c041     MOVFF     0x41,0x16                                                                                       
000cb8   f016                                                                                                               
000cba   c042     MOVFF     0x42,0x17                                                                                       
000cbc   f017                                                                                                               
000cbe   c016     MOVFF     0x16,0xfe6                                                                                      
000cc0   ffe6                                                                                                               
000cc2   c017     MOVFF     0x17,0xfe6                                                                                      
000cc4   ffe6                                                                                                               
000cc6   c1db     MOVFF     0x1db,0xfe6                                                                                     
000cc8   ffe6                                                                                                               
000cca   c1dc     MOVFF     0x1dc,0xfe6                                                                                     
000ccc   ffe6                                                                                                               
000cce   c1c1     MOVFF     0x1c1,0xfe6                                                                                     
000cd0   ffe6                                                                                                               
000cd2   c1c2     MOVFF     0x1c2,0xfe6                                                                                     
000cd4   ffe6                                                                                                               
000cd6   0101     MOVLB     0x1                                                                                             
000cd8   5190     MOVF      0x90,0x0,0x1                                                                                    
000cda   6ee6     MOVWF     0xe6,0x0                                                                                        
000cdc   6ae6     CLRF      0xe6,0x0                                                                                        
000cde   5192     MOVF      0x92,0x0,0x1                                                                                    
000ce0   6ee6     MOVWF     0xe6,0x0                                                                                        
000ce2   6ae6     CLRF      0xe6,0x0                                                                                        
000ce4   0e8f     MOVLW     0x8f                                                                                            
000ce6   6e1e     MOVWF     0x1e,0x0                                                                                        
000ce8   0e55     MOVLW     0x55                                                                                            
000cea   6e1f     MOVWF     0x1f,0x0                                                                                        
000cec   6a20     CLRF      0x20,0x0                                                                                        
000cee   c01e     MOVFF     0x1e,0xfe6                                                                                      
000cf0   ffe6                                                                                                               
000cf2   c01f     MOVFF     0x1f,0xfe6                                                                                      
000cf4   ffe6                                                                                                               
000cf6   c020     MOVFF     0x20,0xfe6                                                                                      
000cf8   ffe6                                                                                                               
000cfa   ec8c     CALL      0x5918,0x0                                                                                      
000cfc   f02c                                                                                                               
000cfe   6ef5     MOVWF     0xf5,0x0                                                                                        
000d00   0e13     MOVLW     0x13                                                                                            
000d02   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
000d04   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	//printf("Err:%d prevErr:%d Kd:%d\r\n", Error, p->PrevErr, p->Kd*(Error - p->PrevErr));	 C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000d06   0efd     MOVLW     0xfd           	p->PrevErr = Error;				//Save this error for next time                          C:\code\2008\Trc2008\TRCfunctions.c
000d08   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d0a   ffe9                                                                                                               
000d0c   0efe     MOVLW     0xfe                                                                                            
000d0e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d10   ffea                                                                                                               
000d12   0e02     MOVLW     0x2                                                                                             
000d14   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d16   0e00     MOVLW     0x0                                                                                             
000d18   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d1a   cfde     MOVFF     0xfde,0xfee                                                                                     
000d1c   ffee                                                                                                               
000d1e   cfdd     MOVFF     0xfdd,0xfed                                                                                     
000d20   ffed                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000d22   0e02     MOVLW     0x2                if (Drive >= 127)				//Accumulate Integral error only if not saturated; Remember this is 0 based - 127 is added later C:\code\2008\Trc2008\TRCfunctions.c
000d24   cfdb     MOVFF     0xfdb,0x0                                                                                       
000d26   f000                                                                                                               
000d28   0e03     MOVLW     0x3                                                                                             
000d2a   cfdb     MOVFF     0xfdb,0x1                                                                                       
000d2c   f001                                                                                                               
000d2e   90d8     BCF       0xd8,0x0,0x0                                                                                    
000d30   5001     MOVF      0x1,0x0,0x0                                                                                     
000d32   e604     BN        0xd3c                                                                                           
000d34   0e7f     MOVLW     0x7f                                                                                            
000d36   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000d38   0e00     MOVLW     0x0                                                                                             
000d3a   5801     SUBWFB    0x1,0x0,0x0                                                                                     
000d3c   e308     BNC       0xd4e                                                                                           
000d3e   0e7f     MOVLW     0x7f                      Drive = 127;				//Forward Limit                                       C:\code\2008\Trc2008\TRCfunctions.c
000d40   6ef3     MOVWF     0xf3,0x0                                                                                        
000d42   0e02     MOVLW     0x2                                                                                             
000d44   cff3     MOVFF     0xff3,0xfdb                                                                                     
000d46   ffdb                                                                                                               
000d48   0e03     MOVLW     0x3                                                                                             
000d4a   6adb     CLRF      0xdb,0x0                                                                                        
000d4c   d027     BRA       0xd9c              else if (Drive <= -127)                                                      C:\code\2008\Trc2008\TRCfunctions.c
000d4e   0e02     MOVLW     0x2                                                                                             
000d50   cfdb     MOVFF     0xfdb,0x0                                                                                       
000d52   f000                                                                                                               
000d54   0e03     MOVLW     0x3                                                                                             
000d56   cfdb     MOVFF     0xfdb,0x1                                                                                       
000d58   f001                                                                                                               
000d5a   3401     RLCF      0x1,0x0,0x0                                                                                     
000d5c   e304     BNC       0xd66                                                                                           
000d5e   5000     MOVF      0x0,0x0,0x0                                                                                     
000d60   0881     SUBLW     0x81                                                                                            
000d62   0eff     MOVLW     0xff                                                                                            
000d64   5401     SUBFWB    0x1,0x0,0x0                                                                                     
000d66   e308     BNC       0xd78                                                                                           
000d68   0e81     MOVLW     0x81                   Drive = -127;				//Reverse Limit                                         C:\code\2008\Trc2008\TRCfunctions.c
000d6a   6ef3     MOVWF     0xf3,0x0                                                                                        
000d6c   0e02     MOVLW     0x2                                                                                             
000d6e   cff3     MOVFF     0xff3,0xfdb                                                                                     
000d70   ffdb                                                                                                               
000d72   0e03     MOVLW     0x3                                                                                             
000d74   68db     SETF      0xdb,0x0                                                                                        
000d76   d012     BRA       0xd9c              else                                                                         C:\code\2008\Trc2008\TRCfunctions.c
000d78   cfde     MOVFF     0xfde,0x0      		p->Ierror += Error;			//Accumulate Error                                       C:\code\2008\Trc2008\TRCfunctions.c
000d7a   f000                                                                                                               
000d7c   cfdd     MOVFF     0xfdd,0x1                                                                                       
000d7e   f001                                                                                                               
000d80   0efd     MOVLW     0xfd                                                                                            
000d82   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000d84   ffe9                                                                                                               
000d86   0efe     MOVLW     0xfe                                                                                            
000d88   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000d8a   ffea                                                                                                               
000d8c   0e04     MOVLW     0x4                                                                                             
000d8e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000d90   0e00     MOVLW     0x0                                                                                             
000d92   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000d94   5000     MOVF      0x0,0x0,0x0                                                                                     
000d96   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000d98   5001     MOVF      0x1,0x0,0x0                                                                                     
000d9a   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           		                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           	/*if (Drive > 0)				//Get rid of the IFI deadband (don't see much point for this) C:\code\2008\Trc2008\TRCfunctions.c
                                           		Drive += p->minDrv;                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           	else if (Drive < 0)                                                             C:\code\2008\Trc2008\TRCfunctions.c
                                           		Drive -= p->minDrv;*/                                                          C:\code\2008\Trc2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000d9c   0e7f     MOVLW     0x7f           	return (p->Drive = motor_direction*(Drive+127)); //Adjust direction             C:\code\2008\Trc2008\TRCfunctions.c
000d9e   6ee7     MOVWF     0xe7,0x0                                                                                        
000da0   0e02     MOVLW     0x2                                                                                             
000da2   cfdb     MOVFF     0xfdb,0x2                                                                                       
000da4   f002                                                                                                               
000da6   0e03     MOVLW     0x3                                                                                             
000da8   cfdb     MOVFF     0xfdb,0x3                                                                                       
000daa   f003                                                                                                               
000dac   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000dae   2602     ADDWF     0x2,0x1,0x0                                                                                     
000db0   0e00     MOVLW     0x0                                                                                             
000db2   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000db4   0ef7     MOVLW     0xf7                                                                                            
000db6   cfdb     MOVFF     0xfdb,0x41                                                                                      
000db8   f041                                                                                                               
000dba   0ef8     MOVLW     0xf8                                                                                            
000dbc   cfdb     MOVFF     0xfdb,0x42                                                                                      
000dbe   f042                                                                                                               
000dc0   c002     MOVFF     0x2,0x46                                                                                        
000dc2   f046                                                                                                               
000dc4   c003     MOVFF     0x3,0x47                                                                                        
000dc6   f047                                                                                                               
000dc8   ec96     CALL      0x3f2c,0x0                                                                                      
000dca   f01f                                                                                                               
000dcc   c03f     MOVFF     0x3f,0x0                                                                                        
000dce   f000                                                                                                               
000dd0   c040     MOVFF     0x40,0x1                                                                                        
000dd2   f001                                                                                                               
000dd4   0efd     MOVLW     0xfd                                                                                            
000dd6   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000dd8   ffe9                                                                                                               
000dda   0efe     MOVLW     0xfe                                                                                            
000ddc   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000dde   ffea                                                                                                               
000de0   0e10     MOVLW     0x10                                                                                            
000de2   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000de4   0e00     MOVLW     0x0                                                                                             
000de6   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000de8   c000     MOVFF     0x0,0xfee                                                                                       
000dea   ffee                                                                                                               
000dec   c001     MOVFF     0x1,0xfed                                                                                       
000dee   ffed                                                                                                               
000df0   c000     MOVFF     0x0,0xff3                                                                                       
000df2   fff3                                                                                                               
000df4   c001     MOVFF     0x1,0xff4                                                                                       
000df6   fff4                                                                                                               
000df8   d000     BRA       0xdfa                                                                                           
000dfa   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
000dfc   ffe1                                                                                                               
000dfe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000e00   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000e02   ffd9                                                                                                               
000e04   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000e06   cfd9     MOVFF     0xfd9,0xfe6    int doVelPid(VelServo *p, long encoder, int motor_direction)                     C:\code\2008\Trc2008\TRCfunctions.c
000e08   ffe6                                                                                                               
000e0a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000e0c   ffd9                                                                                                               
000e0e   0e08     MOVLW     0x8                                                                                             
000e10   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
000e12   6ade     CLRF      0xde,0x0       	long encVel = 0;                                                                C:\code\2008\Trc2008\TRCfunctions.c
000e14   6ade     CLRF      0xde,0x0                                                                                        
000e16   6ade     CLRF      0xde,0x0                                                                                        
000e18   6add     CLRF      0xdd,0x0                                                                                        
000e1a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
000e1c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	int velErr,Drive;                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           #ifdef DRIVE_POSITION_MODE                                                       C:\code\2008\Trc2008\TRCfunctions.c
000e1e   0efd     MOVLW     0xfd           	p->Vsetpoint = ((p->Psetpoint - encoder)*p->Kp)/p->Ko;			//Position Ctrl Loop; sent to Velocity Ctrl Loop C:\code\2008\Trc2008\TRCfunctions.c
000e20   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e22   ffe9                                                                                                               
000e24   0efe     MOVLW     0xfe                                                                                            
000e26   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e28   ffea                                                                                                               
000e2a   0e16     MOVLW     0x16                                                                                            
000e2c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e2e   0e00     MOVLW     0x0                                                                                             
000e30   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e32   cfee     MOVFF     0xfee,0x12                                                                                      
000e34   f012                                                                                                               
000e36   cfef     MOVFF     0xfef,0x13                                                                                      
000e38   f013                                                                                                               
000e3a   6a14     CLRF      0x14,0x0                                                                                        
000e3c   6a15     CLRF      0x15,0x0                                                                                        
000e3e   ae13     BTFSS     0x13,0x7,0x0                                                                                    
000e40   d002     BRA       0xe46                                                                                           
000e42   6814     SETF      0x14,0x0                                                                                        
000e44   6815     SETF      0x15,0x0                                                                                        
000e46   0efd     MOVLW     0xfd                                                                                            
000e48   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e4a   ffe9                                                                                                               
000e4c   0efe     MOVLW     0xfe                                                                                            
000e4e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e50   ffea                                                                                                               
000e52   0e10     MOVLW     0x10                                                                                            
000e54   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000e56   0e00     MOVLW     0x0                                                                                             
000e58   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000e5a   cfee     MOVFF     0xfee,0xe                                                                                       
000e5c   f00e                                                                                                               
000e5e   cfef     MOVFF     0xfef,0xf                                                                                       
000e60   f00f                                                                                                               
000e62   6a10     CLRF      0x10,0x0                                                                                        
000e64   6a11     CLRF      0x11,0x0                                                                                        
000e66   ae0f     BTFSS     0xf,0x7,0x0                                                                                     
000e68   d002     BRA       0xe6e                                                                                           
000e6a   6810     SETF      0x10,0x0                                                                                        
000e6c   6811     SETF      0x11,0x0                                                                                        
000e6e   0ef9     MOVLW     0xf9                                                                                            
000e70   cfdb     MOVFF     0xfdb,0xa                                                                                       
000e72   f00a                                                                                                               
000e74   0efa     MOVLW     0xfa                                                                                            
000e76   cfdb     MOVFF     0xfdb,0xb                                                                                       
000e78   f00b                                                                                                               
000e7a   0efb     MOVLW     0xfb                                                                                            
000e7c   cfdb     MOVFF     0xfdb,0xc                                                                                       
000e7e   f00c                                                                                                               
000e80   0efc     MOVLW     0xfc                                                                                            
000e82   cfdb     MOVFF     0xfdb,0xd                                                                                       
000e84   f00d                                                                                                               
000e86   0efd     MOVLW     0xfd                                                                                            
000e88   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000e8a   ffe9                                                                                                               
000e8c   0efe     MOVLW     0xfe                                                                                            
000e8e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000e90   ffea                                                                                                               
000e92   500a     MOVF      0xa,0x0,0x0                                                                                     
000e94   5cee     SUBWF     0xee,0x0,0x0                                                                                    
000e96   6e06     MOVWF     0x6,0x0                                                                                         
000e98   500b     MOVF      0xb,0x0,0x0                                                                                     
000e9a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000e9c   6e07     MOVWF     0x7,0x0                                                                                         
000e9e   500c     MOVF      0xc,0x0,0x0                                                                                     
000ea0   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000ea2   6e08     MOVWF     0x8,0x0                                                                                         
000ea4   500d     MOVF      0xd,0x0,0x0                                                                                     
000ea6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000ea8   6e09     MOVWF     0x9,0x0                                                                                         
000eaa   c006     MOVFF     0x6,0x3f                                                                                        
000eac   f03f                                                                                                               
000eae   c007     MOVFF     0x7,0x40                                                                                        
000eb0   f040                                                                                                               
000eb2   c008     MOVFF     0x8,0x41                                                                                        
000eb4   f041                                                                                                               
000eb6   c009     MOVFF     0x9,0x42                                                                                        
000eb8   f042                                                                                                               
000eba   c00e     MOVFF     0xe,0x44                                                                                        
000ebc   f044                                                                                                               
000ebe   c00f     MOVFF     0xf,0x45                                                                                        
000ec0   f045                                                                                                               
000ec2   c010     MOVFF     0x10,0x46                                                                                       
000ec4   f046                                                                                                               
000ec6   c011     MOVFF     0x11,0x47                                                                                       
000ec8   f047                                                                                                               
000eca   ec18     CALL      0x5a30,0x0                                                                                      
000ecc   f02d                                                                                                               
000ece   c03b     MOVFF     0x3b,0x2                                                                                        
000ed0   f002                                                                                                               
000ed2   c03c     MOVFF     0x3c,0x3                                                                                        
000ed4   f003                                                                                                               
000ed6   c03d     MOVFF     0x3d,0x4                                                                                        
000ed8   f004                                                                                                               
000eda   c03e     MOVFF     0x3e,0x5                                                                                        
000edc   f005                                                                                                               
000ede   c002     MOVFF     0x2,0x3f                                                                                        
000ee0   f03f                                                                                                               
000ee2   c003     MOVFF     0x3,0x40                                                                                        
000ee4   f040                                                                                                               
000ee6   c004     MOVFF     0x4,0x41                                                                                        
000ee8   f041                                                                                                               
000eea   c005     MOVFF     0x5,0x42                                                                                        
000eec   f042                                                                                                               
000eee   c012     MOVFF     0x12,0x44                                                                                       
000ef0   f044                                                                                                               
000ef2   c013     MOVFF     0x13,0x45                                                                                       
000ef4   f045                                                                                                               
000ef6   c014     MOVFF     0x14,0x46                                                                                       
000ef8   f046                                                                                                               
000efa   c015     MOVFF     0x15,0x47                                                                                       
000efc   f047                                                                                                               
000efe   ec62     CALL      0x3ec4,0x0                                                                                      
000f00   f01f                                                                                                               
000f02   c03f     MOVFF     0x3f,0x0                                                                                        
000f04   f000                                                                                                               
000f06   c040     MOVFF     0x40,0x1                                                                                        
000f08   f001                                                                                                               
000f0a   0efd     MOVLW     0xfd                                                                                            
000f0c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f0e   ffe9                                                                                                               
000f10   0efe     MOVLW     0xfe                                                                                            
000f12   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f14   ffea                                                                                                               
000f16   0e04     MOVLW     0x4                                                                                             
000f18   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f1a   0e00     MOVLW     0x0                                                                                             
000f1c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f1e   c000     MOVFF     0x0,0xfee                                                                                       
000f20   ffee                                                                                                               
000f22   c001     MOVFF     0x1,0xfed                                                                                       
000f24   ffed                                                                                                               
                                           #endif	                                                                          C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
000f26   0efd     MOVLW     0xfd           	if(p->Vsetpoint > p->velLim)									//Enforce Veloctiy Limit                   C:\code\2008\Trc2008\TRCfunctions.c
000f28   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f2a   ffe9                                                                                                               
000f2c   0efe     MOVLW     0xfe                                                                                            
000f2e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f30   ffea                                                                                                               
000f32   0e04     MOVLW     0x4                                                                                             
000f34   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f36   0e00     MOVLW     0x0                                                                                             
000f38   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f3a   cfee     MOVFF     0xfee,0x0                                                                                       
000f3c   f000                                                                                                               
000f3e   cfef     MOVFF     0xfef,0x1                                                                                       
000f40   f001                                                                                                               
000f42   0efd     MOVLW     0xfd                                                                                            
000f44   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f46   ffe9                                                                                                               
000f48   0efe     MOVLW     0xfe                                                                                            
000f4a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f4c   ffea                                                                                                               
000f4e   0e0e     MOVLW     0xe                                                                                             
000f50   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f52   0e00     MOVLW     0x0                                                                                             
000f54   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f56   cfee     MOVFF     0xfee,0x2                                                                                       
000f58   f002                                                                                                               
000f5a   cfef     MOVFF     0xfef,0x3                                                                                       
000f5c   f003                                                                                                               
000f5e   5003     MOVF      0x3,0x0,0x0                                                                                     
000f60   1801     XORWF     0x1,0x0,0x0                                                                                     
000f62   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000f64   d002     BRA       0xf6a                                                                                           
000f66   3401     RLCF      0x1,0x0,0x0                                                                                     
000f68   d004     BRA       0xf72                                                                                           
000f6a   5000     MOVF      0x0,0x0,0x0                                                                                     
000f6c   5c02     SUBWF     0x2,0x0,0x0                                                                                     
000f6e   5001     MOVF      0x1,0x0,0x0                                                                                     
000f70   5803     SUBWFB    0x3,0x0,0x0                                                                                     
000f72   e21d     BC        0xfae                                                                                           
000f74   0efd     MOVLW     0xfd           		p->Vsetpoint = p->velLim;                                                      C:\code\2008\Trc2008\TRCfunctions.c
000f76   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f78   ffe9                                                                                                               
000f7a   0efe     MOVLW     0xfe                                                                                            
000f7c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f7e   ffea                                                                                                               
000f80   0e0e     MOVLW     0xe                                                                                             
000f82   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000f84   0e00     MOVLW     0x0                                                                                             
000f86   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000f88   cfee     MOVFF     0xfee,0x0                                                                                       
000f8a   f000                                                                                                               
000f8c   cfef     MOVFF     0xfef,0x1                                                                                       
000f8e   f001                                                                                                               
000f90   0efd     MOVLW     0xfd                                                                                            
000f92   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000f94   ffe9                                                                                                               
000f96   0efe     MOVLW     0xfe                                                                                            
000f98   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000f9a   ffea                                                                                                               
000f9c   0e04     MOVLW     0x4                                                                                             
000f9e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000fa0   0e00     MOVLW     0x0                                                                                             
000fa2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000fa4   c000     MOVFF     0x0,0xfee                                                                                       
000fa6   ffee                                                                                                               
000fa8   c001     MOVFF     0x1,0xfed                                                                                       
000faa   ffed                                                                                                               
000fac   d049     BRA       0x1040         	else if (p->Vsetpoint < -p->velLim)                                             C:\code\2008\Trc2008\TRCfunctions.c
000fae   0efd     MOVLW     0xfd                                                                                            
000fb0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000fb2   ffe9                                                                                                               
000fb4   0efe     MOVLW     0xfe                                                                                            
000fb6   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000fb8   ffea                                                                                                               
000fba   0e04     MOVLW     0x4                                                                                             
000fbc   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000fbe   0e00     MOVLW     0x0                                                                                             
000fc0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000fc2   cfee     MOVFF     0xfee,0x0                                                                                       
000fc4   f000                                                                                                               
000fc6   cfef     MOVFF     0xfef,0x1                                                                                       
000fc8   f001                                                                                                               
000fca   0efd     MOVLW     0xfd                                                                                            
000fcc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000fce   ffe9                                                                                                               
000fd0   0efe     MOVLW     0xfe                                                                                            
000fd2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000fd4   ffea                                                                                                               
000fd6   0e0e     MOVLW     0xe                                                                                             
000fd8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000fda   0e00     MOVLW     0x0                                                                                             
000fdc   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000fde   cfee     MOVFF     0xfee,0x2                                                                                       
000fe0   f002                                                                                                               
000fe2   cfef     MOVFF     0xfef,0x3                                                                                       
000fe4   f003                                                                                                               
000fe6   6c02     NEGF      0x2,0x0                                                                                         
000fe8   1e03     COMF      0x3,0x1,0x0                                                                                     
000fea   2203     ADDWFC    0x3,0x1,0x0                                                                                     
000fec   5001     MOVF      0x1,0x0,0x0                                                                                     
000fee   1803     XORWF     0x3,0x0,0x0                                                                                     
000ff0   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000ff2   d002     BRA       0xff8                                                                                           
000ff4   3403     RLCF      0x3,0x0,0x0                                                                                     
000ff6   d004     BRA       0x1000                                                                                          
000ff8   5002     MOVF      0x2,0x0,0x0                                                                                     
000ffa   5c00     SUBWF     0x0,0x0,0x0                                                                                     
000ffc   5003     MOVF      0x3,0x0,0x0                                                                                     
000ffe   5801     SUBWFB    0x1,0x0,0x0                                                                                     
001000   e21f     BC        0x1040                                                                                          
001002   0efd     MOVLW     0xfd           		p->Vsetpoint = -p->velLim;                                                     C:\code\2008\Trc2008\TRCfunctions.c
001004   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001006   ffe9                                                                                                               
001008   0efe     MOVLW     0xfe                                                                                            
00100a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00100c   ffea                                                                                                               
00100e   0e0e     MOVLW     0xe                                                                                             
001010   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001012   0e00     MOVLW     0x0                                                                                             
001014   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001016   cfee     MOVFF     0xfee,0x0                                                                                       
001018   f000                                                                                                               
00101a   cfef     MOVFF     0xfef,0x1                                                                                       
00101c   f001                                                                                                               
00101e   6c00     NEGF      0x0,0x0                                                                                         
001020   1e01     COMF      0x1,0x1,0x0                                                                                     
001022   2201     ADDWFC    0x1,0x1,0x0                                                                                     
001024   0efd     MOVLW     0xfd                                                                                            
001026   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001028   ffe9                                                                                                               
00102a   0efe     MOVLW     0xfe                                                                                            
00102c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00102e   ffea                                                                                                               
001030   0e04     MOVLW     0x4                                                                                             
001032   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001034   0e00     MOVLW     0x0                                                                                             
001036   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001038   c000     MOVFF     0x0,0xfee                                                                                       
00103a   ffee                                                                                                               
00103c   c001     MOVFF     0x1,0xfed                                                                                       
00103e   ffed                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
001040   0efd     MOVLW     0xfd           	velErr = p->Vsetpoint - (encoder - p->PrevEnc);					//Velocity Error            C:\code\2008\Trc2008\TRCfunctions.c
001042   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001044   ffe9                                                                                                               
001046   0efe     MOVLW     0xfe                                                                                            
001048   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00104a   ffea                                                                                                               
00104c   0e04     MOVLW     0x4                                                                                             
00104e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001050   0e00     MOVLW     0x0                                                                                             
001052   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001054   cfee     MOVFF     0xfee,0x4                                                                                       
001056   f004                                                                                                               
001058   cfef     MOVFF     0xfef,0x5                                                                                       
00105a   f005                                                                                                               
00105c   6a06     CLRF      0x6,0x0                                                                                         
00105e   6a07     CLRF      0x7,0x0                                                                                         
001060   ae05     BTFSS     0x5,0x7,0x0                                                                                     
001062   d002     BRA       0x1068                                                                                          
001064   6806     SETF      0x6,0x0                                                                                         
001066   6807     SETF      0x7,0x0                                                                                         
001068   0ef9     MOVLW     0xf9                                                                                            
00106a   cfdb     MOVFF     0xfdb,0xc                                                                                       
00106c   f00c                                                                                                               
00106e   0efa     MOVLW     0xfa                                                                                            
001070   cfdb     MOVFF     0xfdb,0xd                                                                                       
001072   f00d                                                                                                               
001074   0efb     MOVLW     0xfb                                                                                            
001076   cfdb     MOVFF     0xfdb,0xe                                                                                       
001078   f00e                                                                                                               
00107a   0efc     MOVLW     0xfc                                                                                            
00107c   cfdb     MOVFF     0xfdb,0xf                                                                                       
00107e   f00f                                                                                                               
001080   0efd     MOVLW     0xfd                                                                                            
001082   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001084   ffe9                                                                                                               
001086   0efe     MOVLW     0xfe                                                                                            
001088   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00108a   ffea                                                                                                               
00108c   0e06     MOVLW     0x6                                                                                             
00108e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001090   0e00     MOVLW     0x0                                                                                             
001092   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001094   50ee     MOVF      0xee,0x0,0x0                                                                                    
001096   5c0c     SUBWF     0xc,0x0,0x0                                                                                     
001098   6e08     MOVWF     0x8,0x0                                                                                         
00109a   50ee     MOVF      0xee,0x0,0x0                                                                                    
00109c   580d     SUBWFB    0xd,0x0,0x0                                                                                     
00109e   6e09     MOVWF     0x9,0x0                                                                                         
0010a0   50ee     MOVF      0xee,0x0,0x0                                                                                    
0010a2   580e     SUBWFB    0xe,0x0,0x0                                                                                     
0010a4   6e0a     MOVWF     0xa,0x0                                                                                         
0010a6   50ee     MOVF      0xee,0x0,0x0                                                                                    
0010a8   580f     SUBWFB    0xf,0x0,0x0                                                                                     
0010aa   6e0b     MOVWF     0xb,0x0                                                                                         
0010ac   5008     MOVF      0x8,0x0,0x0                                                                                     
0010ae   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0010b0   6e00     MOVWF     0x0,0x0                                                                                         
0010b2   5009     MOVF      0x9,0x0,0x0                                                                                     
0010b4   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0010b6   6e01     MOVWF     0x1,0x0                                                                                         
0010b8   500a     MOVF      0xa,0x0,0x0                                                                                     
0010ba   5806     SUBWFB    0x6,0x0,0x0                                                                                     
0010bc   6e02     MOVWF     0x2,0x0                                                                                         
0010be   500b     MOVF      0xb,0x0,0x0                                                                                     
0010c0   5807     SUBWFB    0x7,0x0,0x0                                                                                     
0010c2   6e03     MOVWF     0x3,0x0                                                                                         
0010c4   0e04     MOVLW     0x4                                                                                             
0010c6   c000     MOVFF     0x0,0xfdb                                                                                       
0010c8   ffdb                                                                                                               
0010ca   0e05     MOVLW     0x5                                                                                             
0010cc   c001     MOVFF     0x1,0xfdb                                                                                       
0010ce   ffdb                                                                                                               
0010d0   0efd     MOVLW     0xfd           	Drive = (velErr + ((p->Kvi*p->Ierr)/p->Ko))*p->Kvp/p->Ko;		//Velocity Ctrl Loop;  C:\code\2008\Trc2008\TRCfunctions.c
0010d2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0010d4   ffe9                                                                                                               
0010d6   0efe     MOVLW     0xfe                                                                                            
0010d8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0010da   ffea                                                                                                               
0010dc   0e16     MOVLW     0x16                                                                                            
0010de   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0010e0   0e00     MOVLW     0x0                                                                                             
0010e2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0010e4   cfee     MOVFF     0xfee,0x20                                                                                      
0010e6   f020                                                                                                               
0010e8   cfef     MOVFF     0xfef,0x21                                                                                      
0010ea   f021                                                                                                               
0010ec   6a22     CLRF      0x22,0x0                                                                                        
0010ee   6a23     CLRF      0x23,0x0                                                                                        
0010f0   ae21     BTFSS     0x21,0x7,0x0                                                                                    
0010f2   d002     BRA       0x10f8                                                                                          
0010f4   6822     SETF      0x22,0x0                                                                                        
0010f6   6823     SETF      0x23,0x0                                                                                        
0010f8   0efd     MOVLW     0xfd                                                                                            
0010fa   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0010fc   ffe9                                                                                                               
0010fe   0efe     MOVLW     0xfe                                                                                            
001100   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001102   ffea                                                                                                               
001104   0e12     MOVLW     0x12                                                                                            
001106   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001108   0e00     MOVLW     0x0                                                                                             
00110a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00110c   cfee     MOVFF     0xfee,0x1c                                                                                      
00110e   f01c                                                                                                               
001110   cfef     MOVFF     0xfef,0x1d                                                                                      
001112   f01d                                                                                                               
001114   6a1e     CLRF      0x1e,0x0                                                                                        
001116   6a1f     CLRF      0x1f,0x0                                                                                        
001118   ae1d     BTFSS     0x1d,0x7,0x0                                                                                    
00111a   d002     BRA       0x1120                                                                                          
00111c   681e     SETF      0x1e,0x0                                                                                        
00111e   681f     SETF      0x1f,0x0                                                                                        
001120   0e04     MOVLW     0x4                                                                                             
001122   cfdb     MOVFF     0xfdb,0x8                                                                                       
001124   f008                                                                                                               
001126   0e05     MOVLW     0x5                                                                                             
001128   cfdb     MOVFF     0xfdb,0x9                                                                                       
00112a   f009                                                                                                               
00112c   6a0a     CLRF      0xa,0x0                                                                                         
00112e   6a0b     CLRF      0xb,0x0                                                                                         
001130   ae09     BTFSS     0x9,0x7,0x0                                                                                     
001132   d002     BRA       0x1138                                                                                          
001134   680a     SETF      0xa,0x0                                                                                         
001136   680b     SETF      0xb,0x0                                                                                         
001138   0efd     MOVLW     0xfd                                                                                            
00113a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00113c   ffe9                                                                                                               
00113e   0efe     MOVLW     0xfe                                                                                            
001140   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001142   ffea                                                                                                               
001144   0e16     MOVLW     0x16                                                                                            
001146   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001148   0e00     MOVLW     0x0                                                                                             
00114a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00114c   cfee     MOVFF     0xfee,0x18                                                                                      
00114e   f018                                                                                                               
001150   cfef     MOVFF     0xfef,0x19                                                                                      
001152   f019                                                                                                               
001154   6a1a     CLRF      0x1a,0x0                                                                                        
001156   6a1b     CLRF      0x1b,0x0                                                                                        
001158   ae19     BTFSS     0x19,0x7,0x0                                                                                    
00115a   d002     BRA       0x1160                                                                                          
00115c   681a     SETF      0x1a,0x0                                                                                        
00115e   681b     SETF      0x1b,0x0                                                                                        
001160   0efd     MOVLW     0xfd                                                                                            
001162   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001164   ffe9                                                                                                               
001166   0efe     MOVLW     0xfe                                                                                            
001168   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00116a   ffea                                                                                                               
00116c   0e0a     MOVLW     0xa                                                                                             
00116e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001170   0e00     MOVLW     0x0                                                                                             
001172   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001174   cfee     MOVFF     0xfee,0x14                                                                                      
001176   f014                                                                                                               
001178   cfee     MOVFF     0xfee,0x15                                                                                      
00117a   f015                                                                                                               
00117c   cfee     MOVFF     0xfee,0x16                                                                                      
00117e   f016                                                                                                               
001180   cfef     MOVFF     0xfef,0x17                                                                                      
001182   f017                                                                                                               
001184   0efd     MOVLW     0xfd                                                                                            
001186   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001188   ffe9                                                                                                               
00118a   0efe     MOVLW     0xfe                                                                                            
00118c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00118e   ffea                                                                                                               
001190   0e14     MOVLW     0x14                                                                                            
001192   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001194   0e00     MOVLW     0x0                                                                                             
001196   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001198   cfee     MOVFF     0xfee,0x10                                                                                      
00119a   f010                                                                                                               
00119c   cfef     MOVFF     0xfef,0x11                                                                                      
00119e   f011                                                                                                               
0011a0   6a12     CLRF      0x12,0x0                                                                                        
0011a2   6a13     CLRF      0x13,0x0                                                                                        
0011a4   ae11     BTFSS     0x11,0x7,0x0                                                                                    
0011a6   d002     BRA       0x11ac                                                                                          
0011a8   6812     SETF      0x12,0x0                                                                                        
0011aa   6813     SETF      0x13,0x0                                                                                        
0011ac   c010     MOVFF     0x10,0x3f                                                                                       
0011ae   f03f                                                                                                               
0011b0   c011     MOVFF     0x11,0x40                                                                                       
0011b2   f040                                                                                                               
0011b4   c012     MOVFF     0x12,0x41                                                                                       
0011b6   f041                                                                                                               
0011b8   c013     MOVFF     0x13,0x42                                                                                       
0011ba   f042                                                                                                               
0011bc   c014     MOVFF     0x14,0x44                                                                                       
0011be   f044                                                                                                               
0011c0   c015     MOVFF     0x15,0x45                                                                                       
0011c2   f045                                                                                                               
0011c4   c016     MOVFF     0x16,0x46                                                                                       
0011c6   f046                                                                                                               
0011c8   c017     MOVFF     0x17,0x47                                                                                       
0011ca   f047                                                                                                               
0011cc   ec18     CALL      0x5a30,0x0                                                                                      
0011ce   f02d                                                                                                               
0011d0   c03b     MOVFF     0x3b,0xc                                                                                        
0011d2   f00c                                                                                                               
0011d4   c03c     MOVFF     0x3c,0xd                                                                                        
0011d6   f00d                                                                                                               
0011d8   c03d     MOVFF     0x3d,0xe                                                                                        
0011da   f00e                                                                                                               
0011dc   c03e     MOVFF     0x3e,0xf                                                                                        
0011de   f00f                                                                                                               
0011e0   c00c     MOVFF     0xc,0x3f                                                                                        
0011e2   f03f                                                                                                               
0011e4   c00d     MOVFF     0xd,0x40                                                                                        
0011e6   f040                                                                                                               
0011e8   c00e     MOVFF     0xe,0x41                                                                                        
0011ea   f041                                                                                                               
0011ec   c00f     MOVFF     0xf,0x42                                                                                        
0011ee   f042                                                                                                               
0011f0   c018     MOVFF     0x18,0x44                                                                                       
0011f2   f044                                                                                                               
0011f4   c019     MOVFF     0x19,0x45                                                                                       
0011f6   f045                                                                                                               
0011f8   c01a     MOVFF     0x1a,0x46                                                                                       
0011fa   f046                                                                                                               
0011fc   c01b     MOVFF     0x1b,0x47                                                                                       
0011fe   f047                                                                                                               
001200   ec62     CALL      0x3ec4,0x0                                                                                      
001202   f01f                                                                                                               
001204   5008     MOVF      0x8,0x0,0x0                                                                                     
001206   243f     ADDWF     0x3f,0x0,0x0                                                                                    
001208   6e04     MOVWF     0x4,0x0                                                                                         
00120a   5009     MOVF      0x9,0x0,0x0                                                                                     
00120c   2040     ADDWFC    0x40,0x0,0x0                                                                                    
00120e   6e05     MOVWF     0x5,0x0                                                                                         
001210   500a     MOVF      0xa,0x0,0x0                                                                                     
001212   2041     ADDWFC    0x41,0x0,0x0                                                                                    
001214   6e06     MOVWF     0x6,0x0                                                                                         
001216   500b     MOVF      0xb,0x0,0x0                                                                                     
001218   2042     ADDWFC    0x42,0x0,0x0                                                                                    
00121a   6e07     MOVWF     0x7,0x0                                                                                         
00121c   c004     MOVFF     0x4,0x3f                                                                                        
00121e   f03f                                                                                                               
001220   c005     MOVFF     0x5,0x40                                                                                        
001222   f040                                                                                                               
001224   c006     MOVFF     0x6,0x41                                                                                        
001226   f041                                                                                                               
001228   c007     MOVFF     0x7,0x42                                                                                        
00122a   f042                                                                                                               
00122c   c01c     MOVFF     0x1c,0x44                                                                                       
00122e   f044                                                                                                               
001230   c01d     MOVFF     0x1d,0x45                                                                                       
001232   f045                                                                                                               
001234   c01e     MOVFF     0x1e,0x46                                                                                       
001236   f046                                                                                                               
001238   c01f     MOVFF     0x1f,0x47                                                                                       
00123a   f047                                                                                                               
00123c   ec18     CALL      0x5a30,0x0                                                                                      
00123e   f02d                                                                                                               
001240   c03b     MOVFF     0x3b,0x0                                                                                        
001242   f000                                                                                                               
001244   c03c     MOVFF     0x3c,0x1                                                                                        
001246   f001                                                                                                               
001248   c03d     MOVFF     0x3d,0x2                                                                                        
00124a   f002                                                                                                               
00124c   c03e     MOVFF     0x3e,0x3                                                                                        
00124e   f003                                                                                                               
001250   c000     MOVFF     0x0,0x3f                                                                                        
001252   f03f                                                                                                               
001254   c001     MOVFF     0x1,0x40                                                                                        
001256   f040                                                                                                               
001258   c002     MOVFF     0x2,0x41                                                                                        
00125a   f041                                                                                                               
00125c   c003     MOVFF     0x3,0x42                                                                                        
00125e   f042                                                                                                               
001260   c020     MOVFF     0x20,0x44                                                                                       
001262   f044                                                                                                               
001264   c021     MOVFF     0x21,0x45                                                                                       
001266   f045                                                                                                               
001268   c022     MOVFF     0x22,0x46                                                                                       
00126a   f046                                                                                                               
00126c   c023     MOVFF     0x23,0x47                                                                                       
00126e   f047                                                                                                               
001270   ec62     CALL      0x3ec4,0x0                                                                                      
001272   f01f                                                                                                               
001274   0e06     MOVLW     0x6                                                                                             
001276   c03f     MOVFF     0x3f,0xfdb                                                                                      
001278   ffdb                                                                                                               
00127a   0e07     MOVLW     0x7                                                                                             
00127c   c040     MOVFF     0x40,0xfdb                                                                                      
00127e   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
001280   0efd     MOVLW     0xfd           	p->PrevEnc = encoder;                                                           C:\code\2008\Trc2008\TRCfunctions.c
001282   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001284   ffe9                                                                                                               
001286   0efe     MOVLW     0xfe                                                                                            
001288   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00128a   ffea                                                                                                               
00128c   0e06     MOVLW     0x6                                                                                             
00128e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001290   0e00     MOVLW     0x0                                                                                             
001292   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
001294   0ef9     MOVLW     0xf9                                                                                            
001296   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001298   ffee                                                                                                               
00129a   0efa     MOVLW     0xfa                                                                                            
00129c   cfdb     MOVFF     0xfdb,0xfee                                                                                     
00129e   ffee                                                                                                               
0012a0   0efb     MOVLW     0xfb                                                                                            
0012a2   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0012a4   ffee                                                                                                               
0012a6   0efc     MOVLW     0xfc                                                                                            
0012a8   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0012aa   ffee                                                                                                               
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
0012ac   0e06     MOVLW     0x6            	if(Drive > 127)													//Limit drive output                                C:\code\2008\Trc2008\TRCfunctions.c
0012ae   cfdb     MOVFF     0xfdb,0x0                                                                                       
0012b0   f000                                                                                                               
0012b2   0e07     MOVLW     0x7                                                                                             
0012b4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0012b6   f001                                                                                                               
0012b8   3401     RLCF      0x1,0x0,0x0                                                                                     
0012ba   e204     BC        0x12c4                                                                                          
0012bc   5000     MOVF      0x0,0x0,0x0                                                                                     
0012be   087f     SUBLW     0x7f                                                                                            
0012c0   0e00     MOVLW     0x0                                                                                             
0012c2   5401     SUBFWB    0x1,0x0,0x0                                                                                     
0012c4   e208     BC        0x12d6                                                                                          
0012c6   0e7f     MOVLW     0x7f           		Drive = 127;                                                                   C:\code\2008\Trc2008\TRCfunctions.c
0012c8   6ef3     MOVWF     0xf3,0x0                                                                                        
0012ca   0e06     MOVLW     0x6                                                                                             
0012cc   cff3     MOVFF     0xff3,0xfdb                                                                                     
0012ce   ffdb                                                                                                               
0012d0   0e07     MOVLW     0x7                                                                                             
0012d2   6adb     CLRF      0xdb,0x0                                                                                        
0012d4   d034     BRA       0x133e         	else if (Drive < -127)                                                          C:\code\2008\Trc2008\TRCfunctions.c
0012d6   0e06     MOVLW     0x6                                                                                             
0012d8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0012da   f000                                                                                                               
0012dc   0e07     MOVLW     0x7                                                                                             
0012de   cfdb     MOVFF     0xfdb,0x1                                                                                       
0012e0   f001                                                                                                               
0012e2   80d8     BSF       0xd8,0x0,0x0                                                                                    
0012e4   5001     MOVF      0x1,0x0,0x0                                                                                     
0012e6   e704     BNN       0x12f0                                                                                          
0012e8   0e81     MOVLW     0x81                                                                                            
0012ea   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0012ec   0eff     MOVLW     0xff                                                                                            
0012ee   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0012f0   e208     BC        0x1302                                                                                          
0012f2   0e81     MOVLW     0x81           		Drive = -127;                                                                  C:\code\2008\Trc2008\TRCfunctions.c
0012f4   6ef3     MOVWF     0xf3,0x0                                                                                        
0012f6   0e06     MOVLW     0x6                                                                                             
0012f8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0012fa   ffdb                                                                                                               
0012fc   0e07     MOVLW     0x7                                                                                             
0012fe   68db     SETF      0xdb,0x0                                                                                        
001300   d01e     BRA       0x133e         	else                                                                            C:\code\2008\Trc2008\TRCfunctions.c
001302   0e04     MOVLW     0x4            		p->Ierr += velErr;                                                             C:\code\2008\Trc2008\TRCfunctions.c
001304   cfdb     MOVFF     0xfdb,0x0                                                                                       
001306   f000                                                                                                               
001308   0e05     MOVLW     0x5                                                                                             
00130a   cfdb     MOVFF     0xfdb,0x1                                                                                       
00130c   f001                                                                                                               
00130e   6a02     CLRF      0x2,0x0                                                                                         
001310   6a03     CLRF      0x3,0x0                                                                                         
001312   ae01     BTFSS     0x1,0x7,0x0                                                                                     
001314   d002     BRA       0x131a                                                                                          
001316   6802     SETF      0x2,0x0                                                                                         
001318   6803     SETF      0x3,0x0                                                                                         
00131a   0efd     MOVLW     0xfd                                                                                            
00131c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00131e   ffe9                                                                                                               
001320   0efe     MOVLW     0xfe                                                                                            
001322   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001324   ffea                                                                                                               
001326   0e0a     MOVLW     0xa                                                                                             
001328   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00132a   0e00     MOVLW     0x0                                                                                             
00132c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00132e   5000     MOVF      0x0,0x0,0x0                                                                                     
001330   26ee     ADDWF     0xee,0x1,0x0                                                                                    
001332   5001     MOVF      0x1,0x0,0x0                                                                                     
001334   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
001336   5002     MOVF      0x2,0x0,0x0                                                                                     
001338   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
00133a   5003     MOVF      0x3,0x0,0x0                                                                                     
00133c   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           #ifdef DRIVE_DEBUG                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           	printf("PSet:%ld VSet:%d velErr:%d Enc:%ld Drive:%d\r\n", p->Psetpoint, p->Vsetpoint, velErr, encoder, Drive); C:\code\2008\Trc2008\TRCfunctions.c
                                           #endif                                                                           C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
00133e   0e7f     MOVLW     0x7f           	return (p->Drive = (Drive+127)*motor_direction);                                C:\code\2008\Trc2008\TRCfunctions.c
001340   6ee7     MOVWF     0xe7,0x0                                                                                        
001342   0e06     MOVLW     0x6                                                                                             
001344   cfdb     MOVFF     0xfdb,0x2                                                                                       
001346   f002                                                                                                               
001348   0e07     MOVLW     0x7                                                                                             
00134a   cfdb     MOVFF     0xfdb,0x3                                                                                       
00134c   f003                                                                                                               
00134e   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001350   2602     ADDWF     0x2,0x1,0x0                                                                                     
001352   0e00     MOVLW     0x0                                                                                             
001354   2203     ADDWFC    0x3,0x1,0x0                                                                                     
001356   c002     MOVFF     0x2,0x41                                                                                        
001358   f041                                                                                                               
00135a   c003     MOVFF     0x3,0x42                                                                                        
00135c   f042                                                                                                               
00135e   0ef7     MOVLW     0xf7                                                                                            
001360   cfdb     MOVFF     0xfdb,0x46                                                                                      
001362   f046                                                                                                               
001364   0ef8     MOVLW     0xf8                                                                                            
001366   cfdb     MOVFF     0xfdb,0x47                                                                                      
001368   f047                                                                                                               
00136a   ec96     CALL      0x3f2c,0x0                                                                                      
00136c   f01f                                                                                                               
00136e   c03f     MOVFF     0x3f,0x0                                                                                        
001370   f000                                                                                                               
001372   c040     MOVFF     0x40,0x1                                                                                        
001374   f001                                                                                                               
001376   0efd     MOVLW     0xfd                                                                                            
001378   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00137a   ffe9                                                                                                               
00137c   0efe     MOVLW     0xfe                                                                                            
00137e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001380   ffea                                                                                                               
001382   0e18     MOVLW     0x18                                                                                            
001384   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
001386   0e00     MOVLW     0x0                                                                                             
001388   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00138a   c000     MOVFF     0x0,0xfee                                                                                       
00138c   ffee                                                                                                               
00138e   c001     MOVFF     0x1,0xfed                                                                                       
001390   ffed                                                                                                               
001392   c000     MOVFF     0x0,0xff3                                                                                       
001394   fff3                                                                                                               
001396   c001     MOVFF     0x1,0xff4                                                                                       
001398   fff4                                                                                                               
00139a   d000     BRA       0x139c                                                                                          
00139c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
00139e   ffe1                                                                                                               
0013a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0013a2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0013a4   ffd9                                                                                                               
0013a6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           /* -----Depreciated                                                              C:\code\2008\Trc2008\TRCfunctions.c
                                           int Encoder_1_Vel()                                                              C:\code\2008\Trc2008\TRCfunctions.c
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           	static long prevEncoder = 0;                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           	static int k = 0;                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           	static int outVel;                                                              C:\code\2008\Trc2008\TRCfunctions.c
                                           	int vel;                                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                           	                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           	if(k == 4)											//Calculates # of Clicks/104.8 ms                          C:\code\2008\Trc2008\TRCfunctions.c
                                           	{                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           		vel = outVel;                                                                  C:\code\2008\Trc2008\TRCfunctions.c
                                           		outVel = 0;                                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           		k = 0;		                                                                       C:\code\2008\Trc2008\TRCfunctions.c
                                           		return vel;;                                                                   C:\code\2008\Trc2008\TRCfunctions.c
                                           	} else {                                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                           		outVel += Get_Encoder_1_Count() - prevEncoder;                                 C:\code\2008\Trc2008\TRCfunctions.c
                                           		prevEncoder = Get_Encoder_1_Count();                                           C:\code\2008\Trc2008\TRCfunctions.c
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           int Encoder_2_Vel()                                                              C:\code\2008\Trc2008\TRCfunctions.c
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           	static long prevEncoder = 0;                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           	static int k = 0;                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           	static int vel;                                                                 C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           	if(k == 4)											//Calculates # of Clicks/104.8 ms                          C:\code\2008\Trc2008\TRCfunctions.c
                                           	{                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           		vel = Get_Encoder_2_Count() - prevEncoder;                                     C:\code\2008\Trc2008\TRCfunctions.c
                                           		prevEncoder = Get_Encoder_2_Count();                                           C:\code\2008\Trc2008\TRCfunctions.c
                                           		k = 0;                                                                         C:\code\2008\Trc2008\TRCfunctions.c
                                           		return vel;                                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           	} else {                                                                        C:\code\2008\Trc2008\TRCfunctions.c
                                           		k++;                                                                           C:\code\2008\Trc2008\TRCfunctions.c
                                           		return vel;                                                                    C:\code\2008\Trc2008\TRCfunctions.c
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                           }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
                                           */                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           //This makes sure our encoders are moving in the same direction as the motors    C:\code\2008\Trc2008\TRCfunctions.c
                                           //If either of the encoders consistantly reports the wrong direction,            C:\code\2008\Trc2008\TRCfunctions.c
                                           //the motors are killed. This should keep the PID acting nicely.                 C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
                                           //Not used, but a nice idea                                                      C:\code\2008\Trc2008\TRCfunctions.c
0013a8   cfd9     MOVFF     0xfd9,0xfe6    int encoder_check()	                                                             C:\code\2008\Trc2008\TRCfunctions.c
0013aa   ffe6                                                                                                               
0013ac   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0013ae   ffd9                                                                                                               
0013b0   0e0a     MOVLW     0xa                                                                                             
0013b2   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {						                                                                          C:\code\2008\Trc2008\TRCfunctions.c
0013b4   0e08     MOVLW     0x8            	int encoder_1, encoder_2, prev_encoder_1, prev_encoder_2, strikes = 0;          C:\code\2008\Trc2008\TRCfunctions.c
0013b6   6adb     CLRF      0xdb,0x0                                                                                        
0013b8   0e09     MOVLW     0x9                                                                                             
0013ba   6adb     CLRF      0xdb,0x0                                                                                        
0013bc   ecc5     CALL      0x578a,0x0     	encoder_1 = Get_Encoder_1_Count();                                              C:\code\2008\Trc2008\TRCfunctions.c
0013be   f02b                                                                                                               
0013c0   c03f     MOVFF     0x3f,0xfde                                                                                      
0013c2   ffde                                                                                                               
0013c4   c040     MOVFF     0x40,0xfdd                                                                                      
0013c6   ffdd                                                                                                               
0013c8   ec01     CALL      0x5802,0x0     	encoder_2 = Get_Encoder_2_Count();                                              C:\code\2008\Trc2008\TRCfunctions.c
0013ca   f02c                                                                                                               
0013cc   0e02     MOVLW     0x2                                                                                             
0013ce   c03f     MOVFF     0x3f,0xfdb                                                                                      
0013d0   ffdb                                                                                                               
0013d2   0e03     MOVLW     0x3                                                                                             
0013d4   c040     MOVFF     0x40,0xfdb                                                                                      
0013d6   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
0013d8   0101     MOVLB     0x1            	if(pwm13 >= 147 && !((encoder_1 - prev_encoder_1) > 0))	//Motors forward and encoder forward? C:\code\2008\Trc2008\TRCfunctions.c
0013da   5190     MOVF      0x90,0x0,0x1                                                                                    
0013dc   6e00     MOVWF     0x0,0x0                                                                                         
0013de   6a01     CLRF      0x1,0x0                                                                                         
0013e0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0013e2   5001     MOVF      0x1,0x0,0x0                                                                                     
0013e4   e604     BN        0x13ee                                                                                          
0013e6   0e93     MOVLW     0x93                                                                                            
0013e8   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0013ea   0e00     MOVLW     0x0                                                                                             
0013ec   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0013ee   e330     BNC       0x1450                                                                                          
0013f0   cfde     MOVFF     0xfde,0x4                                                                                       
0013f2   f004                                                                                                               
0013f4   cfdd     MOVFF     0xfdd,0x5                                                                                       
0013f6   f005                                                                                                               
0013f8   0e04     MOVLW     0x4                                                                                             
0013fa   50db     MOVF      0xdb,0x0,0x0                                                                                    
0013fc   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0013fe   6e02     MOVWF     0x2,0x0                                                                                         
001400   0e05     MOVLW     0x5                                                                                             
001402   50db     MOVF      0xdb,0x0,0x0                                                                                    
001404   5805     SUBWFB    0x5,0x0,0x0                                                                                     
001406   6e03     MOVWF     0x3,0x0                                                                                         
001408   3403     RLCF      0x3,0x0,0x0                                                                                     
00140a   e204     BC        0x1414                                                                                          
00140c   5002     MOVF      0x2,0x0,0x0                                                                                     
00140e   0800     SUBLW     0x0                                                                                             
001410   0e00     MOVLW     0x0                                                                                             
001412   5403     SUBFWB    0x3,0x0,0x0                                                                                     
001414   e31d     BNC       0x1450                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\TRCfunctions.c
001416   0e08     MOVLW     0x8            		strikes++;                                                                     C:\code\2008\Trc2008\TRCfunctions.c
001418   2adb     INCF      0xdb,0x1,0x0                                                                                    
00141a   0e09     MOVLW     0x9                                                                                             
00141c   e301     BNC       0x1420                                                                                          
00141e   2adb     INCF      0xdb,0x1,0x0                                                                                    
001420   cfde     MOVFF     0xfde,0xfe6    		printf("WARNING--Encoder 1 Mismatch: pwm13=%d, encoder_1=%d", pwm13, encoder_1); C:\code\2008\Trc2008\TRCfunctions.c
001422   ffe6                                                                                                               
001424   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
001426   ffe6                                                                                                               
001428   5190     MOVF      0x90,0x0,0x1                                                                                    
00142a   6ee6     MOVWF     0xe6,0x0                                                                                        
00142c   6ae6     CLRF      0xe6,0x0                                                                                        
00142e   0e5b     MOVLW     0x5b                                                                                            
001430   6e00     MOVWF     0x0,0x0                                                                                         
001432   0e55     MOVLW     0x55                                                                                            
001434   6e01     MOVWF     0x1,0x0                                                                                         
001436   6a02     CLRF      0x2,0x0                                                                                         
001438   c000     MOVFF     0x0,0xfe6                                                                                       
00143a   ffe6                                                                                                               
00143c   c001     MOVFF     0x1,0xfe6                                                                                       
00143e   ffe6                                                                                                               
001440   c002     MOVFF     0x2,0xfe6                                                                                       
001442   ffe6                                                                                                               
001444   ec8c     CALL      0x5918,0x0                                                                                      
001446   f02c                                                                                                               
001448   6ef5     MOVWF     0xf5,0x0                                                                                        
00144a   0e07     MOVLW     0x7                                                                                             
00144c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00144e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
001450   0101     MOVLB     0x1            	if(pwm13 <= 107 && !((encoder_1 - prev_encoder_1) < 0)) //Motors backward and encoder backward? C:\code\2008\Trc2008\TRCfunctions.c
001452   5190     MOVF      0x90,0x0,0x1                                                                                    
001454   086b     SUBLW     0x6b                                                                                            
001456   e32e     BNC       0x14b4                                                                                          
001458   cfde     MOVFF     0xfde,0x2                                                                                       
00145a   f002                                                                                                               
00145c   cfdd     MOVFF     0xfdd,0x3                                                                                       
00145e   f003                                                                                                               
001460   0e04     MOVLW     0x4                                                                                             
001462   50db     MOVF      0xdb,0x0,0x0                                                                                    
001464   5c02     SUBWF     0x2,0x0,0x0                                                                                     
001466   6e00     MOVWF     0x0,0x0                                                                                         
001468   0e05     MOVLW     0x5                                                                                             
00146a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00146c   5803     SUBWFB    0x3,0x0,0x0                                                                                     
00146e   6e01     MOVWF     0x1,0x0                                                                                         
001470   0100     MOVLB     0x0                                                                                             
001472   0e80     MOVLW     0x80                                                                                            
001474   1401     ANDWF     0x1,0x0,0x0                                                                                     
001476   e11e     BNZ       0x14b4                                                                                          
                                           		{                                                                              C:\code\2008\Trc2008\TRCfunctions.c
001478   0e08     MOVLW     0x8            		strikes++;                                                                     C:\code\2008\Trc2008\TRCfunctions.c
00147a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00147c   0e09     MOVLW     0x9                                                                                             
00147e   e301     BNC       0x1482                                                                                          
001480   2adb     INCF      0xdb,0x1,0x0                                                                                    
001482   cfde     MOVFF     0xfde,0xfe6    		printf("WARNING--Encoder 1 Mismatch: pwm13=%d, encoder_1=%d", pwm13, encoder_1); C:\code\2008\Trc2008\TRCfunctions.c
001484   ffe6                                                                                                               
001486   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
001488   ffe6                                                                                                               
00148a   0101     MOVLB     0x1                                                                                             
00148c   5190     MOVF      0x90,0x0,0x1                                                                                    
00148e   6ee6     MOVWF     0xe6,0x0                                                                                        
001490   6ae6     CLRF      0xe6,0x0                                                                                        
001492   0e5b     MOVLW     0x5b                                                                                            
001494   6e00     MOVWF     0x0,0x0                                                                                         
001496   0e55     MOVLW     0x55                                                                                            
001498   6e01     MOVWF     0x1,0x0                                                                                         
00149a   6a02     CLRF      0x2,0x0                                                                                         
00149c   c000     MOVFF     0x0,0xfe6                                                                                       
00149e   ffe6                                                                                                               
0014a0   c001     MOVFF     0x1,0xfe6                                                                                       
0014a2   ffe6                                                                                                               
0014a4   c002     MOVFF     0x2,0xfe6                                                                                       
0014a6   ffe6                                                                                                               
0014a8   ec8c     CALL      0x5918,0x0                                                                                      
0014aa   f02c                                                                                                               
0014ac   6ef5     MOVWF     0xf5,0x0                                                                                        
0014ae   0e07     MOVLW     0x7                                                                                             
0014b0   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0014b2   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
0014b4   0101     MOVLB     0x1            	if(pwm15 >= 147 && !((encoder_2 - prev_encoder_2) > 0)) //Motors forward and encoder forward? C:\code\2008\Trc2008\TRCfunctions.c
0014b6   5192     MOVF      0x92,0x0,0x1                                                                                    
0014b8   6e00     MOVWF     0x0,0x0                                                                                         
0014ba   6a01     CLRF      0x1,0x0                                                                                         
0014bc   90d8     BCF       0xd8,0x0,0x0                                                                                    
0014be   5001     MOVF      0x1,0x0,0x0                                                                                     
0014c0   e604     BN        0x14ca                                                                                          
0014c2   0e93     MOVLW     0x93                                                                                            
0014c4   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0014c6   0e00     MOVLW     0x0                                                                                             
0014c8   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0014ca   e334     BNC       0x1534                                                                                          
0014cc   0e02     MOVLW     0x2                                                                                             
0014ce   cfdb     MOVFF     0xfdb,0x4                                                                                       
0014d0   f004                                                                                                               
0014d2   0e03     MOVLW     0x3                                                                                             
0014d4   cfdb     MOVFF     0xfdb,0x5                                                                                       
0014d6   f005                                                                                                               
0014d8   0e06     MOVLW     0x6                                                                                             
0014da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014dc   5c04     SUBWF     0x4,0x0,0x0                                                                                     
0014de   6e02     MOVWF     0x2,0x0                                                                                         
0014e0   0e07     MOVLW     0x7                                                                                             
0014e2   50db     MOVF      0xdb,0x0,0x0                                                                                    
0014e4   5805     SUBWFB    0x5,0x0,0x0                                                                                     
0014e6   6e03     MOVWF     0x3,0x0                                                                                         
0014e8   3403     RLCF      0x3,0x0,0x0                                                                                     
0014ea   e204     BC        0x14f4                                                                                          
0014ec   5002     MOVF      0x2,0x0,0x0                                                                                     
0014ee   0800     SUBLW     0x0                                                                                             
0014f0   0e00     MOVLW     0x0                                                                                             
0014f2   5403     SUBFWB    0x3,0x0,0x0                                                                                     
0014f4   e31f     BNC       0x1534                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\TRCfunctions.c
0014f6   0e08     MOVLW     0x8            		strikes++;                                                                     C:\code\2008\Trc2008\TRCfunctions.c
0014f8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0014fa   0e09     MOVLW     0x9                                                                                             
0014fc   e301     BNC       0x1500                                                                                          
0014fe   2adb     INCF      0xdb,0x1,0x0                                                                                    
001500   0e02     MOVLW     0x2            		printf("WARNING--Encoder 2 Mismatch: pwm15=%d, encoder_2=%d", pwm15, encoder_2); C:\code\2008\Trc2008\TRCfunctions.c
001502   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001504   ffe6                                                                                                               
001506   0e03     MOVLW     0x3                                                                                             
001508   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00150a   ffe6                                                                                                               
00150c   5192     MOVF      0x92,0x0,0x1                                                                                    
00150e   6ee6     MOVWF     0xe6,0x0                                                                                        
001510   6ae6     CLRF      0xe6,0x0                                                                                        
001512   0e27     MOVLW     0x27                                                                                            
001514   6e00     MOVWF     0x0,0x0                                                                                         
001516   0e55     MOVLW     0x55                                                                                            
001518   6e01     MOVWF     0x1,0x0                                                                                         
00151a   6a02     CLRF      0x2,0x0                                                                                         
00151c   c000     MOVFF     0x0,0xfe6                                                                                       
00151e   ffe6                                                                                                               
001520   c001     MOVFF     0x1,0xfe6                                                                                       
001522   ffe6                                                                                                               
001524   c002     MOVFF     0x2,0xfe6                                                                                       
001526   ffe6                                                                                                               
001528   ec8c     CALL      0x5918,0x0                                                                                      
00152a   f02c                                                                                                               
00152c   6ef5     MOVWF     0xf5,0x0                                                                                        
00152e   0e07     MOVLW     0x7                                                                                             
001530   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001532   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
001534   0101     MOVLB     0x1            	if(pwm15 <= 107 && !((encoder_2 - prev_encoder_2) < 0)) //Motors backward and encoder backward? C:\code\2008\Trc2008\TRCfunctions.c
001536   5192     MOVF      0x92,0x0,0x1                                                                                    
001538   086b     SUBLW     0x6b                                                                                            
00153a   e332     BNC       0x15a0                                                                                          
00153c   0e02     MOVLW     0x2                                                                                             
00153e   cfdb     MOVFF     0xfdb,0x2                                                                                       
001540   f002                                                                                                               
001542   0e03     MOVLW     0x3                                                                                             
001544   cfdb     MOVFF     0xfdb,0x3                                                                                       
001546   f003                                                                                                               
001548   0e06     MOVLW     0x6                                                                                             
00154a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00154c   5c02     SUBWF     0x2,0x0,0x0                                                                                     
00154e   6e00     MOVWF     0x0,0x0                                                                                         
001550   0e07     MOVLW     0x7                                                                                             
001552   50db     MOVF      0xdb,0x0,0x0                                                                                    
001554   5803     SUBWFB    0x3,0x0,0x0                                                                                     
001556   6e01     MOVWF     0x1,0x0                                                                                         
001558   0100     MOVLB     0x0                                                                                             
00155a   0e80     MOVLW     0x80                                                                                            
00155c   1401     ANDWF     0x1,0x0,0x0                                                                                     
00155e   e120     BNZ       0x15a0                                                                                          
                                           	{                                                                               C:\code\2008\Trc2008\TRCfunctions.c
001560   0e08     MOVLW     0x8            		strikes++;                                                                     C:\code\2008\Trc2008\TRCfunctions.c
001562   2adb     INCF      0xdb,0x1,0x0                                                                                    
001564   0e09     MOVLW     0x9                                                                                             
001566   e301     BNC       0x156a                                                                                          
001568   2adb     INCF      0xdb,0x1,0x0                                                                                    
00156a   0e02     MOVLW     0x2            		printf("WARNING--Encoder 2 Mismatch: pwm15=%d, encoder_2=%d", pwm15, encoder_2); C:\code\2008\Trc2008\TRCfunctions.c
00156c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00156e   ffe6                                                                                                               
001570   0e03     MOVLW     0x3                                                                                             
001572   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001574   ffe6                                                                                                               
001576   0101     MOVLB     0x1                                                                                             
001578   5192     MOVF      0x92,0x0,0x1                                                                                    
00157a   6ee6     MOVWF     0xe6,0x0                                                                                        
00157c   6ae6     CLRF      0xe6,0x0                                                                                        
00157e   0e27     MOVLW     0x27                                                                                            
001580   6e00     MOVWF     0x0,0x0                                                                                         
001582   0e55     MOVLW     0x55                                                                                            
001584   6e01     MOVWF     0x1,0x0                                                                                         
001586   6a02     CLRF      0x2,0x0                                                                                         
001588   c000     MOVFF     0x0,0xfe6                                                                                       
00158a   ffe6                                                                                                               
00158c   c001     MOVFF     0x1,0xfe6                                                                                       
00158e   ffe6                                                                                                               
001590   c002     MOVFF     0x2,0xfe6                                                                                       
001592   ffe6                                                                                                               
001594   ec8c     CALL      0x5918,0x0                                                                                      
001596   f02c                                                                                                               
001598   6ef5     MOVWF     0xf5,0x0                                                                                        
00159a   0e07     MOVLW     0x7                                                                                             
00159c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00159e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\code\2008\Trc2008\TRCfunctions.c
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
0015a0   cfd9     MOVFF     0xfd9,0xfe9    	prev_encoder_1 = encoder_1;                                                     C:\code\2008\Trc2008\TRCfunctions.c
0015a2   ffe9                                                                                                               
0015a4   cfda     MOVFF     0xfda,0xfea                                                                                     
0015a6   ffea                                                                                                               
0015a8   0e04     MOVLW     0x4                                                                                             
0015aa   cfee     MOVFF     0xfee,0xfdb                                                                                     
0015ac   ffdb                                                                                                               
0015ae   0e05     MOVLW     0x5                                                                                             
0015b0   cfed     MOVFF     0xfed,0xfdb                                                                                     
0015b2   ffdb                                                                                                               
0015b4   0e02     MOVLW     0x2            	prev_encoder_2 = encoder_2;                                                     C:\code\2008\Trc2008\TRCfunctions.c
0015b6   cfdb     MOVFF     0xfdb,0x41                                                                                      
0015b8   f041                                                                                                               
0015ba   0e03     MOVLW     0x3                                                                                             
0015bc   cfdb     MOVFF     0xfdb,0x42                                                                                      
0015be   f042                                                                                                               
0015c0   0e06     MOVLW     0x6                                                                                             
0015c2   c041     MOVFF     0x41,0xfdb                                                                                      
0015c4   ffdb                                                                                                               
0015c6   0e07     MOVLW     0x7                                                                                             
0015c8   c042     MOVFF     0x42,0xfdb                                                                                      
0015ca   ffdb                                                                                                               
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
0015cc   0e08     MOVLW     0x8            	if(strikes >= 20)                                                               C:\code\2008\Trc2008\TRCfunctions.c
0015ce   cfdb     MOVFF     0xfdb,0x0                                                                                       
0015d0   f000                                                                                                               
0015d2   0e09     MOVLW     0x9                                                                                             
0015d4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0015d6   f001                                                                                                               
0015d8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0015da   5001     MOVF      0x1,0x0,0x0                                                                                     
0015dc   e604     BN        0x15e6                                                                                          
0015de   0e14     MOVLW     0x14                                                                                            
0015e0   5c00     SUBWF     0x0,0x0,0x0                                                                                     
0015e2   0e00     MOVLW     0x0                                                                                             
0015e4   5801     SUBWFB    0x1,0x0,0x0                                                                                     
0015e6   e304     BNC       0x15f0                                                                                          
0015e8   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\code\2008\Trc2008\TRCfunctions.c
0015ea   6af4     CLRF      0xf4,0x0                                                                                        
0015ec   d005     BRA       0x15f8                                                                                          
0015ee   d004     BRA       0x15f8         	else                                                                            C:\code\2008\Trc2008\TRCfunctions.c
0015f0   0e01     MOVLW     0x1            		return 1;                                                                      C:\code\2008\Trc2008\TRCfunctions.c
0015f2   6ef3     MOVWF     0xf3,0x0                                                                                        
0015f4   6af4     CLRF      0xf4,0x0                                                                                        
0015f6   d000     BRA       0x15f8                                                                                          
0015f8   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
0015fa   ffe1                                                                                                               
0015fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0015fe   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001600   ffd9                                                                                                               
001602   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
001604   cfd9     MOVFF     0xfd9,0xfe6    int deadBandInput(int in, int deadBand)                                          C:\code\2008\Trc2008\TRCfunctions.c
001606   ffe6                                                                                                               
001608   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00160a   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
00160c   0efd     MOVLW     0xfd           	if(abs(in - 127) <= deadBand)                                                   C:\code\2008\Trc2008\TRCfunctions.c
00160e   cfdb     MOVFF     0xfdb,0x2                                                                                       
001610   f002                                                                                                               
001612   0efe     MOVLW     0xfe                                                                                            
001614   cfdb     MOVFF     0xfdb,0x3                                                                                       
001616   f003                                                                                                               
001618   0e7f     MOVLW     0x7f                                                                                            
00161a   5e02     SUBWF     0x2,0x1,0x0                                                                                     
00161c   0e00     MOVLW     0x0                                                                                             
00161e   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001620   c002     MOVFF     0x2,0xfe6                                                                                       
001622   ffe6                                                                                                               
001624   c003     MOVFF     0x3,0xfe6                                                                                       
001626   ffe6                                                                                                               
001628   d851     RCALL     0x16cc                                                                                          
00162a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00162c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00162e   cff3     MOVFF     0xff3,0x0                                                                                       
001630   f000                                                                                                               
001632   cff4     MOVFF     0xff4,0x1                                                                                       
001634   f001                                                                                                               
001636   0efb     MOVLW     0xfb                                                                                            
001638   cfdb     MOVFF     0xfdb,0x4                                                                                       
00163a   f004                                                                                                               
00163c   0efc     MOVLW     0xfc                                                                                            
00163e   cfdb     MOVFF     0xfdb,0x5                                                                                       
001640   f005                                                                                                               
001642   5005     MOVF      0x5,0x0,0x0                                                                                     
001644   1801     XORWF     0x1,0x0,0x0                                                                                     
001646   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001648   d002     BRA       0x164e                                                                                          
00164a   3401     RLCF      0x1,0x0,0x0                                                                                     
00164c   d004     BRA       0x1656                                                                                          
00164e   5000     MOVF      0x0,0x0,0x0                                                                                     
001650   5c04     SUBWF     0x4,0x0,0x0                                                                                     
001652   5001     MOVF      0x1,0x0,0x0                                                                                     
001654   5805     SUBWFB    0x5,0x0,0x0                                                                                     
001656   e304     BNC       0x1660                                                                                          
001658   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\code\2008\Trc2008\TRCfunctions.c
00165a   6af4     CLRF      0xf4,0x0                                                                                        
00165c   d033     BRA       0x16c4                                                                                          
00165e   d023     BRA       0x16a6         	else                                                                            C:\code\2008\Trc2008\TRCfunctions.c
001660   0efd     MOVLW     0xfd           		if((in - 127) > 125)                                                           C:\code\2008\Trc2008\TRCfunctions.c
001662   cfdb     MOVFF     0xfdb,0x0                                                                                       
001664   f000                                                                                                               
001666   0efe     MOVLW     0xfe                                                                                            
001668   cfdb     MOVFF     0xfdb,0x1                                                                                       
00166a   f001                                                                                                               
00166c   0e7f     MOVLW     0x7f                                                                                            
00166e   5e00     SUBWF     0x0,0x1,0x0                                                                                     
001670   0e00     MOVLW     0x0                                                                                             
001672   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
001674   3401     RLCF      0x1,0x0,0x0                                                                                     
001676   e204     BC        0x1680                                                                                          
001678   5000     MOVF      0x0,0x0,0x0                                                                                     
00167a   087d     SUBLW     0x7d                                                                                            
00167c   0e00     MOVLW     0x0                                                                                             
00167e   5401     SUBFWB    0x1,0x0,0x0                                                                                     
001680   e212     BC        0x16a6                                                                                          
001682   0efd     MOVLW     0xfd           			return -(in - 127); //Joysticks want to flip direction when > 125             C:\code\2008\Trc2008\TRCfunctions.c
001684   cfdb     MOVFF     0xfdb,0x0                                                                                       
001686   f000                                                                                                               
001688   0efe     MOVLW     0xfe                                                                                            
00168a   cfdb     MOVFF     0xfdb,0x1                                                                                       
00168c   f001                                                                                                               
00168e   0e7f     MOVLW     0x7f                                                                                            
001690   5e00     SUBWF     0x0,0x1,0x0                                                                                     
001692   0e00     MOVLW     0x0                                                                                             
001694   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
001696   6c00     NEGF      0x0,0x0                                                                                         
001698   1e01     COMF      0x1,0x1,0x0                                                                                     
00169a   2201     ADDWFC    0x1,0x1,0x0                                                                                     
00169c   c000     MOVFF     0x0,0xff3                                                                                       
00169e   fff3                                                                                                               
0016a0   c001     MOVFF     0x1,0xff4                                                                                       
0016a2   fff4                                                                                                               
0016a4   d00f     BRA       0x16c4                                                                                          
0016a6   0efd     MOVLW     0xfd           		return in - 127;                                                               C:\code\2008\Trc2008\TRCfunctions.c
0016a8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0016aa   f000                                                                                                               
0016ac   0efe     MOVLW     0xfe                                                                                            
0016ae   cfdb     MOVFF     0xfdb,0x1                                                                                       
0016b0   f001                                                                                                               
0016b2   0e7f     MOVLW     0x7f                                                                                            
0016b4   5e00     SUBWF     0x0,0x1,0x0                                                                                     
0016b6   0e00     MOVLW     0x0                                                                                             
0016b8   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
0016ba   c000     MOVFF     0x0,0xff3                                                                                       
0016bc   fff3                                                                                                               
0016be   c001     MOVFF     0x1,0xff4                                                                                       
0016c0   fff4                                                                                                               
0016c2   d000     BRA       0x16c4                                                                                          
0016c4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
0016c6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0016c8   ffd9                                                                                                               
0016ca   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\code\2008\Trc2008\TRCfunctions.c
0016cc   cfd9     MOVFF     0xfd9,0xfe6    int abs(int val)                                                                 C:\code\2008\Trc2008\TRCfunctions.c
0016ce   ffe6                                                                                                               
0016d0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0016d2   ffd9                                                                                                               
                                           {                                                                                C:\code\2008\Trc2008\TRCfunctions.c
0016d4   0efd     MOVLW     0xfd           	return (val >= 0)?val:-val;                                                     C:\code\2008\Trc2008\TRCfunctions.c
0016d6   cfdb     MOVFF     0xfdb,0x2                                                                                       
0016d8   f002                                                                                                               
0016da   0efe     MOVLW     0xfe                                                                                            
0016dc   cfdb     MOVFF     0xfdb,0x3                                                                                       
0016de   f003                                                                                                               
0016e0   0100     MOVLB     0x0                                                                                             
0016e2   0e80     MOVLW     0x80                                                                                            
0016e4   1403     ANDWF     0x3,0x0,0x0                                                                                     
0016e6   e107     BNZ       0x16f6                                                                                          
0016e8   0efd     MOVLW     0xfd                                                                                            
0016ea   cfdb     MOVFF     0xfdb,0x0                                                                                       
0016ec   f000                                                                                                               
0016ee   0efe     MOVLW     0xfe                                                                                            
0016f0   cfdb     MOVFF     0xfdb,0x1                                                                                       
0016f2   f001                                                                                                               
0016f4   d00a     BRA       0x170a                                                                                          
0016f6   0efd     MOVLW     0xfd                                                                                            
0016f8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0016fa   f000                                                                                                               
0016fc   0efe     MOVLW     0xfe                                                                                            
0016fe   cfdb     MOVFF     0xfdb,0x1                                                                                       
001700   f001                                                                                                               
001702   6c00     NEGF      0x0,0x0                                                                                         
001704   1e01     COMF      0x1,0x1,0x0                                                                                     
001706   0e00     MOVLW     0x0                                                                                             
001708   2201     ADDWFC    0x1,0x1,0x0                                                                                     
00170a   c000     MOVFF     0x0,0xff3                                                                                       
00170c   fff3                                                                                                               
00170e   c001     MOVFF     0x1,0xff4                                                                                       
001710   fff4                                                                                                               
001712   d000     BRA       0x1714                                                                                          
001714   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\code\2008\Trc2008\TRCfunctions.c
001716   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001718   ffd9                                                                                                               
00171a   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8722                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8722.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005dba   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005dbc   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
005dbe   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005dc0   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
005dc2   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d92   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d94   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d96   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d98   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d9a   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d9c   d000     BRA       0x5d9e             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005d9e   d000     BRA       0x5da0             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005da0   d000     BRA       0x5da2             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005da2   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005da4   d7fa     BRA       0x5d9a             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
005da6   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d56   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d58   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d5a   6e4f     MOVWF     0x4f,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d5c   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d5e   d001     BRA       0x5d62             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d60   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d62   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d64   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d66   d7fe     BRA       0x5d64             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d68   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d6a   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d6c   d7fe     BRA       0x5d6a             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d6e   2e4f     DECFSZ    0x4f,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d70   d7f7     BRA       0x5d60             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d72   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
005d74   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003cdc   ae42     BTFSS     0x42,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003cde   d002     BRA       0x3ce4                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832U:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; FLO0832S:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         One byte integer to Float conversion                                   C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832U: One byte unsigned integer in iA0                             C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         FLO0832S: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832U                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     GLOBAL FLO0832S                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     EXTERN __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832U:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cd6   9e4a     BCF       0x4a,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW   ;; Flag as unsigned                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cd8   d005     BRA       0x3ce4                   bra       jI2F08Beg                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           FLO0832S:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cda   9e4a     BCF       0x4a,0x7,0x0             bcf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     braClr    iA0,7,jI2F08Beg                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Negate                                                              C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce0   6c42     NEGF      0x42,0x0                 negf      iA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce2   8e4a     BSF       0x4a,0x7,0x0             bsf       fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           jI2F08Beg:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     ;; Copy integer to fW                                                  C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce4   c042     MOVFF     0x42,0x3c                movff     iA0,fW0                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003ce6   f03c                                                                                                               
003ce8   6a3b     CLRF      0x3b,0x0                 clrf      fW1                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cea   6a4e     CLRF      0x4e,0x0                 clrf      fW2                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cec   6a4d     CLRF      0x4d,0x0                 clrf      fW3                                                          C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cee   0e86     MOVLW     0x86                     movlw     0x86                                                         C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf0   6e3d     MOVWF     0x3d,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf2   6a3e     CLRF      0x3e,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf4   ef06     GOTO      0x400c                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
003cf6   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\cast08FP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d4a   6a4d     CLRF      0x4d,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d4c   6a4e     CLRF      0x4e,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d4e   6a3b     CLRF      0x3b,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d50   6a3c     CLRF      0x3c,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d78   90d8     BCF       0xd8,0x0,0x0           bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d82   90d8     BCF       0xd8,0x0,0x0                                                                                    
003d7a   3640     RLCF      0x40,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d84   364d     RLCF      0x4d,0x1,0x0                                                                                    
003d7c   3641     RLCF      0x41,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d86   364e     RLCF      0x4e,0x1,0x0                                                                                    
003d7e   3642     RLCF      0x42,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d88   363b     RLCF      0x3b,0x1,0x0                                                                                    
003d80   3643     RLCF      0x43,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d8a   363c     RLCF      0x3c,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d64   5045     MOVF      0x45,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d66   2640     ADDWF     0x40,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d68   5046     MOVF      0x46,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6a   2241     ADDWFC    0x41,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6c   5047     MOVF      0x47,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d6e   2242     ADDWFC    0x42,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d70   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d72   2243     ADDWFC    0x43,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d52   5045     MOVF      0x45,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d54   5e40     SUBWF     0x40,0x1,0x0           subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d56   5046     MOVF      0x46,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d58   5a41     SUBWFB    0x41,0x1,0x0           subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5a   5047     MOVF      0x47,0x0,0x0           movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5c   5a42     SUBWFB    0x42,0x1,0x0           subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d5e   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d60   5a43     SUBWFB    0x43,0x1,0x0           subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d08   a24a     BTFSS     0x4a,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d1c   a04a     BTFSS     0x4a,0x0,0x0                                                                                    
003d0a   d005     BRA       0x3d16                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d1e   d005     BRA       0x3d2a                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d02   b64a     BTFSC     0x4a,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d0c   ba4a     BTFSC     0x4a,0x5,0x0                                                                                    
003d16   ba4a     BTFSC     0x4a,0x5,0x0                                                                                    
003d20   b84a     BTFSC     0x4a,0x4,0x0                                                                                    
003d2a   b84a     BTFSC     0x4a,0x4,0x0                                                                                    
003d04   efea     GOTO      0x3fd4                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003d06   f01f                                                                                                               
003d0e   efea     GOTO      0x3fd4                                                                                          
003d10   f01f                                                                                                               
003d18   effd     GOTO      0x3ffa                                                                                          
003d1a   f01f                                                                                                               
003d22   efea     GOTO      0x3fd4                                                                                          
003d24   f01f                                                                                                               
003d2c   eff1     GOTO      0x3fe2                                                                                          
003d2e   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; FPD32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         Division  fA/fB for floats fA and fB                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;         IEEE 754 format float fA = fA/fB                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     GLOBAL FPD32                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           FPD32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003cf8   6a4a     CLRF      0x4a,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003cfa   ec42     CALL      0x4084,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003cfc   f020                                                                                                               
003cfe   ec5a     CALL      0x40b4,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d00   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Is b also infinite?                                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnNaN                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d12   eff1     GOTO      0x3fe2                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d14   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotInf                                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; B infinite, A finite => return Zero                                 C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_INF_B,__FpReturnSignZero                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     braClr    fFlg,FLG_ZERO_A,jANotZero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jSignedZero:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; A == 0                                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN     ; B == 0 => 0/0            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d26   effd     GOTO      0x3ffa                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d28   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jANotZero                                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnSignInf ; B == 0 => Finite/0       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; ExpW = (ExpA+127) - (ExpB+127) + 127                                C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d30   6a3e     CLRF      0x3e,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d32   0e7f     MOVLW     0x7f                     movlw     FLT_BIAS                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d34   2443     ADDWF     0x43,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d36   6e3d     MOVWF     0x3d,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d38   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3a   223e     ADDWFC    0x3e,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3c   5048     MOVF      0x48,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d3e   5e3d     SUBWF     0x3d,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d40   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d42   5a3e     SUBWFB    0x3e,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;------ Form the quotient and remainder                                          C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d44   0e1a     MOVLW     0x1a                     movlw     26                  ; quotient width                         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d46   6e4b     MOVWF     0x4b,0x0                 movwf     fT1                 ; loop counter                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d48   6a43     CLRF      0x43,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Init quotient                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig -= fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Sub43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d62   e709     BNN       0x3d76                   bnn       jNoAdjust           ; fAsig >= 0                             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; fAsig += fBsig                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     Add43     fA2,fA1,fA0,fAexp, fB2,fB1,fB0                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d74   d001     BRA       0x3d78                   bra       jNext            ; Next quotient bit is zero ...             C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNoAdjust:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; Insert quotient bit. Location picked so quotient will be            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ;; left-justified in fW0                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d76   8a4d     BSF       0x4d,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           jNext:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fA2,fA1,fA0,fAexp                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     ShiftL4   fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d8c   2e4b     DECFSZ    0x4b,0x1,0x0             decfsz    fT1,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d8e   d7e1     BRA       0x3d52                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;------- Sticky bits                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Quotient consists of 26 bits left-justified in fW0->fW3                       C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Add sticky bit in position bit 5 of fW3 which is just to right of the         C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Round bit.                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d90   5042     MOVF      0x42,0x0,0x0             movf      fA0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d92   1041     IORWF     0x41,0x0,0x0             iorwf     fA1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d94   1040     IORWF     0x40,0x0,0x0             iorwf     fA2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d96   a4d8     BTFSS     0xd8,0x2,0x0             btfss     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d98   8a4d     BSF       0x4d,0x5,0x0             bsf       fW3,5                                                        C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d9a   ef06     GOTO      0x400c                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
003d9c   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\divFP.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dea   6a4d     CLRF      0x4d,0x0               clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dec   6a4e     CLRF      0x4e,0x0               clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dee   6a3b     CLRF      0x3b,0x0               clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df0   6a3c     CLRF      0x3c,0x0               clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e02   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e12   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e04   264e     ADDWF     0x4e,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e14   264e     ADDWF     0x4e,0x1,0x0                                                                                    
003e06   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e16   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e08   223b     ADDWFC    0x3b,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e18   223b     ADDWFC    0x3b,0x1,0x0                                                                                    
003e0a   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e1a   0e00     MOVLW     0x0                                                                                             
003e0c   223c     ADDWFC    0x3c,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e1c   223c     ADDWFC    0x3c,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e58   50f4     MOVF      0xf4,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e68   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e5a   264d     ADDWF     0x4d,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e6a   264d     ADDWF     0x4d,0x1,0x0                                                                                    
003e5c   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e6c   0e00     MOVLW     0x0                                                                                             
003e5e   224e     ADDWFC    0x4e,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e6e   224e     ADDWFC    0x4e,0x1,0x0                                                                                    
003e60   223b     ADDWFC    0x3b,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e70   223b     ADDWFC    0x3b,0x1,0x0                                                                                    
003e62   223c     ADDWFC    0x3c,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e72   223c     ADDWFC    0x3c,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e22   50f3     MOVF      0xf3,0x0,0x0           movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e34   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e46   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003e24   264d     ADDWF     0x4d,0x1,0x0           addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e36   264d     ADDWF     0x4d,0x1,0x0                                                                                    
003e48   264d     ADDWF     0x4d,0x1,0x0                                                                                    
003e26   50f4     MOVF      0xf4,0x0,0x0           movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e38   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e4a   50f4     MOVF      0xf4,0x0,0x0                                                                                    
003e28   224e     ADDWFC    0x4e,0x1,0x0           addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3a   224e     ADDWFC    0x4e,0x1,0x0                                                                                    
003e4c   224e     ADDWFC    0x4e,0x1,0x0                                                                                    
003e2a   0e00     MOVLW     0x0                    movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3c   0e00     MOVLW     0x0                                                                                             
003e4e   0e00     MOVLW     0x0                                                                                             
003e2c   223b     ADDWFC    0x3b,0x1,0x0           addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e3e   223b     ADDWFC    0x3b,0x1,0x0                                                                                    
003e50   223b     ADDWFC    0x3b,0x1,0x0                                                                                    
003e2e   223c     ADDWFC    0x3c,0x1,0x0           addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e40   223c     ADDWFC    0x3c,0x1,0x0                                                                                    
003e52   223c     ADDWFC    0x3c,0x1,0x0                                                                                    
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003df2   5047     MOVF      0x47,0x0,0x0           movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dfe   5046     MOVF      0x46,0x0,0x0                                                                                    
003e0e   5047     MOVF      0x47,0x0,0x0                                                                                    
003e1e   5045     MOVF      0x45,0x0,0x0                                                                                    
003e30   5046     MOVF      0x46,0x0,0x0                                                                                    
003e42   5047     MOVF      0x47,0x0,0x0                                                                                    
003e54   5045     MOVF      0x45,0x0,0x0                                                                                    
003e64   5046     MOVF      0x46,0x0,0x0                                                                                    
003df4   0242     MULWF     0x42,0x0               mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003e00   0242     MULWF     0x42,0x0                                                                                        
003e10   0241     MULWF     0x41,0x0                                                                                        
003e20   0242     MULWF     0x42,0x0                                                                                        
003e32   0241     MULWF     0x41,0x0                                                                                        
003e44   0240     MULWF     0x40,0x0                                                                                        
003e56   0241     MULWF     0x41,0x0                                                                                        
003e66   0240     MULWF     0x40,0x0                                                                                        
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dca   b04a     BTFSC     0x4a,0x0,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dcc   d002     BRA       0x3dd2                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dae   a24a     BTFSS     0x4a,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dbc   aa4a     BTFSS     0x4a,0x5,0x0                                                                                    
003dce   a84a     BTFSS     0x4a,0x4,0x0                                                                                    
003db0   d005     BRA       0x3dbc                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dbe   d005     BRA       0x3dca                                                                                          
003dd0   d002     BRA       0x3dd6                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003da8   b64a     BTFSC     0x4a,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003db2   b84a     BTFSC     0x4a,0x4,0x0                                                                                    
003dc0   b04a     BTFSC     0x4a,0x0,0x0                                                                                    
003daa   efea     GOTO      0x3fd4                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003dac   f01f                                                                                                               
003db4   efea     GOTO      0x3fd4                                                                                          
003db6   f01f                                                                                                               
003dc2   efea     GOTO      0x3fd4                                                                                          
003dc4   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; FPM32                                                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         Mutiplication  fA*fB for floats fA and fB                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format floats fAexp...fA2, fBexp...fB2.                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;         IEEE 754 format float fA = fA*fB                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------------------------------------------------------------------------------  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     GLOBAL FPM32                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpUnPackA, __FpUnPackB, __FpPack                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     EXTERN __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           FPM32                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Unpack the operands                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003d9e   6a4a     CLRF      0x4a,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da0   ec42     CALL      0x4084,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da2   f020                                                                                                               
003da4   ec5a     CALL      0x40b4,0x0               call      __FpUnPackB                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003da6   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,__FpReturnNaN                              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_A,jANotInf                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ A is Infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Is b zero                                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_B,__FpReturnNaN  ; Inf * Zero => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; B finite, A infinite => return infinite with FLG_SIGN_ABW sign      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003db8   eff1     GOTO      0x3fe2                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dba   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jANotInf:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A not infinite                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_INF_B,jBothFinite                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A finite, B infinite                                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     gotoSet   fFlg,FLG_ZERO_A,__FpReturnNaN  ; Zero * Inf => return NaN    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dc6   eff1     GOTO      0x3fe2                   goto      __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dc8   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothFinite:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;------ Both operands are finite: check for zeros                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braSet    fFlg,FLG_ZERO_A,jHaveZero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     braClr    fFlg,FLG_ZERO_B,jBothNotZero                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jHaveZero:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; A or B is zero                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Return zero with sign of product                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dd2   effd     GOTO      0x3ffa                   goto      __FpReturnSignZero                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dd4   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           jBothNotZero:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;       Both operands are finite and non-zero                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; Calculate resulting exponent (two byte resultant)                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     ;; ExpW = (ExpA+127) + (ExpB+127) - 127 + 1                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dd6   6a3e     CLRF      0x3e,0x0                 clrf      fWexpHi                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dd8   5048     MOVF      0x48,0x0,0x0             movf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dda   2443     ADDWF     0x43,0x0,0x0             addwf     fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003ddc   6e3d     MOVWF     0x3d,0x0                 movwf     fWexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dde   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de0   223e     ADDWFC    0x3e,0x1,0x0             addwfc    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de2   0e7e     MOVLW     0x7e                     movlw     FLT_BIAS-1                                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de4   5e3d     SUBWF     0x3d,0x1,0x0             subwf     fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de6   6ae8     CLRF      0xe8,0x0                 clrf      WREG                                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003de8   5a3e     SUBWFB    0x3e,0x1,0x0             subwfb    fWexpHi,F                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Not all products are calculated and not all products are included             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; This will have a slight effect on the rounding and could cause                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a round toward zero when a round up is required by IEEE754                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round to nearest mode.  Effectively the round up threshold is changed         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; from 0.5 to about 0.5001                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; a0b0    a0b0                    not     not                                   C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a1b0    a1b0            added   added                                 C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;         a0b1    a0b1             |       |                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a2b0    a2b0     V       V                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a1b1    a1b1                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                 a0b2    a0b2                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a1b2    a1b2                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                         a2b1    a2b1                                          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                 a2b2    a2b2                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; added to get                                                                  C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW0      fW1     fW2     fW3    NA      NA                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;;                                                                               C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; If msb of fW0   is 0 then the results will have to be left shifted            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; which will move the msb of fA3 into fA2. After this is done then              C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; the msb of fW3 becomes the Round bit and the rest of the less significant     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; bits combine to form the Sticky bit.  Since the full product is not           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; calculated fW3 could be a maximum of 2 too small. Since bits 0 -> 6 of        C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; fW3 are used only for rounding the effect is a very small failure to          C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; round up.                                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Clear4    fW3, fW2, fW1, fW0                                           C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003df6   cff4     MOVFF     0xff4,0x3c               movff     PRODH,fW0                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003df8   f03c                                                                                                               
003dfa   cff3     MOVFF     0xff3,0x3b               movff     PRODL,fW1                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003dfc   f03b                                                                                                               
                                                     Mul2      fA0,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add32     fW2,fW1,fW0, PRODL, PRODH                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA0,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB0                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add42     fW3,fW2,fW1,fW0, PRODL, PRODH                                C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA1,fB2                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Mul2      fA2,fB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     Add41     fW3,fW2,fW1,fW0, PRODH                                       C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Start with form 0.f * 0.f                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Results can be fW0 = 11xxxxxx -> 01xxxxxx                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Round and partial Sticky bits in fW3.                                         C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; One bit of signficant in fW3 in the 01xxxxxx case                             C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;; Sign is Flg.FLG_SIGN_ABW                                                      C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003e74   ef06     GOTO      0x400c                   goto      __FpPack                                                     C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
003e76   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\mulFP.asm
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e78   6a49     CLRF      0x49,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e7a   ae47     BTFSS     0x47,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e7c   ef45     GOTO      0x3e8a                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e7e   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e80   6c46     NEGF      0x46,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e82   1e47     COMF      0x47,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e84   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e86   2247     ADDWFC    0x47,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e88   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8a   ae42     BTFSS     0x42,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8c   ef4d     GOTO      0x3e9a                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e8e   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e90   6c41     NEGF      0x41,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e92   1e42     COMF      0x42,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e94   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e96   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e98   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9a   ec5f     CALL      0x5cbe,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9c   f02e                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003e9e   be42     BTFSC     0x42,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea0   ef5d     GOTO      0x3eba         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea2   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea4   ae49     BTFSS     0x49,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea6   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ea8   6c41     NEGF      0x41,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eaa   1e42     COMF      0x42,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eac   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eae   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb0   6c3d     NEGF      0x3d,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb2   1e3e     COMF      0x3e,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb4   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb6   223e     ADDWFC    0x3e,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eb8   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003eba   be49     BTFSC     0x49,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ebc   ef54     GOTO      0x3ea8         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ebe   f01f                                                                                                               
003ec0   884a     BSF       0x4a,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
003ec2   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cbe   6a3e     CLRF      0x3e,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cc0   6a3d     CLRF      0x3d,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cc2   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cc4   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cc6   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cc8   3641     RLCF      0x41,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cca   3642     RLCF      0x42,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ccc   363d     RLCF      0x3d,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cce   363e     RLCF      0x3e,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cd0   5046     MOVF      0x46,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cd2   5c3d     SUBWF     0x3d,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cd4   5047     MOVF      0x47,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cd6   583e     SUBWFB    0x3e,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cd8   e305     BNC       0x5ce4         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cda   5046     MOVF      0x46,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cdc   5e3d     SUBWF     0x3d,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005cde   5047     MOVF      0x47,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ce0   5a3e     SUBWFB    0x3e,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ce2   2a41     INCF      0x41,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ce4   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ce6   d7f0     BRA       0x5cc8             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
005ce8   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ec4   6a49     CLRF      0x49,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ec6   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ec8   ae47     BTFSS     0x47,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eca   ef6f     GOTO      0x3ede         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ecc   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ece   6c44     NEGF      0x44,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed0   1e45     COMF      0x45,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed2   1e46     COMF      0x46,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed4   1e47     COMF      0x47,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed6   2245     ADDWFC    0x45,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ed8   2246     ADDWFC    0x46,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eda   2247     ADDWFC    0x47,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003edc   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ede   ae42     BTFSS     0x42,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee0   ef7a     GOTO      0x3ef4         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee2   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee4   6c3f     NEGF      0x3f,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee6   1e40     COMF      0x40,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ee8   1e41     COMF      0x41,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eea   1e42     COMF      0x42,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eec   2240     ADDWFC    0x40,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003eee   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef0   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef2   1e49     COMF      0x49,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef4   ec1c     CALL      0x5c38,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef6   f02e                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003ef8   be42     BTFSC     0x42,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efa   ef91     GOTO      0x3f22         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efc   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003efe   ae49     BTFSS     0x49,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f00   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f02   6c3f     NEGF      0x3f,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f04   1e40     COMF      0x40,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f06   1e41     COMF      0x41,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f08   1e42     COMF      0x42,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0a   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0c   2240     ADDWFC    0x40,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f0e   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f10   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f12   6c3b     NEGF      0x3b,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f14   1e3c     COMF      0x3c,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f16   1e3d     COMF      0x3d,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f18   1e3e     COMF      0x3e,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1a   223c     ADDWFC    0x3c,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1c   223d     ADDWFC    0x3d,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f1e   223e     ADDWFC    0x3e,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f20   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f22   be49     BTFSC     0x49,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f24   ef81     GOTO      0x3f02         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f26   f01f                                                                                                               
003f28   884a     BSF       0x4a,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
003f2a   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c38   6a3e     CLRF      0x3e,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3a   6a3d     CLRF      0x3d,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3c   6a3c     CLRF      0x3c,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c3e   6a3b     CLRF      0x3b,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c40   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c42   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c44   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c46   363f     RLCF      0x3f,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c48   3640     RLCF      0x40,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c4a   3641     RLCF      0x41,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c4c   3642     RLCF      0x42,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c4e   363b     RLCF      0x3b,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c50   363c     RLCF      0x3c,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c52   363d     RLCF      0x3d,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c54   363e     RLCF      0x3e,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c56   5044     MOVF      0x44,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c58   5c3b     SUBWF     0x3b,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c5a   5045     MOVF      0x45,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c5c   583c     SUBWFB    0x3c,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c5e   5046     MOVF      0x46,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c60   583d     SUBWFB    0x3d,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c62   5047     MOVF      0x47,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c64   583e     SUBWFB    0x3e,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c66   e309     BNC       0x5c7a         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c68   5044     MOVF      0x44,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c6a   5e3b     SUBWF     0x3b,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c6c   5045     MOVF      0x45,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c6e   5a3c     SUBWFB    0x3c,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c70   5046     MOVF      0x46,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c72   5a3d     SUBWFB    0x3d,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c74   5047     MOVF      0x47,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c76   5a3e     SUBWFB    0x3e,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c78   2a3f     INCF      0x3f,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c7a   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c7c   d7e4     BRA       0x5c46             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
005c7e   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f2c   c042     MOVFF     0x42,0x4e      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f2e   f04e                                                                                                               
003f30   c041     MOVFF     0x41,0x4d      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f32   f04d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f34   5041     MOVF      0x41,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f36   0246     MULWF     0x46,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f38   cff4     MOVFF     0xff4,0x40     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f3a   f040                                                                                                               
003f3c   cff3     MOVFF     0xff3,0x3f     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f3e   f03f                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f40   5042     MOVF      0x42,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f42   0247     MULWF     0x47,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f44   cff4     MOVFF     0xff4,0x42     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f46   f042                                                                                                               
003f48   cff3     MOVFF     0xff3,0x41     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f4a   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f4c   0246     MULWF     0x46,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f4e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f50   2640     ADDWF     0x40,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f52   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f54   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f56   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f58   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5a   504d     MOVF      0x4d,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5c   0247     MULWF     0x47,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f5e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f60   2640     ADDWF     0x40,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f62   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f64   2241     ADDWFC    0x41,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f66   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f68   2242     ADDWFC    0x42,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6a   ae47     BTFSS     0x47,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6c   efbc     GOTO      0x3f78         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f6e   f01f                                                                                                               
003f70   504d     MOVF      0x4d,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f72   5e41     SUBWF     0x41,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f74   504e     MOVF      0x4e,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f76   5a42     SUBWFB    0x42,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f78   ae4e     BTFSS     0x4e,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7a   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7c   5046     MOVF      0x46,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f7e   5e41     SUBWF     0x41,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f80   5047     MOVF      0x47,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f82   5a42     SUBWFB    0x42,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
003f84   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a30   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a32   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a34   cff3     MOVFF     0xff3,0x3b         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a36   f03b                                                                                                               
005a38   cff4     MOVFF     0xff4,0x3c         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a3a   f03c                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a3c   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a3e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a40   263c     ADDWF     0x3c,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a42   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a44   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a46   6e3d     MOVWF     0x3d,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a48   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a4a   0246     MULWF     0x46,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a4c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a4e   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a50   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a52   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a54   6e3e     MOVWF     0x3e,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a56   503f     MOVF      0x3f,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a58   0247     MULWF     0x47,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a5a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a5c   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a5e   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a60   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a62   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a64   263c     ADDWF     0x3c,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a66   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a68   223d     ADDWFC    0x3d,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a6a   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a6c   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a6e   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a70   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a72   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a74   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a76   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a78   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a7a   5040     MOVF      0x40,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a7c   0246     MULWF     0x46,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a7e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a80   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a82   5041     MOVF      0x41,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a84   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a86   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a88   263d     ADDWF     0x3d,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a8a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a8c   223e     ADDWFC    0x3e,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a8e   5041     MOVF      0x41,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a90   0245     MULWF     0x45,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a92   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a94   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a96   5042     MOVF      0x42,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a98   0244     MULWF     0x44,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a9a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a9c   263e     ADDWF     0x3e,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
005a9e   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f96   b44a     BTFSC     0x4a,0x2,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003faa   b04a     BTFSC     0x4a,0x0,0x0                                                                                    
003f98   d003     BRA       0x3fa0                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fac   d7fc     BRA       0x3fa6                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f92   a24a     BTFSS     0x4a,0x1,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fc8   a44a     BTFSS     0x4a,0x2,0x0                                                                                    
003fce   ae42     BTFSS     0x42,0x7,0x0                                                                                    
003f94   d00a     BRA       0x3faa                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fca   d003     BRA       0x3fd2                                                                                          
003fd0   d7ea     BRA       0x3fa6                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fba   0e86     MOVLW     0x86                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fbc   5c43     SUBWF     0x43,0x0,0x0           subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fbe   e004     BZ        0x3fc8                 bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb4   0e7e     MOVLW     0x7e                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb6   6443     CPFSGT    0x43,0x0               cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb8   d7f6     BRA       0x3fa6                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fae   0e87     MOVLW     0x87                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb0   6043     CPFSLT    0x43,0x0               cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003fb2   d7f1     BRA       0x3f96                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f8c   b64a     BTFSC     0x4a,0x3,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f8e   efcd     GOTO      0x3f9a                 goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003f90   f01f                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; INT3208:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Float to one byte integer conversion. Designed for both signed         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         and unsigned use.                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         Results for special cases:                                             C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         In                  Out                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         NaN                 0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         +Infinity           0x7F                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         -Infinity           0x80                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         255->128            0xFF=>0x80                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         <-128               0                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         IEEE 754 format float fA                                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;         INT3208U: One byte signed integer in iA0                               C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     GLOBAL INT3208                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     EXTERN __FpUnPackA                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           INT3208:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           ;------ Unpack the operand                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f86   6a4a     CLRF      0x4a,0x0                 clrf      fFlg                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f88   ec42     CALL      0x4084,0x0               call      __FpUnPackA                                                  C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f8a   f020                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     gotoSet   fFlg,FLG_NaN_AorB,jMaxPos                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_INF_A,jNotInf                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMax:                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_SIGN_A,jMaxNeg                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxPos:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f9a   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f9c   6e42     MOVWF     0x42,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003f9e   d019     BRA       0x3fd2                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jMaxNeg:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa0   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa2   6e42     MOVWF     0x42,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa4   d016     BRA       0x3fd2                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jZero:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa6   6a42     CLRF      0x42,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fa8   d014     BRA       0x3fd2                   bra       jExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jNotInf:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braSet    fFlg,FLG_ZERO_A,jZero                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFgeL   fAexp,0x87,jMax         ;; exponent too large                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFleL   fAexp,0x7E,jZero        ;; exponent too small                C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braFeqL   fAexp,0x86,jLoopExit    ;; shift complete                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc0   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc2   3242     RRCF      0x42,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc4   2a43     INCF      0x43,0x1,0x0             incf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fc6   d7f9     BRA       0x3fba                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jLoopExit:                                                                       C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fFlg,FLG_SIGN_A,jExit                                        C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fcc   6c42     NEGF      0x42,0x0                 negf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     braClr    fA0,7,jZero             ;; too large                         C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           jExit:                                                                           C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
003fd2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\castFP08.asm
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bd4   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bd6   ffe6                                                                                                               
005bd8   cfda     MOVFF     0xfda,0xfe6                                                                                     
005bda   ffe6                                                                                                               
005bdc   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005bde   ffd9                                                                                                               
005be0   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005be2   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005be4   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005be6   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005be8   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bea   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
005bec   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bee   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bf0   d002     BRA       0x5bf6                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bf2   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bf4   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bf6   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bf8   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bfa   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005bfc   d002     BRA       0x5c02                                                                                          
005bfe   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c00   d001     BRA       0x5c04           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c02   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c04   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c06   d002     BRA       0x5c0c                                                                                          
005c08   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c0a   d001     BRA       0x5c0e           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c0c   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c0e   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c10   d002     BRA       0x5c16                                                                                          
005c12   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c14   d001     BRA       0x5c18           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c16   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c18   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c1a   d002     BRA       0x5c20                                                                                          
005c1c   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c1e   d001     BRA       0x5c22           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c20   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c22   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c24   50db     MOVF      0xdb,0x0,0x0                                                                                    
005c26   6eaf     MOVWF     0xaf,0x0                                                                                        
005c28   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c2a   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c2c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
005c2e   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005c30   ffda                                                                                                               
005c32   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005c34   ffd9                                                                                                               
005c36   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005aa0   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005aa2   ffe6                                                                                                               
005aa4   cfda     MOVFF     0xfda,0xfe6                                                                                     
005aa6   ffe6                                                                                                               
005aa8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005aaa   ffd9                                                                                                               
005aac   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005aae   ffda                                                                                                               
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ab0   6ac2     CLRF      0xc2,0x0           ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ab2   6ac1     CLRF      0xc1,0x0           ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ab4   6ac0     CLRF      0xc0,0x0           ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ab6   0efc     MOVLW     0xfc               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ab8   40db     RRNCF     0xdb,0x0,0x0                                                                                    
005aba   0b7f     ANDLW     0x7f                                                                                            
005abc   0b3c     ANDLW     0x3c                                                                                            
005abe   6ec2     MOVWF     0xc2,0x0                                                                                        
005ac0   0efb     MOVLW     0xfb               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ac2   50db     MOVF      0xdb,0x0,0x0                                                                                    
005ac4   6ec1     MOVWF     0xc1,0x0                                                                                        
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ac6   0efc     MOVLW     0xfc               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ac8   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005aca   0bf0     ANDLW     0xf0                                                                                            
005acc   0b30     ANDLW     0x30                                                                                            
005ace   12c1     IORWF     0xc1,0x1,0x0                                                                                    
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ad0   0efd     MOVLW     0xfd               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ad2   50db     MOVF      0xdb,0x0,0x0                                                                                    
005ad4   0b80     ANDLW     0x80                                                                                            
005ad6   6ec0     MOVWF     0xc0,0x0                                                                                        
005ad8   0efd     MOVLW     0xfd               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ada   38db     SWAPF     0xdb,0x0,0x0                                                                                    
005adc   0b0f     ANDLW     0xf                                                                                             
005ade   0b07     ANDLW     0x7                                                                                             
005ae0   12c0     IORWF     0xc0,0x1,0x0                                                                                    
005ae2   0efd     MOVLW     0xfd               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005ae4   50db     MOVF      0xdb,0x0,0x0                                                                                    
005ae6   0d04     MULLW     0x4                                                                                             
005ae8   50f3     MOVF      0xf3,0x0,0x0                                                                                    
005aea   0b38     ANDLW     0x38                                                                                            
005aec   12c0     IORWF     0xc0,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005aee   0efc     MOVLW     0xfc               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005af0   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
005af2   d003     BRA       0x5afa                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005af4   9c9e     BCF       0x9e,0x6,0x0         PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005af6   8c9d     BSF       0x9d,0x6,0x0         PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005af8   8cf2     BSF       0xf2,0x6,0x0         INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005afa   80c2     BSF       0xc2,0x0,0x0       ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005afc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
005afe   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005b00   ffda                                                                                                               
005b02   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b04   ffd9                                                                                                               
005b06   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id:  */                                                                      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Function Name:  OpenSPI1                                        *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Parameters:     SSP1 peripheral setup bytes                     *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *   Description:    This function sets up the SSP1 module on a      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b6e   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI1( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b70   ffe6                                                                                                               
005b72   cfda     MOVFF     0xfda,0xfe6                                                                                     
005b74   ffe6                                                                                                               
005b76   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005b78   ffd9                                                                                                               
005b7a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005b7c   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b7e   0e3f     MOVLW     0x3f             SSP1STAT &= 0x3F;               // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b80   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
005b82   6ac6     CLRF      0xc6,0x0         SSP1CON1 = 0x00;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b84   0efd     MOVLW     0xfd             SSP1CON1 |= sync_mode;          // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b86   50db     MOVF      0xdb,0x0,0x0                                                                                    
005b88   12c6     IORWF     0xc6,0x1,0x0                                                                                    
005b8a   0efb     MOVLW     0xfb             SSP1STAT |= smp_phase;          // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b8c   50db     MOVF      0xdb,0x0,0x0                                                                                    
005b8e   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b90   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005b92   50db     MOVF      0xdb,0x0,0x0                                                                                    
005b94   0a03     XORLW     0x3                                                                                             
005b96   e009     BZ        0x5baa                                                                                          
005b98   0a01     XORLW     0x1                                                                                             
005b9a   e004     BZ        0x5ba4                                                                                          
005b9c   0a02     XORLW     0x2                                                                                             
005b9e   e106     BNZ       0x5bac                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 0:                       // SPI1 bus mode 0,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ba0   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ba2   d004     BRA       0x5bac               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 2:                       // SPI1 bus mode 1,0                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ba4   8cc7     BSF       0xc7,0x6,0x0         SSP1STATbits.CKE = 1;       // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ba6   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005ba8   d001     BRA       0x5bac               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 3:                       // SPI1 bus mode 1,1                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005baa   88c6     BSF       0xc6,0x4,0x0         SSP1CON1bits.CKP = 1;       // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // default SPI1 bus mode 0,1                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bac   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bae   50db     MOVF      0xdb,0x0,0x0                                                                                    
005bb0   0a05     XORLW     0x5                                                                                             
005bb2   e003     BZ        0x5bba                                                                                          
005bb4   0a01     XORLW     0x1                                                                                             
005bb6   e104     BNZ       0x5bc0                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bb8   8e97     BSF       0x97,0x7,0x0         TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bba   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bbc   9ec7     BCF       0xc7,0x7,0x0         SSP1STATbits.SMP = 0;       // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bbe   d001     BRA       0x5bc2               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bc0   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bc2   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bc4   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bc6   8ac6     BSF       0xc6,0x5,0x0     SSP1CON1 |= SSPENB;             // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bc8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi1open.c
005bca   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005bcc   ffda                                                                                                               
005bce   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005bd0   ffd9                                                                                                               
005bd2   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c80   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c82   ffe6                                                                                                               
005c84   cfda     MOVFF     0xfda,0xfe6                                                                                     
005c86   ffe6                                                                                                               
005c88   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005c8a   ffd9                                                                                                               
005c8c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005c8e   ffda                                                                                                               
005c90   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005c92   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c94   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c96   6edf     MOVWF     0xdf,0x0                                                                                        
005c98   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c9a   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
005c9c   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005c9e   cfde     MOVFF     0xfde,0x0        return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005ca0   f000                                                                                                               
005ca2   cfdd     MOVFF     0xfdd,0x1                                                                                       
005ca4   f001                                                                                                               
005ca6   c000     MOVFF     0x0,0xff3                                                                                       
005ca8   fff3                                                                                                               
005caa   c001     MOVFF     0x1,0xff4                                                                                       
005cac   fff4                                                                                                               
005cae   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
005cb0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cb2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cb4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005cb6   ffda                                                                                                               
005cb8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005cba   ffd9                                                                                                               
005cbc   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004026   364d     RLCF      0x4d,0x1,0x0           rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004028   364e     RLCF      0x4e,0x1,0x0           rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00402a   363b     RLCF      0x3b,0x1,0x0           rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00402c   363c     RLCF      0x3c,0x1,0x0           rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004058   323c     RRCF      0x3c,0x1,0x0           rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00405a   323b     RRCF      0x3b,0x1,0x0           rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00405c   324e     RRCF      0x4e,0x1,0x0           rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00404c   2a4e     INCF      0x4e,0x1,0x0           incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00404e   6ae8     CLRF      0xe8,0x0               clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004050   223b     ADDWFC    0x3b,0x1,0x0           addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004052   223c     ADDWFC    0x3c,0x1,0x0           addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00402e   063d     DECF      0x3d,0x1,0x0           decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004030   a0d8     BTFSS     0xd8,0x0,0x0           btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004032   063e     DECF      0x3e,0x1,0x0           decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004016   be3e     BTFSC     0x3e,0x7,0x0           btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00401a   be3c     BTFSC     0x3c,0x7,0x0                                                                                    
004018   d7f0     BRA       0x3ffa                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00401c   d00c     BRA       0x4036                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
003ffa   ae4a     BTFSS     0x4a,0x7,0x0           btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
00403e   ae4d     BTFSS     0x4d,0x7,0x0                                                                                    
004048   a04e     BTFSS     0x4e,0x0,0x0                                                                                    
003ffc   d004     BRA       0x4006                 bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
004040   d011     BRA       0x4064                                                                                          
00404a   d00c     BRA       0x4064                                                                                          
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpPack                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnW                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnNaN                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosZero,__FpReturnNegZero,__FpReturnSignZero          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpReturnPosInf, __FpReturnNegInf, __FpReturnSignInf           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     GLOBAL __FpExit                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;************ C O M M O M    E N T R I E S *****************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNaN:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return NaN                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fd4   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fd6   6e43     MOVWF     0x43,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fd8   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fda   6e42     MOVWF     0x42,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fdc   6e41     MOVWF     0x41,0x0                 movwf     fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fde   6e40     MOVWF     0x40,0x0                 movwf     fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpExit:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe0   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignInf:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return infinite with sign in FLG_SIGN_ABW                           C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe2   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe4   be4a     BTFSC     0x4a,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegInf:            ;; return negative infinite                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe6   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fe8   6e43     MOVWF     0x43,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fea   d002     BRA       0x3ff0                   bra       jReturnPosInf0                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosInf:                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return positive infinite                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fec   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003fee   6e43     MOVWF     0x43,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jReturnPosInf0:                                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff0   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff2   6e42     MOVWF     0x42,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jZero1and2:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff4   6a41     CLRF      0x41,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff6   6a40     CLRF      0x40,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ff8   d7f3     BRA       0x3fe0                   bra       __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnSignZero:                                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return Zero with sign in FLG_SIGN_ABW                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fFlg,FLG_SIGN_ABW,__FpReturnPosZero                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnNegZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
003ffe   0e80     MOVLW     0x80                     movlw     0x80                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004000   6e43     MOVWF     0x43,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004002   6a42     CLRF      0x42,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004004   d7f7     BRA       0x3ff4                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnPosZero:                                                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; return zero                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004006   6a43     CLRF      0x43,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004008   6a42     CLRF      0x42,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400a   d7f4     BRA       0x3ff4                   bra       jZero1and2                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;***********************************************************************         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;-----------------------------------------------------------------------;        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; __Fppack:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Rounds and packs a float                                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Assumes significant, round bit and sticky bits in fW0 -> fW3.            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Biased exponent in fWexp,fWexpHi.                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Exponent must be adjusted for significant left-justified in fW0.         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Sign in FLAG_SIGN_ABW.                                                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;       Packed, signed float in fAexp...fA2                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ; Notes:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpPack                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400c   503c     MOVF      0x3c,0x0,0x0             movf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00400e   103b     IORWF     0x3b,0x0,0x0             iorwf     fW1,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004010   104e     IORWF     0x4e,0x0,0x0             iorwf     fW2,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004012   104d     IORWF     0x4d,0x0,0x0             iorwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004014   e0f8     BZ        0x4006                   bz        __FpReturnPosZero             ;; Pure zero                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fWexpHi,7,__FpReturnSignZero  ;; Subnormal. Treat as signed zero C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkLoop:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braSet    fW0,7,jPkShiftDone            ;; Significant left-justified  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0 && fWexpHi == 0 )goto __FpReturnZero;                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00401e   503d     MOVF      0x3d,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004020   103e     IORWF     0x3e,0x0,0x0             iorwf     fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004022   e0eb     BZ        0x3ffa                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004024   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftL4C  fW3,fW2,fW1,fW0                                              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Dec2      fWexp,fWexpHi                 ;; corrected exponent          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004034   d7f2     BRA       0x401a                   bra       jPkLoop                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkShiftDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexpHi ) goto __FpReturnSignInf                                C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004036   503e     MOVF      0x3e,0x0,0x0             movf      fWexpHi,W                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004038   e1d4     BNZ       0x3fe2                   bnz       __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00403a   283d     INCF      0x3d,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00403c   e0d2     BZ        0x3fe2                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;;------ Round up if (round && (sticky || (significand & 1)))          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW3 & 0x80)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW3,7,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if(  fW3 & 0x7F)   goto jPkRoundIt;                                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004042   0e7f     MOVLW     0x7f                     movlw     0x7F                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004044   144d     ANDWF     0x4d,0x0,0x0             andwf     fW3,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004046   e102     BNZ       0x404c                   bnz       jPkRoundIt          ;; Rounding required ...                 C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( !(fW2 & 0x01)) goto jPkRoundDone;                               C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     braClr    fW2,0,jPkRoundDone  ;; No rounding required ...              C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundIt:                                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; ---------- Do Rounding ----------------                             C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     Inc3      fW2,fW1,fW0         ;; Significand++                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004054   e307     BNC       0x4064                   bnc       jPkRoundDone        ;; No need to adjust exponent            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; Renormalize                                                         C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004056   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ShiftR3C  fW2,fW1,fW0                                                  C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00405e   2a3d     INCF      0x3d,0x1,0x0             incf      fWexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     ;; if( fWexp == 0xFF ) goto __FpReturnSignInf                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004060   283d     INCF      0x3d,0x0,0x0             incf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004062   e0bf     BZ        0x3fe2                   bz        __FpReturnSignInf                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           jPkRoundDone:                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           __FpReturnW:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004064   503d     MOVF      0x3d,0x0,0x0             movf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004066   e0c9     BZ        0x3ffa                   bz        __FpReturnSignZero            ;; Subnormal                   C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004068   c04e     MOVFF     0x4e,0x40                movff     fW2,fA2                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00406a   f040                                                                                                               
00406c   c03b     MOVFF     0x3b,0x41                movff     fW1,fA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00406e   f041                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004070   343c     RLCF      0x3c,0x0,0x0             rlcf      fW0,W                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004072   6e42     MOVWF     0x42,0x0                 movwf     fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004074   303d     RRCF      0x3d,0x0,0x0             rrcf      fWexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004076   6e43     MOVWF     0x43,0x0                 movwf     fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004078   3242     RRCF      0x42,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407a   9e43     BCF       0x43,0x7,0x0             bcf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407c   be4a     BTFSC     0x4a,0x7,0x0             btfsc     fFlg,FLG_SIGN_ABW                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
00407e   8e43     BSF       0x43,0x7,0x0             bsf       fAexp,7                                                      C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004080   eff0     GOTO      0x3fe0                   goto      __FpExit                                                     C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
004082   f01f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\packFP.asm
                                           #include <P18CXXX.INC>           ; general Golden Gate definitions               C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "fpmacros.inc"                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ; Macros, constants, defines and variable externs used by float routines.        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;******************************************************************************  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;        radix dec                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Uses traditional global names                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN FPFLAGS                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB7                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB6                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB5                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   EXTERN AARGB4                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fFlg  FPFLAGS                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA3    AARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA2    AARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA1    AARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fA0    AARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fAexp  AEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB3    BARGB3                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB2    BARGB2                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB1    BARGB1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fB0    BARGB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fBexp  BEXP                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT1     TEMPB3                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fT0     TEMPB2                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW3     TEMPB1                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW2     TEMPB0                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW1     AARGB7                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fW0     AARGB6                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexp   AARGB5                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define fWexpHi AARGB4                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA0 AARGB0   ;msb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA1 AARGB1                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA2 AARGB2                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define iA3 AARGB3   ;lsb                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_BIAS        equ      127    ; exponent bias                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_SMIN        equ     -149    ; min unbiased subnormal exponent                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMIN        equ     -126    ; min unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           FLT_EMAX        equ      127    ; max unbiased normal exponent                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;; Flags for both A and B arguments                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_A    0  ; A: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_A     1  ; A: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_A    2  ; A: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_NaN_AorB  3  ; A or B is a NaN  (A or B)                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_ZERO_B    4  ; B: is zero                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_INF_B     5  ; B: is infinity                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_B    6  ; B: is negative                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           #define FLG_SIGN_ABW  7  ; ABW: Sign (A xor B) or W                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Exchange macro Var0, Var1                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var0,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movff   Var1,Var0                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movwf   Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Clear4 macro Var0, Var1, Var2, Var3                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    Var3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var << 1;      Logical shift                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftL4 macro Var0,Var1,Var2,Var3                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bcf     STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rlcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR2C macro Var0,Var1                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR3C macro Var0,Var1,Var2                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = Var >> 1;      Must initialize _C                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ShiftR4C macro Var0,Var1,Var2,Var3                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   rrcf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C invalid                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   infsnz  Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var++, C valid                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Inc4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   incf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Decrement 2 bytes. WREG unchanged.                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Dec2 macro Var0, Var1                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,C                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   decf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg2 macro Var0,Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg3 macro Var0,Var1,Var2                                                        C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg4 macro Var0,Var1,Var2,Var3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Var = -Var                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Neg5 macro Var0,Var1,Var2,Var3,Var4                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   negf    Var0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   comf    Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   clrf    WREG                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var3,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  Var4,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add32 macro AVar0,AVar1,AVar2, BVar0,BVar1                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add41 macro AVar0,AVar1,AVar2,AVar3, BVar0                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add42 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar += BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Add4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   addwfc  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub2 macro AVar0,AVar1, BVar0,BVar1                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub3 macro AVar0,AVar1,AVar2, BVar0,BVar1,BVar2                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub4 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2,BVar3                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar3,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; AVar -= BVar                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Sub43 macro AVar0,AVar1,AVar2,AVar3, BVar0,BVar1,BVar2                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar0,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   AVar0,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar1,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar1,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar2,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar2,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   0                                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwfb  AVar3,F                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; (PRODL,PRODH) = AVar*Bvar                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           Mul2 macro AVar,BVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    BVar,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   mulwf   AVar                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== R E L  B R A N C H E S ===================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit set                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braSet macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if bit clear                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braClr macro Var, Bit, jLabel                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqZ macro Var,jZero                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jZero                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != 0.  WREG unchanged.                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneZ macro Var,jNotZero                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var,F                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jNotZero                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var == Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var != Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var,W                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var <= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var >= Lit.                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeL macro   Var,Lit,jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw   Lit                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var                                                              C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 == Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFeqF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bz      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Branch if Var1 != Var2                                                C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFneF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bnz     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFgeF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfslt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFleF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   cpfsgt  Var1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bra     jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           braFltF macro   Var1,Var2,jLabel                                                 C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movf    Var1,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf   Var2,W                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   STATUS,Z                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   bc      jLabel                                                           C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;=============== A B S O L U T E    B R A N C H E S =======================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit set                                                      C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoSet macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if bit clear                                                    C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoClr macro Var, Bit, jLabel                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss   Var,Bit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto     jLabel                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   ;; Go to if F == Lit                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFeqL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfsc     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F != Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFneL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   movlw     Lit                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   subwf     Var,W                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   btfss     _Z                                                             C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   goto      jLabel                                                         C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F >= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFgeL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfslt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           ;Go to if F <= Lit                                                               C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                           gotoFleL macro   Var,Lit,jLabel                                                  C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     movlw     Lit                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     cpfsgt    Var                                                          C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     goto      jLabel                                                       C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fpmacros.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackA                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; __FpUnPackB                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Description:                                                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpack floats fA and fB                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Input:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         IEEE 754 format float in fAexp...fA2.                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Same for fBexp...fB2.                                                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Requires flags to be zero on entry.                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; Output:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Unpacks exponent into fAexp and Significant into fA0,fA1,fA2.          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets .0f => .1f, i.e. makes msb of Significant explict                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;         Sets Zero, Infinite and NaN flags.                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On entry: IEEE 754 format                   Address increasing down            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8              |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     E0  D22 D21 D20 D19 D18 D17 D16             |                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   Sn  E7  E6  E5  E4  E3  E2  E1              V                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ; On exit                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f2     D7  D6  D5  D4  D3  D2  D1  D0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f1     D15 D14 D13 D12 D11 D10 D9  D8                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       f0     1   D22 D21 D20 D19 D18 D17 D16                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;       fexp   E7  E6  E5  E4  E3  E2  E1  E0                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     GLOBAL __FpUnPackA, __FpUnPackB                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           PROG    CODE                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackA:                                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004084   3642     RLCF      0x42,0x1,0x0             rlcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004086   3643     RLCF      0x43,0x1,0x0             rlcf      fAexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004088   e302     BNC       0x408e                   bnc       jUnpkA1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408a   844a     BSF       0x4a,0x2,0x0             bsf       fFlg,FLG_SIGN_A    ; Signal negative                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408c   7e4a     BTG       0x4a,0x7,0x0             btg       fFlg,FLG_SIGN_ABW  ; Toggle combined sign                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00408e   e106     BNZ       0x409c                   bnz       jUnpkANZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004090   804a     BSF       0x4a,0x0,0x0             bsf       fFlg,FLG_ZERO_A    ; Signal Zero                             C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004092   6a43     CLRF      0x43,0x0                 clrf      fAexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004094   6a42     CLRF      0x42,0x0                 clrf      fA0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004096   6a41     CLRF      0x41,0x0                 clrf      fA1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
004098   6a40     CLRF      0x40,0x0                 clrf      fA2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409a   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkANZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409c   2843     INCF      0x43,0x0,0x0             incf      fAexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
00409e   e003     BZ        0x40a6                   bz        jUnpkA2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a0   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a2   3242     RRCF      0x42,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a4   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkA2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a6   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040a8   3242     RRCF      0x42,0x1,0x0             rrcf      fA0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040aa   e102     BNZ       0x40b0                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ac   824a     BSF       0x4a,0x1,0x0             bsf       fFlg,FLG_INF_A      ; A: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ae   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkNaN:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either A or B is a NaN                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b0   864a     BSF       0x4a,0x3,0x0             bsf       fFlg,FLG_NaN_AorB   ; Signal NaN for A or B                  C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b2   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           __FpUnPackB                                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b4   3647     RLCF      0x47,0x1,0x0             rlcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b6   3648     RLCF      0x48,0x1,0x0             rlcf      fBexp,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040b8   e302     BNC       0x40be                   bnc       jUnpkB1                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Negative                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ba   8c4a     BSF       0x4a,0x6,0x0             bsf       fFlg,FLG_SIGN_B       ; Signal negative                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040bc   7e4a     BTG       0x4a,0x7,0x0             btg       fFlg,FLG_SIGN_ABW     ; Toggle combined sign                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB1:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040be   e106     BNZ       0x40cc                   bnz       jUnpkBNZ                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Zero exponent => Zero value or subnormal                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c0   884a     BSF       0x4a,0x4,0x0             bsf       fFlg,FLG_ZERO_B       ; Signal Zero                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; for safety force all bytes to zero since subnormals not supported   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c2   6a48     CLRF      0x48,0x0                 clrf      fBexp                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c4   6a47     CLRF      0x47,0x0                 clrf      fB0                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c6   6a46     CLRF      0x46,0x0                 clrf      fB1                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040c8   6a45     CLRF      0x45,0x0                 clrf      fB2                                                          C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ca   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkBNZ:                                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; Test for NaN or infinity                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040cc   2848     INCF      0x48,0x0,0x0             incf      fBexp,W                                                      C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040ce   e003     BZ        0x40d6                   bz        jUnpkB2            ; == 0xFF => either NaN or infinite       C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; set msb of Significand to get 1.f                                   C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d0   80d8     BSF       0xd8,0x0,0x0             bsf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d2   3247     RRCF      0x47,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d4   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           jUnpkB2:                                                                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; either NaN or infinity                                              C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d6   90d8     BCF       0xd8,0x0,0x0             bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040d8   3247     RRCF      0x47,0x1,0x0             rrcf      fB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040da   e1ea     BNZ       0x40b0                   bnz       jUnpkNaN           ; NaN                                     C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     ;; infinity                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040dc   8a4a     BSF       0x4a,0x5,0x0             bsf       fFlg,FLG_INF_B      ; B: is infinity                         C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
0040de   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                     END                                                                    C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\UnpackFP.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
005918   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00591a   ffe6                                                                                                               
00591c   cfda     MOVFF     0xfda,0xfe6                                                                                     
00591e   ffe6                                                                                                               
005920   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005922   ffd9                                                                                                               
005924   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005926   ffda                                                                                                               
005928   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00592a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00592c   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00592e   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
005930   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
005932   0ffb     ADDLW     0xfb                                                                                            
005934   6e00     MOVWF     0x0,0x0                                                                                         
005936   0eff     MOVLW     0xff                                                                                            
005938   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00593a   6e01     MOVWF     0x1,0x0                                                                                         
00593c   c000     MOVFF     0x0,0xfde                                                                                       
00593e   ffde                                                                                                               
005940   6edd     MOVWF     0xdd,0x0                                                                                        
005942   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
005944   ffe6                                                                                                               
005946   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
005948   ffe6                                                                                                               
00594a   0efb     MOVLW     0xfb                                                                                            
00594c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00594e   ffe6                                                                                                               
005950   0efc     MOVLW     0xfc                                                                                            
005952   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005954   ffe6                                                                                                               
005956   0efd     MOVLW     0xfd                                                                                            
005958   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00595a   ffe6                                                                                                               
00595c   c2a6     MOVFF     0x2a6,0xfe6                                                                                     
00595e   ffe6                                                                                                               
005960   c2a7     MOVFF     0x2a7,0xfe6                                                                                     
005962   ffe6                                                                                                               
005964   eca4     CALL      0x1748,0x0                                                                                      
005966   f00b                                                                                                               
005968   6ef5     MOVWF     0xf5,0x0                                                                                        
00596a   0e07     MOVLW     0x7                                                                                             
00596c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00596e   e202     BC        0x5974                                                                                          
005970   6ae1     CLRF      0xe1,0x0                                                                                        
005972   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005974   6ee1     MOVWF     0xe1,0x0                                                                                        
005976   50f5     MOVF      0xf5,0x0,0x0                                                                                    
005978   0e02     MOVLW     0x2                                                                                             
00597a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00597c   ffdb                                                                                                               
00597e   0e03     MOVLW     0x3                                                                                             
005980   cff4     MOVFF     0xff4,0xfdb                                                                                     
005982   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
005984   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
005986   cfdb     MOVFF     0xfdb,0x0                                                                                       
005988   f000                                                                                                               
00598a   0e03     MOVLW     0x3                                                                                             
00598c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00598e   f001                                                                                                               
005990   c000     MOVFF     0x0,0xff3                                                                                       
005992   fff3                                                                                                               
005994   c001     MOVFF     0x1,0xff4                                                                                       
005996   fff4                                                                                                               
005998   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00599a   ffe1                                                                                                               
00599c   cfda     MOVFF     0xfda,0xfe2                                                                                     
00599e   ffe2                                                                                                               
0059a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0059a2   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0059a4   ffda                                                                                                               
0059a6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0059a8   ffd9                                                                                                               
0059aa   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00171c   ecca     CALL      0x2194,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00171e   f010                                                                                                               
002194   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
002196   ffe6                                                                                                               
002198   cfda     MOVFF     0xfda,0xfe6                                                                                     
00219a   ffe6                                                                                                               
00219c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00219e   ffd9                                                                                                               
0021a0   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0021a2   ffda                                                                                                               
0021a4   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001720   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001722   cfdb     MOVFF     0xfdb,0xff3                                                                                     
001724   fff3                                                                                                               
001726   06db     DECF      0xdb,0x1,0x0                                                                                    
001728   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00172a   0900     IORLW     0x0                                                                                             
00172c   e00a     BZ        0x1742                                                                                          
00172e   ec18     CALL      0x2230,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001730   f011                                                                                                               
001732   0efa     MOVLW     0xfa                                                                                            
001734   ec83     CALL      0x2306,0x0                                                                                      
001736   f011                                                                                                               
001738   e1f3     BNZ       0x1720                                                                                          
00173a   1c01     COMF      0x1,0x0,0x0                                                                                     
00173c   e1f1     BNZ       0x1720                                                                                          
00173e   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001740   d001     BRA       0x1744                                                                                          
001742   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001744   eff9     GOTO      0x21f2         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001746   f010                                                                                                               
0021f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021f4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0021f6   ffda                                                                                                               
0021f8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0021fa   ffd9                                                                                                               
0021fc   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001748   ecca     CALL      0x2194,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00174a   f010                                                                                                               
00174c   0e3b     MOVLW     0x3b                                                                                            
00174e   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
001750   e302     BNC       0x1756                                                                                          
001752   68e1     SETF      0xe1,0x0                                                                                        
001754   52e6     MOVF      0xe6,0x1,0x0                                                                                    
001756   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001758   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00175a   6adb     CLRF      0xdb,0x0                                                                                        
00175c   0e02     MOVLW     0x2                                                                                             
00175e   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001760   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001762   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001764   fff6                                                                                                               
001766   0efa     MOVLW     0xfa                                                                                            
001768   cfdb     MOVFF     0xfdb,0xff7                                                                                     
00176a   fff7                                                                                                               
00176c   0efb     MOVLW     0xfb                                                                                            
00176e   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001770   fff8                                                                                                               
001772   0008     TBLRD                                                                                                     
001774   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001776   6edf     MOVWF     0xdf,0x0                                                                                        
001778   50df     MOVF      0xdf,0x0,0x0                                                                                    
00177a   e102     BNZ       0x1780                                                                                          
00177c   ef1f     GOTO      0x203e                                                                                          
00177e   f010                                                                                                               
002038   d977     RCALL     0x2328                                                                                          
00203a   efb9     GOTO      0x1772                                                                                          
00203c   f00b                                                                                                               
002328   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00232a   0ff9     ADDLW     0xf9                                                                                            
00232c   6ee9     MOVWF     0xe9,0x0                                                                                        
00232e   0eff     MOVLW     0xff                                                                                            
002330   ef2d     GOTO      0x225a                                                                                          
002332   f011                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001780   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001782   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001784   e002     BZ        0x178a                                                                                          
001786   ef12     GOTO      0x2024                                                                                          
001788   f010                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00178a   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00178c   6adb     CLRF      0xdb,0x0                                                                                        
00178e   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001790   6adb     CLRF      0xdb,0x0                                                                                        
001792   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001794   6adb     CLRF      0xdb,0x0                                                                                        
001796   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001798   6adb     CLRF      0xdb,0x0                                                                                        
00179a   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00179c   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00179e   ec32     CALL      0x2064,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a0   f010                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a2   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017a4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017a6   e00c     BZ        0x17c0                                                                                          
0017a8   0e2b     MOVLW     0x2b                                                                                            
0017aa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017ac   e009     BZ        0x17c0                                                                                          
0017ae   0e20     MOVLW     0x20                                                                                            
0017b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017b2   e006     BZ        0x17c0                                                                                          
0017b4   0e23     MOVLW     0x23                                                                                            
0017f2   d7d5     BRA       0x179e                                                                                          
0017b6   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017b8   e003     BZ        0x17c0                                                                                          
0017ba   0e30     MOVLW     0x30                                                                                            
0017bc   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017be   e11a     BNZ       0x17f4                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c0   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017c2   0a30     XORLW     0x30                                                                                            
0017c4   e014     BZ        0x17ee                                                                                          
0017c6   0a13     XORLW     0x13                                                                                            
0017c8   e00f     BZ        0x17e8                                                                                          
0017ca   0a03     XORLW     0x3                                                                                             
0017cc   e00a     BZ        0x17e2                                                                                          
0017ce   0a0b     XORLW     0xb                                                                                             
0017d0   e005     BZ        0x17dc                                                                                          
0017d2   0a06     XORLW     0x6                                                                                             
0017d4   e1e4     BNZ       0x179e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017d6   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017d8   80db     BSF       0xdb,0x0,0x0                                                                                    
0017da   d7e1     BRA       0x179e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017dc   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017de   82db     BSF       0xdb,0x1,0x0                                                                                    
0017e0   d7de     BRA       0x179e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e2   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e4   84db     BSF       0xdb,0x2,0x0                                                                                    
0017e6   d7db     BRA       0x179e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017e8   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ea   86db     BSF       0xdb,0x3,0x0                                                                                    
0017ec   d7d8     BRA       0x179e                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017ee   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f0   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f4   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017f6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0017f8   e11b     BNZ       0x1830                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017fa   ec2e     CALL      0x205c,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0017fc   f010                                                                                                               
0017fe   ec7c     CALL      0x20f8,0x0                                                                                      
001800   f010                                                                                                               
0020f8   0e13     MOVLW     0x13                                                                                            
0020fa   cfee     MOVFF     0xfee,0xfdb                                                                                     
0020fc   ffdb                                                                                                               
0020fe   0e14     MOVLW     0x14                                                                                            
002100   cfed     MOVFF     0xfed,0xfdb                                                                                     
002102   ffdb                                                                                                               
001802   e010     BZ        0x1824                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002104   0e13     MOVLW     0x13                                                                                            
002106   cfdb     MOVFF     0xfdb,0x0                                                                                       
002108   f000                                                                                                               
00210a   0e14     MOVLW     0x14                                                                                            
00210c   cfdb     MOVFF     0xfdb,0x1                                                                                       
00210e   f001                                                                                                               
002110   0100     MOVLB     0x0                                                                                             
002112   0e80     MOVLW     0x80                                                                                            
002114   1401     ANDWF     0x1,0x0,0x0                                                                                     
002116   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001804   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001806   80db     BSF       0xdb,0x0,0x0                                                                                    
001808   6841     SETF      0x41,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00180a   6842     SETF      0x42,0x0                                                                                        
00180c   0e13     MOVLW     0x13                                                                                            
00180e   cfdb     MOVFF     0xfdb,0x46                                                                                      
001810   f046                                                                                                               
001812   0e14     MOVLW     0x14                                                                                            
001814   cfdb     MOVFF     0xfdb,0x47                                                                                      
001816   f047                                                                                                               
001818   ec96     CALL      0x3f2c,0x0                                                                                      
00181a   f01f                                                                                                               
00181c   0e04     MOVLW     0x4                                                                                             
00181e   c03f     MOVFF     0x3f,0xfdb                                                                                      
001820   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001822   d003     BRA       0x182a                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001824   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001826   ec65     CALL      0x20ca,0x0                                                                                      
001828   f010                                                                                                               
00182a   ec32     CALL      0x2064,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182c   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00182e   d00b     BRA       0x1846                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001830   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001832   6adb     CLRF      0xdb,0x0                                                                                        
001834   ecd3     CALL      0x21a6,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001836   f010                                                                                                               
001838   e003     BZ        0x1840                                                                                          
00183e   d7fa     BRA       0x1834                                                                                          
0021a6   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0021a8   ffe6                                                                                                               
0021aa   6ae6     CLRF      0xe6,0x0                                                                                        
0021ac   ec89     CALL      0x5d12,0x0                                                                                      
0021ae   f02e                                                                                                               
0021b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0021b4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0021b6   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00183a   ec47     CALL      0x228e,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00183c   f011                                                                                                               
00228e   0e09     MOVLW     0x9                                                                                             
002290   50db     MOVF      0xdb,0x0,0x0                                                                                    
002292   0d0a     MULLW     0xa                                                                                             
002294   50f3     MOVF      0xf3,0x0,0x0                                                                                    
002296   24df     ADDWF     0xdf,0x0,0x0                                                                                    
002298   0fd0     ADDLW     0xd0                                                                                            
00229a   6ee7     MOVWF     0xe7,0x0                                                                                        
00229c   0e09     MOVLW     0x9                                                                                             
00229e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0022a0   ffdb                                                                                                               
0022a2   ef32     GOTO      0x2064                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022a4   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001840   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001842   ec65     CALL      0x20ca,0x0                                                                                      
001844   f010                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001846   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001848   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
00184a   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00184c   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00184e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001850   e11b     BNZ       0x1888                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001852   ec32     CALL      0x2064,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001854   f010                                                                                                               
001856   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001858   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00185a   e10b     BNZ       0x1872                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00185c   ec2e     CALL      0x205c,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00185e   f010                                                                                                               
001860   ec7c     CALL      0x20f8,0x0                                                                                      
001862   f010                                                                                                               
00205c   d929     RCALL     0x22b0                                                                                          
00205e   0e02     MOVLW     0x2                                                                                             
002060   ef1f     GOTO      0x223e                                                                                          
002062   f011                                                                                                               
00223e   5e00     SUBWF     0x0,0x1,0x0                                                                                     
002240   0e00     MOVLW     0x0                                                                                             
002242   5a01     SUBWFB    0x1,0x1,0x0                                                                                     
002244   0ef7     MOVLW     0xf7                                                                                            
002246   c000     MOVFF     0x0,0xfdb                                                                                       
002248   ffdb                                                                                                               
00224a   0ef8     MOVLW     0xf8                                                                                            
00224c   c001     MOVFF     0x1,0xfdb                                                                                       
00224e   ffdb                                                                                                               
002250   c000     MOVFF     0x0,0xfe9                                                                                       
002252   ffe9                                                                                                               
002254   c001     MOVFF     0x1,0xfea                                                                                       
002256   ffea                                                                                                               
002258   0012     RETURN    0x0                                                                                             
0022b0   0ef7     MOVLW     0xf7                                                                                            
0022b2   cfdb     MOVFF     0xfdb,0x0                                                                                       
0022b4   f000                                                                                                               
0022b6   0ef8     MOVLW     0xf8                                                                                            
0022b8   cfdb     MOVFF     0xfdb,0x1                                                                                       
0022ba   f001                                                                                                               
0022bc   0012     RETURN    0x0                                                                                             
001864   e103     BNZ       0x186c                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001866   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001868   ecb7     CALL      0x216e,0x0                                                                                      
00186a   f010                                                                                                               
00216e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002170   d8ce     RCALL     0x230e                                                                                          
00230e   6ee7     MOVWF     0xe7,0x0                                                                                        
002310   0e05     MOVLW     0x5                                                                                             
002312   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002314   ffdb                                                                                                               
002316   0012     RETURN    0x0                                                                                             
002172   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002174   6ef3     MOVWF     0xf3,0x0                                                                                        
002176   0e06     MOVLW     0x6                                                                                             
002178   cff3     MOVFF     0xff3,0xfdb                                                                                     
00217a   ffdb                                                                                                               
00217c   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186c   ec32     CALL      0x2064,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00186e   f010                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001870   d00b     BRA       0x1888                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001872   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001874   6adb     CLRF      0xdb,0x0                                                                                        
001876   ecd3     CALL      0x21a6,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001878   f010                                                                                                               
00187a   e003     BZ        0x1882                                                                                          
001880   d7fa     BRA       0x1876                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00187c   ec47     CALL      0x228e,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00187e   f011                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001882   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001884   ecb7     CALL      0x216e,0x0                                                                                      
001886   f010                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001888   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00188a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00188c   e107     BNZ       0x189c                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00188e   ec32     CALL      0x2064,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001890   f010                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001892   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001894   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001896   e11d     BNZ       0x18d2                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001898   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00189a   d018     BRA       0x18cc                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00189c   0e74     MOVLW     0x74                                                                                            
00189e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018a0   e017     BZ        0x18d0                                                                                          
0018a2   0e7a     MOVLW     0x7a                                                                                            
0018a4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018a6   e014     BZ        0x18d0                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018a8   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018aa   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018ac   e006     BZ        0x18ba                                                                                          
0018ae   0e54     MOVLW     0x54                                                                                            
0018b0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018b2   e003     BZ        0x18ba                                                                                          
0018b4   0e5a     MOVLW     0x5a                                                                                            
0018b6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018b8   e102     BNZ       0x18be                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ba   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018bc   d007     BRA       0x18cc                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018be   0e6c     MOVLW     0x6c                                                                                            
0018c0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018c2   e003     BZ        0x18ca                                                                                          
0018c4   0e6a     MOVLW     0x6a                                                                                            
0018c6   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0018c8   e104     BNZ       0x18d2                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018ca   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018cc   ec0a     CALL      0x2214,0x0                                                                                      
0018ce   f011                                                                                                               
0018d0   dbc9     RCALL     0x2064                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002064   d961     RCALL     0x2328                                                                                          
002066   0008     TBLRD                                                                                                     
002068   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00206a   6edf     MOVWF     0xdf,0x0                                                                                        
00206c   0012     RETURN    0x0                                                                                             
00225a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00225c   6eea     MOVWF     0xea,0x0                                                                                        
00225e   2aef     INCF      0xef,0x1,0x0                                                                                    
002260   cfee     MOVFF     0xfee,0xff6                                                                                     
002262   fff6                                                                                                               
002264   0e00     MOVLW     0x0                                                                                             
002266   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002268   cfee     MOVFF     0xfee,0xff7                                                                                     
00226a   fff7                                                                                                               
00226c   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00226e   cfee     MOVFF     0xfee,0xff8                                                                                     
002270   fff8                                                                                                               
002272   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d2   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0018d4   0a6e     XORLW     0x6e                                                                                            
0018d6   e101     BNZ       0x18da                                                                                          
0018d8   d381     BRA       0x1fdc                                                                                          
0018da   0a1e     XORLW     0x1e                                                                                            
0018dc   e101     BNZ       0x18e0                                                                                          
0018de   d192     BRA       0x1c04                                                                                          
0018e0   0a20     XORLW     0x20                                                                                            
0018e2   e101     BNZ       0x18e6                                                                                          
0018e4   d18f     BRA       0x1c04                                                                                          
0018e6   0a3f     XORLW     0x3f                                                                                            
0018e8   e101     BNZ       0x18ec                                                                                          
0018ea   d149     BRA       0x1b7e                                                                                          
0018ec   0a1a     XORLW     0x1a                                                                                            
0018ee   e101     BNZ       0x18f2                                                                                          
0018f0   d146     BRA       0x1b7e                                                                                          
0018f2   0a0d     XORLW     0xd                                                                                             
0018f4   e101     BNZ       0x18f8                                                                                          
0018f6   d143     BRA       0x1b7e                                                                                          
0018f8   0a20     XORLW     0x20                                                                                            
0018fa   e101     BNZ       0x18fe                                                                                          
0018fc   d140     BRA       0x1b7e                                                                                          
0018fe   0a3a     XORLW     0x3a                                                                                            
001900   e101     BNZ       0x1904                                                                                          
001902   d13d     BRA       0x1b7e                                                                                          
001904   0a20     XORLW     0x20                                                                                            
001906   e101     BNZ       0x190a                                                                                          
001908   d13a     BRA       0x1b7e                                                                                          
00190a   0a26     XORLW     0x26                                                                                            
00190c   e101     BNZ       0x1910                                                                                          
00190e   d135     BRA       0x1b7a                                                                                          
001910   0a0d     XORLW     0xd                                                                                             
001912   e101     BNZ       0x1916                                                                                          
001914   d132     BRA       0x1b7a                                                                                          
001916   0a1a     XORLW     0x1a                                                                                            
001918   e101     BNZ       0x191c                                                                                          
00191a   d0d9     BRA       0x1ace                                                                                          
00191c   0a20     XORLW     0x20                                                                                            
00191e   e04a     BZ        0x19b4                                                                                          
001920   0a30     XORLW     0x30                                                                                            
001922   e01f     BZ        0x1962                                                                                          
001924   0a46     XORLW     0x46                                                                                            
001926   e00e     BZ        0x1944                                                                                          
001928   0a25     XORLW     0x25                                                                                            
00192a   e001     BZ        0x192e                                                                                          
00192c   d385     BRA       0x2038                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00192e   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001930   0ff9     ADDLW     0xf9                                                                                            
001932   6ee9     MOVWF     0xe9,0x0                                                                                        
001934   0eff     MOVLW     0xff                                                                                            
001936   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001938   6eea     MOVWF     0xea,0x0                                                                                        
00193a   0e01     MOVLW     0x1                                                                                             
00193c   5eee     SUBWF     0xee,0x1,0x0                                                                                    
00193e   0e00     MOVLW     0x0                                                                                             
001940   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
001942   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001944   ec18     CALL      0x2230,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001946   f011                                                                                                               
001948   0e25     MOVLW     0x25                                                                                            
00194a   6ee6     MOVWF     0xe6,0x0                                                                                        
00194c   db95     RCALL     0x2078                                                                                          
00194e   e103     BNZ       0x1956                                                                                          
001950   1c01     COMF      0x1,0x0,0x0                                                                                     
001952   e101     BNZ       0x1956                                                                                          
001954   d36b     BRA       0x202c                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001956   ec14     CALL      0x2228,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001958   f011                                                                                                               
00195a   e201     BC        0x195e                                                                                          
00195c   d36d     BRA       0x2038                                                                                          
00195e   2adb     INCF      0xdb,0x1,0x0                                                                                    
001960   d36b     BRA       0x2038                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001962   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001964   6adb     CLRF      0xdb,0x0                                                                                        
001966   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001968   50db     MOVF      0xdb,0x0,0x0                                                                                    
00196a   0801     SUBLW     0x1                                                                                             
00196c   e206     BC        0x197a                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00196e   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001970   04db     DECF      0xdb,0x0,0x0                                                                                    
001972   ecdc     CALL      0x21b8,0x0                                                                                      
001974   f010                                                                                                               
001976   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001978   db8b     RCALL     0x2090                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197a   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00197c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00197e   e009     BZ        0x1992                                                                                          
001980   0e03     MOVLW     0x3                                                                                             
001982   50db     MOVF      0xdb,0x0,0x0                                                                                    
001984   0b01     ANDLW     0x1                                                                                             
001986   e105     BNZ       0x1992                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001988   db72     RCALL     0x206e                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00198a   e001     BZ        0x198e                                                                                          
00198c   d34f     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00198e   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001990   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001992   db64     RCALL     0x205c                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001994   cfef     MOVFF     0xfef,0xfdf                                                                                     
001996   ffdf                                                                                                               
001998   ec8c     CALL      0x2318,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00199a   f011                                                                                                               
00199c   e103     BNZ       0x19a4                                                                                          
00199e   1c01     COMF      0x1,0x0,0x0                                                                                     
0019a0   e101     BNZ       0x19a4                                                                                          
0019a2   d344     BRA       0x202c                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a4   ec14     CALL      0x2228,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019a6   f011                                                                                                               
0019a8   e301     BNC       0x19ac                                                                                          
0019aa   2adb     INCF      0xdb,0x1,0x0                                                                                    
0019ac   db60     RCALL     0x206e                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019ae   e101     BNZ       0x19b2                                                                                          
0019b0   d343     BRA       0x2038                                                                                          
0019b2   d33c     BRA       0x202c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b4   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019b6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0019b8   0802     SUBLW     0x2                                                                                             
0019ba   e10f     BNZ       0x19da                                                                                          
0019bc   ec58     CALL      0x22b0,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019be   f011                                                                                                               
0019c0   0e03     MOVLW     0x3                                                                                             
0019c2   ec1f     CALL      0x223e,0x0                                                                                      
0019c4   f011                                                                                                               
0019c6   0e0e     MOVLW     0xe                                                                                             
0019c8   cfee     MOVFF     0xfee,0xfdb                                                                                     
0019ca   ffdb                                                                                                               
0019cc   0e0f     MOVLW     0xf                                                                                             
0019ce   cfee     MOVFF     0xfee,0xfdb                                                                                     
0019d0   ffdb                                                                                                               
0019d2   0e10     MOVLW     0x10                                                                                            
0019d4   cfee     MOVFF     0xfee,0xfdb                                                                                     
0019d6   ffdb                                                                                                               
0019d8   d020     BRA       0x1a1a                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019da   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0019dc   cfdb     MOVFF     0xfdb,0x3                                                                                       
0019de   f003                                                                                                               
0019e0   0ef8     MOVLW     0xf8                                                                                            
0019e2   cfdb     MOVFF     0xfdb,0x4                                                                                       
0019e4   f004                                                                                                               
0019e6   0e02     MOVLW     0x2                                                                                             
0019e8   5e03     SUBWF     0x3,0x1,0x0                                                                                     
0019ea   0e00     MOVLW     0x0                                                                                             
0019ec   5a04     SUBWFB    0x4,0x1,0x0                                                                                     
0019ee   0ef7     MOVLW     0xf7                                                                                            
0019f0   c003     MOVFF     0x3,0xfdb                                                                                       
0019f2   ffdb                                                                                                               
0019f4   0ef8     MOVLW     0xf8                                                                                            
0019f6   c004     MOVFF     0x4,0xfdb                                                                                       
0019f8   ffdb                                                                                                               
0019fa   c003     MOVFF     0x3,0xfe9                                                                                       
0019fc   ffe9                                                                                                               
0019fe   c004     MOVFF     0x4,0xfea                                                                                       
001a00   ffea                                                                                                               
001a02   ec0f     CALL      0x221e,0x0                                                                                      
001a04   f011                                                                                                               
001a06   6a02     CLRF      0x2,0x0                                                                                         
001a08   0e0e     MOVLW     0xe                                                                                             
001a0a   c000     MOVFF     0x0,0xfdb                                                                                       
001a0c   ffdb                                                                                                               
001a0e   0e0f     MOVLW     0xf                                                                                             
001a10   c001     MOVFF     0x1,0xfdb                                                                                       
001a12   ffdb                                                                                                               
001a14   0e10     MOVLW     0x10                                                                                            
001a16   c002     MOVFF     0x2,0xfdb                                                                                       
001a18   ffdb                                                                                                               
001a1a   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a1c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a1e   ffe6                                                                                                               
001a20   0e0f     MOVLW     0xf                                                                                             
001a22   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a24   ffe6                                                                                                               
001a26   0e10     MOVLW     0x10                                                                                            
001a28   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001a2a   ffe6                                                                                                               
001a2c   ec92     CALL      0x5b24,0x0                                                                                      
001a2e   f02d                                                                                                               
001a30   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a32   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a34   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001a36   0e13     MOVLW     0x13                                                                                            
001a38   c040     MOVFF     0x40,0xfdb                                                                                      
001a3a   ffdb                                                                                                               
001a3c   0e14     MOVLW     0x14                                                                                            
001a3e   c041     MOVFF     0x41,0xfdb                                                                                      
001a40   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a42   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a44   50db     MOVF      0xdb,0x0,0x0                                                                                    
001a46   e005     BZ        0x1a52                                                                                          
001a48   0e13     MOVLW     0x13                                                                                            
001a4a   ec53     CALL      0x22a6,0x0                                                                                      
001a4c   f011                                                                                                               
001a4e   e201     BC        0x1a52                                                                                          
001a50   db6a     RCALL     0x2126                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002126   0e05     MOVLW     0x5                                                                                             
002128   50db     MOVF      0xdb,0x0,0x0                                                                                    
00212a   6ee6     MOVWF     0xe6,0x0                                                                                        
00212c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00212e   0f13     ADDLW     0x13                                                                                            
002130   d901     RCALL     0x2334                                                                                          
002132   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002134   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002136   6eee     MOVWF     0xee,0x0                                                                                        
002138   6aed     CLRF      0xed,0x0                                                                                        
00213a   0012     RETURN    0x0                                                                                             
001a52   ec77     CALL      0x22ee,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a54   f011                                                                                                               
001a56   e202     BC        0x1a5c                                                                                          
0022ee   0e13     MOVLW     0x13                                                                                            
0022f0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022f2   6ef3     MOVWF     0xf3,0x0                                                                                        
0022f4   0e04     MOVLW     0x4                                                                                             
0022f6   ef60     GOTO      0x20c0                                                                                          
0022f8   f010                                                                                                               
001a58   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a5a   db37     RCALL     0x20ca                                                                                          
001a5c   ec3a     CALL      0x2274,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a5e   f011                                                                                                               
002274   0e04     MOVLW     0x4                                                                                             
002276   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002278   ffe6                                                                                                               
00227a   0e13     MOVLW     0x13                                                                                            
00227c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00227e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002280   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
002282   df9a     RCALL     0x21b8                                                                                          
002284   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002286   df04     RCALL     0x2090                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a60   e006     BZ        0x1a6e                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a62   0e04     MOVLW     0x4                                                                                             
001a64   ec53     CALL      0x22a6,0x0                                                                                      
001a66   f011                                                                                                               
001a68   e202     BC        0x1a6e                                                                                          
002288   0e06     MOVLW     0x6                                                                                             
00228a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00228c   0012     RETURN    0x0                                                                                             
001a6a   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6c   db2e     RCALL     0x20ca                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a6e   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a70   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001a72   d005     BRA       0x1a7e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a74   dafc     RCALL     0x206e                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a76   e001     BZ        0x1a7a                                                                                          
001a78   d2d9     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7a   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7c   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a7e   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a80   6adb     CLRF      0xdb,0x0                                                                                        
001a82   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001a84   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001a86   fff6                                                                                                               
001a88   0e0f     MOVLW     0xf                                                                                             
001a8a   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001a8c   fff7                                                                                                               
001a8e   0e10     MOVLW     0x10                                                                                            
001a90   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001a92   fff8                                                                                                               
001a94   0008     TBLRD                                                                                                     
001a96   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001a98   6edf     MOVWF     0xdf,0x0                                                                                        
001a9a   50df     MOVF      0xdf,0x0,0x0                                                                                    
001a9c   e014     BZ        0x1ac6                                                                                          
001a9e   ec7d     CALL      0x22fa,0x0                                                                                      
001aa0   f011                                                                                                               
001aa2   e211     BC        0x1ac6                                                                                          
001aba   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001abc   0f0e     ADDLW     0xe                                                                                             
001abe   6ee9     MOVWF     0xe9,0x0                                                                                        
001ac0   0e00     MOVLW     0x0                                                                                             
001ac2   dbcb     RCALL     0x225a                                                                                          
001ac4   d7e7     BRA       0x1a94                                                                                          
0022fa   0e04     MOVLW     0x4                                                                                             
0022fc   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022fe   6ef3     MOVWF     0xf3,0x0                                                                                        
002300   0e09     MOVLW     0x9                                                                                             
002302   ef60     GOTO      0x20c0                                                                                          
002304   f010                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa4   ec8c     CALL      0x2318,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001aa6   f011                                                                                                               
001aa8   e103     BNZ       0x1ab0                                                                                          
001aaa   1c01     COMF      0x1,0x0,0x0                                                                                     
001aac   e101     BNZ       0x1ab0                                                                                          
001aae   d2be     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab0   dbbb     RCALL     0x2228                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab2   e301     BNC       0x1ab6                                                                                          
001ab4   2adb     INCF      0xdb,0x1,0x0                                                                                    
001ab6   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ab8   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac6   dad3     RCALL     0x206e                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ac8   e101     BNZ       0x1acc                                                                                          
001aca   d2b6     BRA       0x2038                                                                                          
001acc   d2af     BRA       0x202c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ace   dac6     RCALL     0x205c                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ad0   0e11     MOVLW     0x11                                                                                            
001ad2   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ad4   ffdb                                                                                                               
001ad6   0e12     MOVLW     0x12                                                                                            
001ad8   cfed     MOVFF     0xfed,0xfdb                                                                                     
001ada   ffdb                                                                                                               
001adc   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ade   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ae0   ffe6                                                                                                               
001ae2   0e12     MOVLW     0x12                                                                                            
001ae4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ae6   ffe6                                                                                                               
001ae8   ec84     CALL      0x5b08,0x0                                                                                      
001aea   f02d                                                                                                               
001aec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001aee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001af0   0e13     MOVLW     0x13                                                                                            
001af2   cff3     MOVFF     0xff3,0xfdb                                                                                     
001af4   ffdb                                                                                                               
001af6   0e14     MOVLW     0x14                                                                                            
001af8   cff4     MOVFF     0xff4,0xfdb                                                                                     
001afa   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001afc   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001afe   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b00   e004     BZ        0x1b0a                                                                                          
001b02   0e13     MOVLW     0x13                                                                                            
001b04   dbd0     RCALL     0x22a6                                                                                          
001b06   e201     BC        0x1b0a                                                                                          
001b08   db0e     RCALL     0x2126                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b0a   ec77     CALL      0x22ee,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b0c   f011                                                                                                               
001b0e   e202     BC        0x1b14                                                                                          
001b10   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b12   dadb     RCALL     0x20ca                                                                                          
001b14   dbaf     RCALL     0x2274                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021b8   6ee7     MOVWF     0xe7,0x0                                                                                        
0021ba   0e08     MOVLW     0x8                                                                                             
0021bc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0021be   ffdb                                                                                                               
0021c0   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b16   e005     BZ        0x1b22                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b18   0e04     MOVLW     0x4                                                                                             
001b1a   dbc5     RCALL     0x22a6                                                                                          
001b1c   e202     BC        0x1b22                                                                                          
0022a6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0022a8   6ef3     MOVWF     0xf3,0x0                                                                                        
0022aa   0e05     MOVLW     0x5                                                                                             
0022ac   ef60     GOTO      0x20c0                                                                                          
0022ae   f010                                                                                                               
001b1e   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b20   dad4     RCALL     0x20ca                                                                                          
0020ca   50db     MOVF      0xdb,0x0,0x0                                                                                    
0020cc   6ee7     MOVWF     0xe7,0x0                                                                                        
0020ce   0e04     MOVLW     0x4                                                                                             
0020d0   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0020d2   ffdb                                                                                                               
0020d4   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b22   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b24   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001b26   d005     BRA       0x1b32                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b28   daa2     RCALL     0x206e                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b2a   e001     BZ        0x1b2e                                                                                          
001b2c   d27f     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b2e   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b30   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b32   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b34   6adb     CLRF      0xdb,0x0                                                                                        
001b36   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b38   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001b3a   ffe9                                                                                                               
001b3c   0e12     MOVLW     0x12                                                                                            
001b3e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001b40   ffea                                                                                                               
001b42   cfef     MOVFF     0xfef,0xfdf                                                                                     
001b44   ffdf                                                                                                               
001b46   50df     MOVF      0xdf,0x0,0x0                                                                                    
001b48   e014     BZ        0x1b72                                                                                          
001b4a   dbd7     RCALL     0x22fa                                                                                          
001b4c   e212     BC        0x1b72                                                                                          
001b62   0e11     MOVLW     0x11                                                                                            
001b64   2adb     INCF      0xdb,0x1,0x0                                                                                    
001b66   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001b68   ffe9                                                                                                               
001b6a   0e12     MOVLW     0x12                                                                                            
001b6c   e3e8     BNC       0x1b3e                                                                                          
001b6e   2adb     INCF      0xdb,0x1,0x0                                                                                    
001b70   d7e6     BRA       0x1b3e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b4e   dbe4     RCALL     0x2318                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b50   e103     BNZ       0x1b58                                                                                          
001b52   1c01     COMF      0x1,0x0,0x0                                                                                     
001b54   e101     BNZ       0x1b58                                                                                          
001b56   d26a     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b58   db67     RCALL     0x2228                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b5a   e301     BNC       0x1b5e                                                                                          
001b5c   2adb     INCF      0xdb,0x1,0x0                                                                                    
001b5e   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b60   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b72   da7d     RCALL     0x206e                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b74   e101     BNZ       0x1b78                                                                                          
001b76   d260     BRA       0x2038                                                                                          
001b78   d259     BRA       0x202c                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7a   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7c   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b7e   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b80   04db     DECF      0xdb,0x0,0x0                                                                                    
001b82   e110     BNZ       0x1ba4                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b84   db95     RCALL     0x22b0                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001b86   0e04     MOVLW     0x4                                                                                             
001b88   db5a     RCALL     0x223e                                                                                          
001b8a   0e0a     MOVLW     0xa                                                                                             
001b8c   cfee     MOVFF     0xfee,0xfdb                                                                                     
001b8e   ffdb                                                                                                               
001b90   0e0b     MOVLW     0xb                                                                                             
001b92   cfee     MOVFF     0xfee,0xfdb                                                                                     
001b94   ffdb                                                                                                               
001b96   0e0c     MOVLW     0xc                                                                                             
001b98   cfee     MOVFF     0xfee,0xfdb                                                                                     
001b9a   ffdb                                                                                                               
001b9c   0e0d     MOVLW     0xd                                                                                             
001b9e   cfee     MOVFF     0xfee,0xfdb                                                                                     
001ba0   ffdb                                                                                                               
001ba2   d06c     BRA       0x1c7c                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ba4   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ba6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ba8   0803     SUBLW     0x3                                                                                             
001baa   e12c     BNZ       0x1c04                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bac   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bae   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001bb0   d00d     BRA       0x1bcc                                                                                          
001bb2   dab2     RCALL     0x2118                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bb4   0e02     MOVLW     0x2                                                                                             
001bb6   da76     RCALL     0x20a4                                                                                          
001bb8   cfef     MOVFF     0xfef,0x0                                                                                       
001bba   f000                                                                                                               
001bbc   6a01     CLRF      0x1,0x0                                                                                         
001bbe   6a02     CLRF      0x2,0x0                                                                                         
001bc0   6a03     CLRF      0x3,0x0                                                                                         
001bc2   ae00     BTFSS     0x0,0x7,0x0                                                                                     
001bc4   d039     BRA       0x1c38                                                                                          
001bc6   6801     SETF      0x1,0x0                                                                                         
001bc8   6802     SETF      0x2,0x0                                                                                         
001bca   d035     BRA       0x1c36                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bcc   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001bce   cfdb     MOVFF     0xfdb,0x1                                                                                       
001bd0   f001                                                                                                               
001bd2   0ef8     MOVLW     0xf8                                                                                            
001bd4   cfdb     MOVFF     0xfdb,0x2                                                                                       
001bd6   f002                                                                                                               
001bd8   0e02     MOVLW     0x2                                                                                             
001bda   5e01     SUBWF     0x1,0x1,0x0                                                                                     
001bdc   0e00     MOVLW     0x0                                                                                             
001bde   5a02     SUBWFB    0x2,0x1,0x0                                                                                     
001be0   0ef7     MOVLW     0xf7                                                                                            
001be2   c001     MOVFF     0x1,0xfdb                                                                                       
001be4   ffdb                                                                                                               
001be6   0ef8     MOVLW     0xf8                                                                                            
001be8   c002     MOVFF     0x2,0xfdb                                                                                       
001bea   ffdb                                                                                                               
001bec   c001     MOVFF     0x1,0xfe9                                                                                       
001bee   ffe9                                                                                                               
001bf0   c002     MOVFF     0x2,0xfea                                                                                       
001bf2   ffea                                                                                                               
001bf4   cfef     MOVFF     0xfef,0x0                                                                                       
001bf6   f000                                                                                                               
001bf8   0e0a     MOVLW     0xa                                                                                             
001bfa   c000     MOVFF     0x0,0xfdb                                                                                       
001bfc   ffdb                                                                                                               
001bfe   0e0b     MOVLW     0xb                                                                                             
001c00   6adb     CLRF      0xdb,0x0                                                                                        
001c02   d038     BRA       0x1c74                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c04   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c06   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c08   0802     SUBLW     0x2                                                                                             
001c0a   e109     BNZ       0x1c1e                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0c   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c0e   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001c10   d004     BRA       0x1c1a                                                                                          
001c12   db59     RCALL     0x22c6                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c14   ae02     BTFSS     0x2,0x7,0x0                                                                                     
001c16   d010     BRA       0x1c38                                                                                          
0021c2   cfee     MOVFF     0xfee,0x0                                                                                       
0021c4   f000                                                                                                               
0021c6   cfee     MOVFF     0xfee,0x1                                                                                       
0021c8   f001                                                                                                               
0021ca   cfef     MOVFF     0xfef,0x2                                                                                       
0021cc   f002                                                                                                               
0021ce   6a03     CLRF      0x3,0x0                                                                                         
0021d0   0012     RETURN    0x0                                                                                             
0022c6   df28     RCALL     0x2118                                                                                          
0022c8   0e03     MOVLW     0x3                                                                                             
0022ca   deec     RCALL     0x20a4                                                                                          
0022cc   efe1     GOTO      0x21c2                                                                                          
0022ce   f010                                                                                                               
001c18   d00e     BRA       0x1c36                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c1a   db55     RCALL     0x22c6                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c1c   d00d     BRA       0x1c38                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c1e   0e03     MOVLW     0x3                                                                                             
001c20   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
001c22   d012     BRA       0x1c48                                                                                          
001c24   da79     RCALL     0x2118                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c26   0e02     MOVLW     0x2                                                                                             
001c28   da3d     RCALL     0x20a4                                                                                          
001c2a   daf9     RCALL     0x221e                                                                                          
001c2c   6a02     CLRF      0x2,0x0                                                                                         
001c2e   6a03     CLRF      0x3,0x0                                                                                         
001c30   ae01     BTFSS     0x1,0x7,0x0                                                                                     
001c32   d002     BRA       0x1c38                                                                                          
001c34   6802     SETF      0x2,0x0                                                                                         
001c36   6803     SETF      0x3,0x0                                                                                         
001c38   dae2     RCALL     0x21fe                                                                                          
001c3a   0e0c     MOVLW     0xc                                                                                             
001c3c   c002     MOVFF     0x2,0xfdb                                                                                       
001c3e   ffdb                                                                                                               
001c40   0e0d     MOVLW     0xd                                                                                             
001c42   c003     MOVFF     0x3,0xfdb                                                                                       
001c44   ffdb                                                                                                               
0020a4   5e04     SUBWF     0x4,0x1,0x0                                                                                     
0020a6   0e00     MOVLW     0x0                                                                                             
0020a8   5a05     SUBWFB    0x5,0x1,0x0                                                                                     
0020aa   0ef7     MOVLW     0xf7                                                                                            
0020ac   c004     MOVFF     0x4,0xfdb                                                                                       
0020ae   ffdb                                                                                                               
0020b0   0ef8     MOVLW     0xf8                                                                                            
0020b2   c005     MOVFF     0x5,0xfdb                                                                                       
0020b4   ffdb                                                                                                               
0020b6   c004     MOVFF     0x4,0xfe9                                                                                       
0020b8   ffe9                                                                                                               
0020ba   c005     MOVFF     0x5,0xfea                                                                                       
0020bc   ffea                                                                                                               
0020be   0012     RETURN    0x0                                                                                             
002118   0ef7     MOVLW     0xf7                                                                                            
00211a   cfdb     MOVFF     0xfdb,0x4                                                                                       
00211c   f004                                                                                                               
00211e   0ef8     MOVLW     0xf8                                                                                            
002120   cfdb     MOVFF     0xfdb,0x5                                                                                       
002122   f005                                                                                                               
002124   0012     RETURN    0x0                                                                                             
0021fe   0e0a     MOVLW     0xa                                                                                             
002200   c000     MOVFF     0x0,0xfdb                                                                                       
002202   ffdb                                                                                                               
002204   0e0b     MOVLW     0xb                                                                                             
002206   c001     MOVFF     0x1,0xfdb                                                                                       
002208   ffdb                                                                                                               
00220a   0012     RETURN    0x0                                                                                             
00221e   cfee     MOVFF     0xfee,0x0                                                                                       
002220   f000                                                                                                               
002222   cfef     MOVFF     0xfef,0x1                                                                                       
002224   f001                                                                                                               
002226   0012     RETURN    0x0                                                                                             
001c46   d01a     BRA       0x1c7c                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c48   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c4a   cfdb     MOVFF     0xfdb,0x2                                                                                       
001c4c   f002                                                                                                               
001c4e   0ef8     MOVLW     0xf8                                                                                            
001c50   cfdb     MOVFF     0xfdb,0x3                                                                                       
001c52   f003                                                                                                               
001c54   0e02     MOVLW     0x2                                                                                             
001c56   5e02     SUBWF     0x2,0x1,0x0                                                                                     
001c58   0e00     MOVLW     0x0                                                                                             
001c5a   5a03     SUBWFB    0x3,0x1,0x0                                                                                     
001c5c   0ef7     MOVLW     0xf7                                                                                            
001c5e   c002     MOVFF     0x2,0xfdb                                                                                       
001c60   ffdb                                                                                                               
001c62   0ef8     MOVLW     0xf8                                                                                            
001c64   c003     MOVFF     0x3,0xfdb                                                                                       
001c66   ffdb                                                                                                               
001c68   c002     MOVFF     0x2,0xfe9                                                                                       
001c6a   ffe9                                                                                                               
001c6c   c003     MOVFF     0x3,0xfea                                                                                       
001c6e   ffea                                                                                                               
001c70   dad6     RCALL     0x221e                                                                                          
001c72   dac5     RCALL     0x21fe                                                                                          
001c74   0e0c     MOVLW     0xc                                                                                             
001c76   6adb     CLRF      0xdb,0x0                                                                                        
001c78   0e0d     MOVLW     0xd                                                                                             
001c7a   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c7c   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c7e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001c80   e105     BNZ       0x1c8c                                                                                          
001c82   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c84   6ef3     MOVWF     0xf3,0x0                                                                                        
001c86   0e05     MOVLW     0x5                                                                                             
001c88   cff3     MOVFF     0xff3,0xfdb                                                                                     
001c8a   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c8c   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c8e   6adb     CLRF      0xdb,0x0                                                                                        
001c90   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c92   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c94   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001c96   0f37     ADDLW     0x37                                                                                            
001c98   6e00     MOVWF     0x0,0x0                                                                                         
001c9a   0e00     MOVLW     0x0                                                                                             
001c9c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001c9e   6e01     MOVWF     0x1,0x0                                                                                         
001ca0   0e39     MOVLW     0x39                                                                                            
001ca2   c000     MOVFF     0x0,0xfdb                                                                                       
001ca4   ffdb                                                                                                               
001ca6   0e3a     MOVLW     0x3a                                                                                            
001ca8   c001     MOVFF     0x1,0xfdb                                                                                       
001caa   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cac   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cae   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb0   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb2   6adb     CLRF      0xdb,0x0                                                                                        
001cb4   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb6   daae     RCALL     0x2214                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cb8   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cba   0a78     XORLW     0x78                                                                                            
001cbc   e012     BZ        0x1ce2                                                                                          
001cbe   0a20     XORLW     0x20                                                                                            
001cc0   e010     BZ        0x1ce2                                                                                          
001cc2   0a28     XORLW     0x28                                                                                            
001cc4   e00c     BZ        0x1cde                                                                                          
001cc6   0a20     XORLW     0x20                                                                                            
001cc8   e00a     BZ        0x1cde                                                                                          
001cca   0a3f     XORLW     0x3f                                                                                            
001ccc   e006     BZ        0x1cda                                                                                          
001cce   0a0d     XORLW     0xd                                                                                             
001cd0   e002     BZ        0x1cd6                                                                                          
001cd2   0a20     XORLW     0x20                                                                                            
001cd4   e108     BNZ       0x1ce6                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cd6   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cd8   d005     BRA       0x1ce4                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cda   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cdc   d003     BRA       0x1ce4                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cde   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce0   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce2   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce4   da97     RCALL     0x2214                                                                                          
002214   6ef3     MOVWF     0xf3,0x0                                                                                        
002216   0e07     MOVLW     0x7                                                                                             
002218   cff3     MOVFF     0xff3,0xfdb                                                                                     
00221a   ffdb                                                                                                               
00221c   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce6   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ce8   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
001cea   d002     BRA       0x1cf0                                                                                          
001cec   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cee   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf0   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001cf2   0b80     ANDLW     0x80                                                                                            
001cf4   e026     BZ        0x1d42                                                                                          
001cf6   da8a     RCALL     0x220c                                                                                          
001cf8   0e03     MOVLW     0x3                                                                                             
001cfa   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001cfc   0a00     XORLW     0x0                                                                                             
001cfe   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001d00   d002     BRA       0x1d06                                                                                          
001d02   90d8     BCF       0xd8,0x0,0x0                                                                                    
001d04   d008     BRA       0x1d16                                                                                          
001d06   0e00     MOVLW     0x0                                                                                             
001d08   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001d0a   0e00     MOVLW     0x0                                                                                             
001d0c   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001d0e   0e00     MOVLW     0x0                                                                                             
001d10   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001d12   0e00     MOVLW     0x0                                                                                             
001d14   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001d16   e215     BC        0x1d42                                                                                          
00220c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00220e   0f0a     ADDLW     0xa                                                                                             
002210   ef9a     GOTO      0x2334                                                                                          
002212   f011                                                                                                               
002334   6ee9     MOVWF     0xe9,0x0                                                                                        
002336   0e00     MOVLW     0x0                                                                                             
002338   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00233a   6eea     MOVWF     0xea,0x0                                                                                        
00233c   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d18   da11     RCALL     0x213c                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d1a   6844     SETF      0x44,0x0                                                                                        
001d1c   6845     SETF      0x45,0x0                                                                                        
001d1e   6846     SETF      0x46,0x0                                                                                        
001d20   6847     SETF      0x47,0x0                                                                                        
001d22   ec18     CALL      0x5a30,0x0                                                                                      
001d24   f02d                                                                                                               
001d26   0e0a     MOVLW     0xa                                                                                             
001d28   c03b     MOVFF     0x3b,0xfdb                                                                                      
001d2a   ffdb                                                                                                               
001d2c   0e0b     MOVLW     0xb                                                                                             
001d2e   c03c     MOVFF     0x3c,0xfdb                                                                                      
001d30   ffdb                                                                                                               
001d32   0e0c     MOVLW     0xc                                                                                             
001d34   c03d     MOVFF     0x3d,0xfdb                                                                                      
001d36   ffdb                                                                                                               
001d38   0e0d     MOVLW     0xd                                                                                             
001d3a   c03e     MOVFF     0x3e,0xfdb                                                                                      
001d3c   ffdb                                                                                                               
00213c   0e0a     MOVLW     0xa                                                                                             
00213e   cfdb     MOVFF     0xfdb,0x3f                                                                                      
002140   f03f                                                                                                               
002142   0e0b     MOVLW     0xb                                                                                             
002144   cfdb     MOVFF     0xfdb,0x40                                                                                      
002146   f040                                                                                                               
002148   0e0c     MOVLW     0xc                                                                                             
00214a   cfdb     MOVFF     0xfdb,0x41                                                                                      
00214c   f041                                                                                                               
00214e   0e0d     MOVLW     0xd                                                                                             
002150   cfdb     MOVFF     0xfdb,0x42                                                                                      
002152   f042                                                                                                               
002154   0012     RETURN    0x0                                                                                             
001d3e   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d40   d008     BRA       0x1d52                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d42   0e03     MOVLW     0x3                                                                                             
001d44   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
001d46   d002     BRA       0x1d4c                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d48   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d4a   d003     BRA       0x1d52                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d4c   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
001d4e   d008     BRA       0x1d60                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d50   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d52   6ef3     MOVWF     0xf3,0x0                                                                                        
001d54   0e17     MOVLW     0x17                                                                                            
001d56   cff3     MOVFF     0xff3,0xfdb                                                                                     
001d58   ffdb                                                                                                               
001d5a   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d5c   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d5e   d002     BRA       0x1d64                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d60   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d62   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d64   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d66   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d68   e103     BNZ       0x1d70                                                                                          
001d6a   d9b5     RCALL     0x20d6                                                                                          
001d6c   e101     BNZ       0x1d70                                                                                          
001d6e   d089     BRA       0x1e82                                                                                          
0020d6   0e0a     MOVLW     0xa                                                                                             
0020d8   cfdb     MOVFF     0xfdb,0x0                                                                                       
0020da   f000                                                                                                               
0020dc   0e0b     MOVLW     0xb                                                                                             
0020de   cfdb     MOVFF     0xfdb,0x1                                                                                       
0020e0   f001                                                                                                               
0020e2   0e0c     MOVLW     0xc                                                                                             
0020e4   cfdb     MOVFF     0xfdb,0x2                                                                                       
0020e6   f002                                                                                                               
0020e8   0e0d     MOVLW     0xd                                                                                             
0020ea   cfdb     MOVFF     0xfdb,0x3                                                                                       
0020ec   f003                                                                                                               
0020ee   5000     MOVF      0x0,0x0,0x0                                                                                     
0020f0   1001     IORWF     0x1,0x0,0x0                                                                                     
0020f2   1002     IORWF     0x2,0x0,0x0                                                                                     
0020f4   1003     IORWF     0x3,0x0,0x0                                                                                     
0020f6   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d70   0ea8     MOVLW     0xa8                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d72   6e00     MOVWF     0x0,0x0                                                                                         
001d74   0e5d     MOVLW     0x5d                                                                                            
001d76   6e01     MOVWF     0x1,0x0                                                                                         
001d78   0e00     MOVLW     0x0                                                                                             
001d7a   6e02     MOVWF     0x2,0x0                                                                                         
001d7c   0e07     MOVLW     0x7                                                                                             
001d7e   cfdb     MOVFF     0xfdb,0x3                                                                                       
001d80   f003                                                                                                               
001d82   6a04     CLRF      0x4,0x0                                                                                         
001d84   6a05     CLRF      0x5,0x0                                                                                         
001d86   6a06     CLRF      0x6,0x0                                                                                         
001d88   c003     MOVFF     0x3,0x44                                                                                        
001d8a   f044                                                                                                               
001d8c   c004     MOVFF     0x4,0x45                                                                                        
001d8e   f045                                                                                                               
001d90   c005     MOVFF     0x5,0x46                                                                                        
001d92   f046                                                                                                               
001d94   c006     MOVFF     0x6,0x47                                                                                        
001d96   f047                                                                                                               
001d98   d9d1     RCALL     0x213c                                                                                          
001d9a   ec1c     CALL      0x5c38,0x0                                                                                      
001d9c   f02e                                                                                                               
001d9e   5000     MOVF      0x0,0x0,0x0                                                                                     
001da0   243b     ADDWF     0x3b,0x0,0x0                                                                                    
001da2   6ef3     MOVWF     0xf3,0x0                                                                                        
001da4   5001     MOVF      0x1,0x0,0x0                                                                                     
001da6   203c     ADDWFC    0x3c,0x0,0x0                                                                                    
001da8   6ef4     MOVWF     0xf4,0x0                                                                                        
001daa   5002     MOVF      0x2,0x0,0x0                                                                                     
001dac   203d     ADDWFC    0x3d,0x0,0x0                                                                                    
001dae   6ef8     MOVWF     0xf8,0x0                                                                                        
001db0   cff4     MOVFF     0xff4,0xff7                                                                                     
001db2   fff7                                                                                                               
001db4   cff3     MOVFF     0xff3,0xff6                                                                                     
001db6   fff6                                                                                                               
001db8   0008     TBLRD                                                                                                     
001dba   0e09     MOVLW     0x9                                                                                             
001dbc   cff5     MOVFF     0xff5,0xfdb                                                                                     
001dbe   ffdb                                                                                                               
001dc0   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dc4   e10f     BNZ       0x1de4                                                                                          
001dc6   0e61     MOVLW     0x61                                                                                            
001dc8   6ef3     MOVWF     0xf3,0x0                                                                                        
001dca   0e09     MOVLW     0x9                                                                                             
001dcc   d979     RCALL     0x20c0                                                                                          
001dce   e30a     BNC       0x1de4                                                                                          
0020c0   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0020c2   fff4                                                                                                               
0020c4   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0020c6   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0020c8   0012     RETURN    0x0                                                                                             
001dd0   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd2   6e00     MOVWF     0x0,0x0                                                                                         
001dd4   0e09     MOVLW     0x9                                                                                             
001dd6   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001dd8   ffe7                                                                                                               
001dda   5000     MOVF      0x0,0x0,0x0                                                                                     
001ddc   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001dde   0e09     MOVLW     0x9                                                                                             
001de0   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001de2   ffdb                                                                                                               
001de4   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de6   cfdb     MOVFF     0xfdb,0x0                                                                                       
001de8   f000                                                                                                               
001dea   6a01     CLRF      0x1,0x0                                                                                         
001dec   6a02     CLRF      0x2,0x0                                                                                         
001dee   6a03     CLRF      0x3,0x0                                                                                         
001df0   da0d     RCALL     0x220c                                                                                          
001df2   c000     MOVFF     0x0,0x44                                                                                        
001df4   f044                                                                                                               
001df6   c001     MOVFF     0x1,0x45                                                                                        
001df8   f045                                                                                                               
001dfa   c002     MOVFF     0x2,0x46                                                                                        
001dfc   f046                                                                                                               
001dfe   c003     MOVFF     0x3,0x47                                                                                        
001e00   f047                                                                                                               
001e02   cfee     MOVFF     0xfee,0x3f                                                                                      
001e04   f03f                                                                                                               
001e06   cfee     MOVFF     0xfee,0x40                                                                                      
001e08   f040                                                                                                               
001e0a   cfee     MOVFF     0xfee,0x41                                                                                      
001e0c   f041                                                                                                               
001e0e   cfef     MOVFF     0xfef,0x42                                                                                      
001e10   f042                                                                                                               
001e12   ec1c     CALL      0x5c38,0x0                                                                                      
001e14   f02e                                                                                                               
001e16   c042     MOVFF     0x42,0xfed                                                                                      
001e18   ffed                                                                                                               
001e1a   c041     MOVFF     0x41,0xfed                                                                                      
001e1c   ffed                                                                                                               
001e1e   c040     MOVFF     0x40,0xfed                                                                                      
001e20   ffed                                                                                                               
001e22   c03f     MOVFF     0x3f,0xfef                                                                                      
001e24   ffef                                                                                                               
001e26   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e28   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001e2a   ffe9                                                                                                               
001e2c   06db     DECF      0xdb,0x1,0x0                                                                                    
001e2e   0e3a     MOVLW     0x3a                                                                                            
001e30   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001e32   ffea                                                                                                               
001e34   e201     BC        0x1e38                                                                                          
001e36   06db     DECF      0xdb,0x1,0x0                                                                                    
001e38   0e09     MOVLW     0x9                                                                                             
001e3a   cfdb     MOVFF     0xfdb,0xfef                                                                                     
001e3c   ffef                                                                                                               
001e3e   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e40   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e42   d949     RCALL     0x20d6                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e44   e195     BNZ       0x1d70                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e46   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e48   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
001e4a   d01d     BRA       0x1e86                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4c   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4e   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e50   e106     BNZ       0x1e5e                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e52   d9bf     RCALL     0x21d2                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e54   e318     BNC       0x1e86                                                                                          
0021d2   0e05     MOVLW     0x5                                                                                             
0021d4   cfdb     MOVFF     0xfdb,0x0                                                                                       
0021d6   f000                                                                                                               
0021d8   0e15     MOVLW     0x15                                                                                            
0021da   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021dc   80d8     BSF       0xd8,0x0,0x0                                                                                    
0021de   5400     SUBFWB    0x0,0x0,0x0                                                                                     
0021e0   0012     RETURN    0x0                                                                                             
001e56   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e58   28db     INCF      0xdb,0x0,0x0                                                                                    
001e5a   da59     RCALL     0x230e                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5c   d014     BRA       0x1e86                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5e   0e78     MOVLW     0x78                                                                                            
001e60   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e62   e009     BZ        0x1e76                                                                                          
001e64   0e58     MOVLW     0x58                                                                                            
001e66   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e68   e006     BZ        0x1e76                                                                                          
001e6a   0e62     MOVLW     0x62                                                                                            
001e6c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e6e   e003     BZ        0x1e76                                                                                          
001e70   0e42     MOVLW     0x42                                                                                            
001e72   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e74   e108     BNZ       0x1e86                                                                                          
001e76   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e78   6ef3     MOVWF     0xf3,0x0                                                                                        
001e7a   0e16     MOVLW     0x16                                                                                            
001e7c   cff3     MOVFF     0xff3,0xfdb                                                                                     
001e7e   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e80   d002     BRA       0x1e86                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e82   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e84   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e86   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e88   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e8a   0b10     ANDLW     0x10                                                                                            
001e8e   0e04     MOVLW     0x4                                                                                             
001e90   cfdb     MOVFF     0xfdb,0x0                                                                                       
001e92   f000                                                                                                               
001e94   0e05     MOVLW     0x5                                                                                             
001e96   50db     MOVF      0xdb,0x0,0x0                                                                                    
001e98   80d8     BSF       0xd8,0x0,0x0                                                                                    
001e9a   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001e8c   e00e     BZ        0x1eaa                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e9c   e206     BC        0x1eaa                                                                                          
001e9e   0e06     MOVLW     0x6                                                                                             
001ea0   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ea2   e103     BNZ       0x1eaa                                                                                          
001ea4   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001ea8   da32     RCALL     0x230e                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eaa   d993     RCALL     0x21d2                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eac   e20a     BC        0x1ec2                                                                                          
001eae   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb0   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001eb2   ffe7                                                                                                               
001eb4   0e15     MOVLW     0x15                                                                                            
001eb6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001eb8   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001eba   0e05     MOVLW     0x5                                                                                             
001ebc   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001ebe   ffdb                                                                                                               
001ec0   d002     BRA       0x1ec6                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec2   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec4   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec6   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec8   cfdb     MOVFF     0xfdb,0x0                                                                                       
001eca   f000                                                                                                               
001ecc   0e16     MOVLW     0x16                                                                                            
001ece   d943     RCALL     0x2156                                                                                          
001ed0   80d8     BSF       0xd8,0x0,0x0                                                                                    
001ed2   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001ed4   e214     BC        0x1efe                                                                                          
002156   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002158   ffe6                                                                                                               
00215a   0e15     MOVLW     0x15                                                                                            
00215c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00215e   ffe6                                                                                                               
002160   0e05     MOVLW     0x5                                                                                             
002162   50db     MOVF      0xdb,0x0,0x0                                                                                    
002164   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002166   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002168   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00216a   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
00216c   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ed6   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ed8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001eda   ffe6                                                                                                               
001edc   0e15     MOVLW     0x15                                                                                            
001ede   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ee0   ffe6                                                                                                               
001ee2   0e04     MOVLW     0x4                                                                                             
001ee4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001ee6   ffe6                                                                                                               
001ee8   0e05     MOVLW     0x5                                                                                             
001eea   50db     MOVF      0xdb,0x0,0x0                                                                                    
001eec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001eee   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
001ef0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ef2   80d8     BSF       0xd8,0x0,0x0                                                                                    
001ef4   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001ef6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001ef8   80d8     BSF       0xd8,0x0,0x0                                                                                    
001efa   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
001efc   d95d     RCALL     0x21b8                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001efe   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f00   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f02   0b01     ANDLW     0x1                                                                                             
001f04   e10b     BNZ       0x1f1c                                                                                          
001f06   0e08     MOVLW     0x8                                                                                             
001f08   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f0a   e008     BZ        0x1f1c                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f0c   d8b0     RCALL     0x206e                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f0e   e001     BZ        0x1f12                                                                                          
001f10   d08d     BRA       0x202c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f12   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f14   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f16   d8bc     RCALL     0x2090                                                                                          
001f18   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1a   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1c   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f1e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f20   e007     BZ        0x1f30                                                                                          
001f22   d986     RCALL     0x2230                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f24   0e17     MOVLW     0x17                                                                                            
001f26   d9ef     RCALL     0x2306                                                                                          
001f28   e103     BNZ       0x1f30                                                                                          
001f2a   1c01     COMF      0x1,0x0,0x0                                                                                     
001f2c   e101     BNZ       0x1f30                                                                                          
001f2e   d07e     BRA       0x202c                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f30   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f32   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f34   e016     BZ        0x1f62                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f36   d97c     RCALL     0x2230                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f38   0e30     MOVLW     0x30                                                                                            
001f3a   6ee6     MOVWF     0xe6,0x0                                                                                        
001f3c   d89d     RCALL     0x2078                                                                                          
001f3e   e102     BNZ       0x1f44                                                                                          
001f40   1c01     COMF      0x1,0x0,0x0                                                                                     
001f42   e074     BZ        0x202c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f44   d975     RCALL     0x2230                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f46   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
001f48   ffe6                                                                                                               
001f4a   ecd6     CALL      0x59ac,0x0                                                                                      
001f4c   f02c                                                                                                               
001f4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f50   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001f54   cff4     MOVFF     0xff4,0x1                                                                                       
001f56   f001                                                                                                               
001f58   0100     MOVLB     0x0                                                                                             
001f5a   1cf3     COMF      0xf3,0x0,0x0                                                                                    
001f5c   e102     BNZ       0x1f62                                                                                          
001f5e   1c01     COMF      0x1,0x0,0x0                                                                                     
001f60   e065     BZ        0x202c                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f62   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f64   cfdb     MOVFF     0xfdb,0x0                                                                                       
001f66   f000                                                                                                               
001f68   0e16     MOVLW     0x16                                                                                            
001f6a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f6c   80d8     BSF       0xd8,0x0,0x0                                                                                    
001f6e   5400     SUBFWB    0x0,0x0,0x0                                                                                     
001f70   e209     BC        0x1f84                                                                                          
001f72   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f74   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
001f76   ffe7                                                                                                               
001f78   0e16     MOVLW     0x16                                                                                            
001f7a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f7c   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
001f7e   0e05     MOVLW     0x5                                                                                             
001f80   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
001f82   ffdb                                                                                                               
001f84   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f86   6ee6     MOVWF     0xe6,0x0                                                                                        
001f88   0e05     MOVLW     0x5                                                                                             
001f8a   d9c9     RCALL     0x231e                                                                                          
001f8c   e14f     BNZ       0x202c                                                                                          
0022d0   ec8e     CALL      0x171c,0x0                                                                                      
0022d2   f00b                                                                                                               
0022d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022d6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0022dc   0900     IORLW     0x0                                                                                             
0022de   0012     RETURN    0x0                                                                                             
00231e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002320   ffe6                                                                                                               
002322   df86     RCALL     0x2230                                                                                          
002324   ef68     GOTO      0x22d0                                                                                          
002326   f011                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f8e   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f90   2adb     INCF      0xdb,0x1,0x0                                                                                    
001f92   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001f94   ffe9                                                                                                               
001f96   0e3a     MOVLW     0x3a                                                                                            
001f98   e301     BNC       0x1f9c                                                                                          
001f9a   2adb     INCF      0xdb,0x1,0x0                                                                                    
001f9c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
001f9e   ffea                                                                                                               
001fa0   0e09     MOVLW     0x9                                                                                             
001fa2   cfef     MOVFF     0xfef,0xfdb                                                                                     
001fa4   ffdb                                                                                                               
001fa6   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fa8   e00e     BZ        0x1fc6                                                                                          
001fb6   0e39     MOVLW     0x39                                                                                            
001fb8   2adb     INCF      0xdb,0x1,0x0                                                                                    
001fba   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
001fbc   ffe9                                                                                                               
001fbe   0e3a     MOVLW     0x3a                                                                                            
001fc0   e3ed     BNC       0x1f9c                                                                                          
001fc2   2adb     INCF      0xdb,0x1,0x0                                                                                    
001fc4   d7eb     BRA       0x1f9c                                                                                          
001faa   d942     RCALL     0x2230                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fac   0e09     MOVLW     0x9                                                                                             
001fae   d9ab     RCALL     0x2306                                                                                          
001fb0   e102     BNZ       0x1fb6                                                                                          
001fb2   1c01     COMF      0x1,0x0,0x0                                                                                     
001fb4   e03b     BZ        0x202c                                                                                          
002306   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002308   ffe6                                                                                                               
00230a   ef3c     GOTO      0x2078                                                                                          
00230c   f010                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fc6   d853     RCALL     0x206e                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fc8   e131     BNZ       0x202c                                                                                          
00206e   0e20     MOVLW     0x20                                                                                            
002070   6ee6     MOVWF     0xe6,0x0                                                                                        
002072   0e08     MOVLW     0x8                                                                                             
002074   ef8f     GOTO      0x231e                                                                                          
002076   f011                                                                                                               
002230   0efc     MOVLW     0xfc                                                                                            
002232   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002234   ffe6                                                                                                               
002236   0efd     MOVLW     0xfd                                                                                            
002238   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00223a   ffe6                                                                                                               
00223c   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fca   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fcc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001fce   ffe6                                                                                                               
001fd0   0e08     MOVLW     0x8                                                                                             
001fd2   d8c1     RCALL     0x2156                                                                                          
001fd4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001fd6   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
001fd8   d85b     RCALL     0x2090                                                                                          
002090   6e00     MOVWF     0x0,0x0                                                                                         
002092   6a01     CLRF      0x1,0x0                                                                                         
002094   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002096   0f01     ADDLW     0x1                                                                                             
002098   d94d     RCALL     0x2334                                                                                          
00209a   5000     MOVF      0x0,0x0,0x0                                                                                     
00209c   26ee     ADDWF     0xee,0x1,0x0                                                                                    
00209e   5001     MOVF      0x1,0x0,0x0                                                                                     
0020a0   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
0020a2   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fda   d02e     BRA       0x2038                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fdc   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fde   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fe0   0a03     XORLW     0x3                                                                                             
001fe2   e01c     BZ        0x201c                                                                                          
001fe4   0a01     XORLW     0x1                                                                                             
001fe6   e014     BZ        0x2010                                                                                          
001fe8   0a03     XORLW     0x3                                                                                             
001fea   e007     BZ        0x1ffa                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ffa   d8f3     RCALL     0x21e2                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ffc   6a05     CLRF      0x5,0x0                                                                                         
001ffe   ae03     BTFSS     0x3,0x7,0x0                                                                                     
002000   d002     BRA       0x2006                                                                                          
002002   6804     SETF      0x4,0x0                                                                                         
002004   6805     SETF      0x5,0x0                                                                                         
002006   d82a     RCALL     0x205c                                                                                          
002008   d8ba     RCALL     0x217e                                                                                          
00200a   c005     MOVFF     0x5,0xfee                                                                                       
00200c   ffee                                                                                                               
00217e   50ee     MOVF      0xee,0x0,0x0                                                                                    
002180   cfef     MOVFF     0xfef,0xfea                                                                                     
002182   ffea                                                                                                               
002184   6ee9     MOVWF     0xe9,0x0                                                                                        
002186   c002     MOVFF     0x2,0xfee                                                                                       
002188   ffee                                                                                                               
00218a   c003     MOVFF     0x3,0xfee                                                                                       
00218c   ffee                                                                                                               
00218e   c004     MOVFF     0x4,0xfee                                                                                       
002190   ffee                                                                                                               
002192   0012     RETURN    0x0                                                                                             
0021e2   0e01     MOVLW     0x1                                                                                             
0021e4   cfdb     MOVFF     0xfdb,0x2                                                                                       
0021e6   f002                                                                                                               
0021e8   0e02     MOVLW     0x2                                                                                             
0021ea   cfdb     MOVFF     0xfdb,0x3                                                                                       
0021ec   f003                                                                                                               
0021ee   6a04     CLRF      0x4,0x0                                                                                         
0021f0   0012     RETURN    0x0                                                                                             
00200e   d014     BRA       0x2038                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002010   d8e8     RCALL     0x21e2                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002012   be03     BTFSC     0x3,0x7,0x0                                                                                     
002014   6804     SETF      0x4,0x0                                                                                         
002016   d822     RCALL     0x205c                                                                                          
002018   d8b2     RCALL     0x217e                                                                                          
00201a   d00e     BRA       0x2038                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201c   d961     RCALL     0x22e0                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00201e   cfdb     MOVFF     0xfdb,0xfef                                                                                     
002020   ffef                                                                                                               
002022   d00a     BRA       0x2038                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fec   d979     RCALL     0x22e0                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fee   cfdb     MOVFF     0xfdb,0xfee                                                                                     
001ff0   ffee                                                                                                               
001ff2   0e02     MOVLW     0x2                                                                                             
001ff4   cfdb     MOVFF     0xfdb,0xfed                                                                                     
001ff6   ffed                                                                                                               
0022e0   debd     RCALL     0x205c                                                                                          
0022e2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0022e4   cfef     MOVFF     0xfef,0xfea                                                                                     
0022e6   ffea                                                                                                               
0022e8   6ee9     MOVWF     0xe9,0x0                                                                                        
0022ea   0e01     MOVLW     0x1                                                                                             
0022ec   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ff8   d01f     BRA       0x2038                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002024   d979     RCALL     0x2318                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002026   e105     BNZ       0x2032                                                                                          
002028   1c01     COMF      0x1,0x0,0x0                                                                                     
00202a   e103     BNZ       0x2032                                                                                          
002078   ecd6     CALL      0x59ac,0x0                                                                                      
00207a   f02c                                                                                                               
00207c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00207e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002080   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002082   cff3     MOVFF     0xff3,0x0                                                                                       
002084   f000                                                                                                               
002086   cff4     MOVFF     0xff4,0x1                                                                                       
002088   f001                                                                                                               
00208a   0100     MOVLB     0x0                                                                                             
00208c   1cf3     COMF      0xf3,0x0,0x0                                                                                    
00208e   0012     RETURN    0x0                                                                                             
0022be   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0022c0   ffe6                                                                                                               
0022c2   ef3c     GOTO      0x2078                                                                                          
0022c4   f010                                                                                                               
002318   df8b     RCALL     0x2230                                                                                          
00231a   ef5f     GOTO      0x22be                                                                                          
00231c   f011                                                                                                               
00202c   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00202e   68f4     SETF      0xf4,0x0                                                                                        
002030   d010     BRA       0x2052                                                                                          
002032   d8fa     RCALL     0x2228                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002034   e301     BNC       0x2038                                                                                          
002036   2adb     INCF      0xdb,0x1,0x0                                                                                    
002228   0e01     MOVLW     0x1                                                                                             
00222a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00222c   0e02     MOVLW     0x2                                                                                             
00222e   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00203e   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002040   cfdb     MOVFF     0xfdb,0x0                                                                                       
002042   f000                                                                                                               
002044   0e02     MOVLW     0x2                                                                                             
002046   cfdb     MOVFF     0xfdb,0x1                                                                                       
002048   f001                                                                                                               
00204a   c000     MOVFF     0x0,0xff3                                                                                       
00204c   fff3                                                                                                               
00204e   c001     MOVFF     0x1,0xff4                                                                                       
002050   fff4                                                                                                               
002052   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002054   ffe1                                                                                                               
002056   cfda     MOVFF     0xfda,0xfe2                                                                                     
002058   ffe2                                                                                                               
00205a   d0cb     BRA       0x21f2                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d16   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d18   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d1a   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d1c   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d1e   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d20   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d26   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d28   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d2a   d004     BRA       0x5d34                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d2c   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d2e   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005d30   d001     BRA       0x5d34                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d12   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d14   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d22   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d24   d007     BRA       0x5d34                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d32   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
005d34   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0059ac   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
0059ae   ffe6                                                                                                               
0059b0   cfda     MOVFF     0xfda,0xfe6                                                                                     
0059b2   ffe6                                                                                                               
0059b4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0059b6   ffd9                                                                                                               
0059b8   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0059ba   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
0059bc   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0059be   cfdb     MOVFF     0xfdb,0x0                                                                                       
0059c0   f000                                                                                                               
0059c2   0efc     MOVLW     0xfc                                                                                            
0059c4   cfdb     MOVFF     0xfdb,0x1                                                                                       
0059c6   f001                                                                                                               
0059c8   0100     MOVLB     0x0                                                                                             
0059ca   0e80     MOVLW     0x80                                                                                            
0059cc   1401     ANDWF     0x1,0x0,0x0                                                                                     
0059ce   e11a     BNZ       0x5a04                                                                                          
0059d0   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
0059d2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0059d4   ffe9                                                                                                               
0059d6   0efc     MOVLW     0xfc                                                                                            
0059d8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0059da   ffea                                                                                                               
0059dc   cfee     MOVFF     0xfee,0xff3                                                                                     
0059de   fff3                                                                                                               
0059e0   cfed     MOVFF     0xfed,0xff4                                                                                     
0059e2   fff4                                                                                                               
0059e4   2aee     INCF      0xee,0x1,0x0                                                                                    
0059e6   0e00     MOVLW     0x0                                                                                             
0059e8   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0059ea   cff3     MOVFF     0xff3,0xfe9                                                                                     
0059ec   ffe9                                                                                                               
0059ee   cff4     MOVFF     0xff4,0xfea                                                                                     
0059f0   ffea                                                                                                               
0059f2   0efd     MOVLW     0xfd                                                                                            
0059f4   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0059f6   ffef                                                                                                               
0059f8   50ef     MOVF      0xef,0x0,0x0                                                                                    
0059fa   6a01     CLRF      0x1,0x0                                                                                         
0059fc   6ef3     MOVWF     0xf3,0x0                                                                                        
0059fe   c001     MOVFF     0x1,0xff4                                                                                       
005a00   fff4                                                                                                               
005a02   d010     BRA       0x5a24                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a04   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a06   50db     MOVF      0xdb,0x0,0x0                                                                                    
005a08   08fe     SUBLW     0xfe                                                                                            
005a0a   e106     BNZ       0x5a18                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a0c   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a0e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005a10   ffe6                                                                                                               
005a12   ecbb     CALL      0x5d76,0x0                                                                                      
005a14   f02e                                                                                                               
005a16   d005     BRA       0x5a22                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a18   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a1a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005a1c   ffe6                                                                                                               
005a1e   ec86     CALL      0x4b0c,0x0                                                                                      
005a20   f025                                                                                                               
005a22   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a24   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
005a26   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005a28   ffda                                                                                                               
005a2a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005a2c   ffd9                                                                                                               
005a2e   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                           ;  $Id: P18F8722.INC,v 1.2 2004/10/06 22:25:07 curtiss Exp $                     C:\MCC18\MPASM\P18F8722.INC
                                           ;  MPASM PIC18F8722 processor include                                            C:\MCC18\MPASM\P18F8722.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8722.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8722.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8722.INC
                                                                                                                            C:\MCC18\MPASM\P18F8722.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8722.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d76   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d78   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d7a   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d7c   d004     BRA       0x5d86                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d7e   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d80   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d82   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d84   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d86   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d88   d7fe     BRA       0x5d86                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d8a   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d8c   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d8e   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
005d90   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b08   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b0a   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b0c   ffe9                                                                                                               
005b0e   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b10   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b12   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b14   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b16   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b18   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b1a   e003     BZ        0x5b22                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b1c   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b1e   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b20   d7fb     BRA       0x5b18                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
005b22   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b24   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b26   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b28   fff8                                                                                                               
005b2a   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b2c   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b2e   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b30   fff7                                                                                                               
005b32   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b34   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b36   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b38   fff6                                                                                                               
005b3a   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b5a   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b5c   cfe3     MOVFF     0xfe3,0x40               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b5e   f040                                                                                                               
005b60   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b62   cfe3     MOVFF     0xfe3,0x41               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b64   f041                                                                                                               
005b66   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b68   cfe3     MOVFF     0xfe3,0x42               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b6a   f042                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b48   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b4a   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b4c   e105     BNZ       0x5b58                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b4e   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b50   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b52   e102     BNZ       0x5b58                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b54   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
005b56   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b3c   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b3e   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b40   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b42   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b44   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b46   e009     BZ        0x5b5a                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b58   d7f4     BRA       0x5b42                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
005b6c   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
